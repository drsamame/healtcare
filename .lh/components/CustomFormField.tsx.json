{
    "sourceFile": "components/CustomFormField.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 47,
            "patches": [
                {
                    "date": 1723501032243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723501609467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,8 @@\n \r\n import 'react-datepicker/dist/react-datepicker.css';\r\n import {\r\n \tFormControl,\r\n-\tFormDescription,\r\n \tFormField,\r\n \tFormItem,\r\n \tFormLabel,\r\n \tFormMessage,\r\n@@ -165,30 +164,12 @@\n \t\t\t\t</FormControl>\r\n \t\t\t);\r\n \t\tcase FormFieldType.SKELETON:\r\n \t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n-\t\tcase FormFieldType.CHECKBOX:\r\n+\t\tcase FormFieldType.PASSWORD:\r\n \t\t\treturn (\r\n \t\t\t\t<FormControl>\r\n-\t\t\t\t\t<div className=\"relative\">\r\n-\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\ttype={passwordVisibility ? 'text' : 'password'}\r\n-\t\t\t\t\t\t\tautoComplete=\"on\"\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\tclassName={`pr-12 ${\r\n-\t\t\t\t\t\t\t\tgetFieldState(name).error && 'text-destructive'\r\n-\t\t\t\t\t\t\t}`}\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t<div\r\n-\t\t\t\t\t\t\tclassName=\"absolute inset-y-0 right-0 flex cursor-pointer items-center p-3 text-muted-foreground\"\r\n-\t\t\t\t\t\t\tonClick={() => setPasswordVisibility(!passwordVisibility)}\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{createElement(passwordVisibility ? EyeOffIcon : EyeIcon, {\r\n-\t\t\t\t\t\t\t\tclassName: 'h-6 w-6',\r\n-\t\t\t\t\t\t\t})}\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</div>\r\n+\t\t\t\t\t<PasswordInput />\r\n \t\t\t\t</FormControl>\r\n \t\t\t);\r\n \t\tdefault:\r\n \t\t\tbreak;\r\n"
                },
                {
                    "date": 1723501620014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,200 @@\n+'use client';\r\n+import React from 'react';\r\n+import DatePicker from 'react-datepicker';\r\n+import { registerLocale } from 'react-datepicker';\r\n+\r\n+import 'react-datepicker/dist/react-datepicker.css';\r\n+import {\r\n+\tFormControl,\r\n+\tFormField,\r\n+\tFormItem,\r\n+\tFormLabel,\r\n+\tFormMessage,\r\n+} from '@/components/ui/form';\r\n+import {\r\n+\tSelect,\r\n+\tSelectValue,\r\n+\tSelectContent,\r\n+\tSelectTrigger,\r\n+} from '@/components/ui/select';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Textarea } from '@/components/ui/textarea';\r\n+import { Checkbox } from '@/components/ui/checkbox';\r\n+import { Control, Form } from 'react-hook-form';\r\n+import Image from 'next/image';\r\n+import 'react-phone-number-input/style.css';\r\n+import PhoneInput, { type Value } from 'react-phone-number-input';\r\n+import { es } from 'date-fns/locale/es';\r\n+import { PasswordInput } from './passwordInput';\r\n+registerLocale('es', es);\r\n+\r\n+export enum FormFieldType {\r\n+\tINPUT = 'input',\r\n+\tTEXTAREA = 'textarea',\r\n+\tPHONE = 'phoneInput',\r\n+\tCHECKBOX = 'checkbox',\r\n+\tDATEPICKER = 'datePicker',\r\n+\tSELECT = 'select',\r\n+\tSKELETON = 'skeleton',\r\n+\tPASSWORD = 'password',\r\n+}\r\n+\r\n+interface Props {\r\n+\tcontrol: Control<any>;\r\n+\tfieldType: FormFieldType;\r\n+\tname: string;\r\n+\tlabel?: string;\r\n+\ticonSrc?: string;\r\n+\ticonAlt?: string;\r\n+\tdisabled?: boolean;\r\n+\tdateFormat?: string;\r\n+\tshowTimeSelect?: boolean;\r\n+\tchildren?: React.ReactNode;\r\n+\tplaceholder?: string;\r\n+\trenderSkeleton?: (field: any) => React.ReactNode;\r\n+}\r\n+\r\n+const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n+\tconst {\r\n+\t\tfieldType,\r\n+\t\ticonSrc,\r\n+\t\ticonAlt,\r\n+\t\tplaceholder,\r\n+\t\tshowTimeSelect,\r\n+\t\tdateFormat,\r\n+\t\trenderSkeleton,\r\n+\t\tname,\r\n+\t\tlabel,\r\n+\t} = props;\r\n+\tswitch (fieldType) {\r\n+\t\tcase FormFieldType.INPUT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t{iconSrc && (\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\tsrc={iconSrc}\r\n+\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n+\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.PHONE:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PhoneInput\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n+\t\t\t\t\t\tinternational\r\n+\t\t\t\t\t\twithCountryCallingCode\r\n+\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.DATEPICKER:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\talt=\"calendar\"\r\n+\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<DatePicker\r\n+\t\t\t\t\t\t\tlocale=\"es\"\r\n+\t\t\t\t\t\t\tselected={field.value}\r\n+\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n+\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n+\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n+\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n+\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.TEXTAREA:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Textarea\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n+\t\t\t\t\t\tdisabled={props.disabled}\r\n+\t\t\t\t\t></Textarea>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SELECT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n+\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n+\t\t\t\t\t\t</SelectTrigger>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n+\t\t\t\t\t\t{props.children}\r\n+\t\t\t\t\t</SelectContent>\r\n+\t\t\t\t</Select>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.CHECKBOX:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n+\t\t\t\t\t\t<Checkbox\r\n+\t\t\t\t\t\t\tid={name}\r\n+\t\t\t\t\t\t\tchecked={field.value}\r\n+\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n+\t\t\t\t\t\t></Checkbox>\r\n+\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n+\t\t\t\t\t\t\t{label}\r\n+\t\t\t\t\t\t</label>\r\n+\t\t\t\t\t</div>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SKELETON:\r\n+\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n+\t\tcase FormFieldType.PASSWORD:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PasswordInput />\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tdefault:\r\n+\t\t\tbreak;\r\n+\t}\r\n+\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n+};\r\n+\r\n+function CustomFormField(props: Props) {\r\n+\tconst { control, fieldType, name, label } = props;\r\n+\treturn (\r\n+\t\t<FormField\r\n+\t\t\tcontrol={control}\r\n+\t\t\tname={name}\r\n+\t\t\trender={({ field }) => (\r\n+\t\t\t\t<FormItem className=\"flex-1\">\r\n+\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n+\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n+\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n+\t\t\t\t</FormItem>\r\n+\t\t\t)}\r\n+\t\t/>\r\n+\t);\r\n+}\r\n+\r\n+export default CustomFormField;\r\n"
                },
                {
                    "date": 1723501636278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,200 @@\n+'use client';\r\n+import React from 'react';\r\n+import DatePicker from 'react-datepicker';\r\n+import { registerLocale } from 'react-datepicker';\r\n+\r\n+import 'react-datepicker/dist/react-datepicker.css';\r\n+import {\r\n+\tFormControl,\r\n+\tFormField,\r\n+\tFormItem,\r\n+\tFormLabel,\r\n+\tFormMessage,\r\n+} from '@/components/ui/form';\r\n+import {\r\n+\tSelect,\r\n+\tSelectValue,\r\n+\tSelectContent,\r\n+\tSelectTrigger,\r\n+} from '@/components/ui/select';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Textarea } from '@/components/ui/textarea';\r\n+import { Checkbox } from '@/components/ui/checkbox';\r\n+import { Control, Form } from 'react-hook-form';\r\n+import Image from 'next/image';\r\n+import 'react-phone-number-input/style.css';\r\n+import PhoneInput, { type Value } from 'react-phone-number-input';\r\n+import { es } from 'date-fns/locale/es';\r\n+import { PasswordInput } from './PasswordInput';\r\n+registerLocale('es', es);\r\n+\r\n+export enum FormFieldType {\r\n+\tINPUT = 'input',\r\n+\tTEXTAREA = 'textarea',\r\n+\tPHONE = 'phoneInput',\r\n+\tCHECKBOX = 'checkbox',\r\n+\tDATEPICKER = 'datePicker',\r\n+\tSELECT = 'select',\r\n+\tSKELETON = 'skeleton',\r\n+\tPASSWORD = 'password',\r\n+}\r\n+\r\n+interface Props {\r\n+\tcontrol: Control<any>;\r\n+\tfieldType: FormFieldType;\r\n+\tname: string;\r\n+\tlabel?: string;\r\n+\ticonSrc?: string;\r\n+\ticonAlt?: string;\r\n+\tdisabled?: boolean;\r\n+\tdateFormat?: string;\r\n+\tshowTimeSelect?: boolean;\r\n+\tchildren?: React.ReactNode;\r\n+\tplaceholder?: string;\r\n+\trenderSkeleton?: (field: any) => React.ReactNode;\r\n+}\r\n+\r\n+const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n+\tconst {\r\n+\t\tfieldType,\r\n+\t\ticonSrc,\r\n+\t\ticonAlt,\r\n+\t\tplaceholder,\r\n+\t\tshowTimeSelect,\r\n+\t\tdateFormat,\r\n+\t\trenderSkeleton,\r\n+\t\tname,\r\n+\t\tlabel,\r\n+\t} = props;\r\n+\tswitch (fieldType) {\r\n+\t\tcase FormFieldType.INPUT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t{iconSrc && (\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\tsrc={iconSrc}\r\n+\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n+\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.PHONE:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PhoneInput\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n+\t\t\t\t\t\tinternational\r\n+\t\t\t\t\t\twithCountryCallingCode\r\n+\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.DATEPICKER:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\talt=\"calendar\"\r\n+\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<DatePicker\r\n+\t\t\t\t\t\t\tlocale=\"es\"\r\n+\t\t\t\t\t\t\tselected={field.value}\r\n+\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n+\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n+\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n+\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n+\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.TEXTAREA:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Textarea\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n+\t\t\t\t\t\tdisabled={props.disabled}\r\n+\t\t\t\t\t></Textarea>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SELECT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n+\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n+\t\t\t\t\t\t</SelectTrigger>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n+\t\t\t\t\t\t{props.children}\r\n+\t\t\t\t\t</SelectContent>\r\n+\t\t\t\t</Select>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.CHECKBOX:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n+\t\t\t\t\t\t<Checkbox\r\n+\t\t\t\t\t\t\tid={name}\r\n+\t\t\t\t\t\t\tchecked={field.value}\r\n+\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n+\t\t\t\t\t\t></Checkbox>\r\n+\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n+\t\t\t\t\t\t\t{label}\r\n+\t\t\t\t\t\t</label>\r\n+\t\t\t\t\t</div>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SKELETON:\r\n+\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n+\t\tcase FormFieldType.PASSWORD:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PasswordInput />\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tdefault:\r\n+\t\t\tbreak;\r\n+\t}\r\n+\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n+};\r\n+\r\n+function CustomFormField(props: Props) {\r\n+\tconst { control, fieldType, name, label } = props;\r\n+\treturn (\r\n+\t\t<FormField\r\n+\t\t\tcontrol={control}\r\n+\t\t\tname={name}\r\n+\t\t\trender={({ field }) => (\r\n+\t\t\t\t<FormItem className=\"flex-1\">\r\n+\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n+\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n+\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n+\t\t\t\t</FormItem>\r\n+\t\t\t)}\r\n+\t\t/>\r\n+\t);\r\n+}\r\n+\r\n+export default CustomFormField;\r\n"
                },
                {
                    "date": 1723501772291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,9 +168,12 @@\n \t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n \t\tcase FormFieldType.PASSWORD:\r\n \t\t\treturn (\r\n \t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PasswordInput />\r\n+\t\t\t\t\t<PasswordInput\r\n+\t\t\t\t\t\tvalue={field.value}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t/>\r\n \t\t\t\t</FormControl>\r\n \t\t\t);\r\n \t\tdefault:\r\n \t\t\tbreak;\r\n"
                },
                {
                    "date": 1723503451184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,203 @@\n+'use client';\r\n+import React from 'react';\r\n+import DatePicker from 'react-datepicker';\r\n+import { registerLocale } from 'react-datepicker';\r\n+\r\n+import 'react-datepicker/dist/react-datepicker.css';\r\n+import {\r\n+\tFormControl,\r\n+\tFormField,\r\n+\tFormItem,\r\n+\tFormLabel,\r\n+\tFormMessage,\r\n+} from '@/components/ui/form';\r\n+import {\r\n+\tSelect,\r\n+\tSelectValue,\r\n+\tSelectContent,\r\n+\tSelectTrigger,\r\n+} from '@/components/ui/select';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Textarea } from '@/components/ui/textarea';\r\n+import { Checkbox } from '@/components/ui/checkbox';\r\n+import { Control, Form } from 'react-hook-form';\r\n+import Image from 'next/image';\r\n+import 'react-phone-number-input/style.css';\r\n+import PhoneInput, { type Value } from 'react-phone-number-input';\r\n+import { es } from 'date-fns/locale/es';\r\n+import { PasswordInput } from './PasswordInput';\r\n+registerLocale('es', es);\r\n+\r\n+export enum FormFieldType {\r\n+\tINPUT = 'input',\r\n+\tTEXTAREA = 'textarea',\r\n+\tPHONE = 'phoneInput',\r\n+\tCHECKBOX = 'checkbox',\r\n+\tDATEPICKER = 'datePicker',\r\n+\tSELECT = 'select',\r\n+\tSKELETON = 'skeleton',\r\n+\tPASSWORD = 'password',\r\n+}\r\n+\r\n+interface Props {\r\n+\tcontrol: Control<any>;\r\n+\tfieldType: FormFieldType;\r\n+\tname: string;\r\n+\tlabel?: string;\r\n+\ticonSrc?: string;\r\n+\ticonAlt?: string;\r\n+\tdisabled?: boolean;\r\n+\tdateFormat?: string;\r\n+\tshowTimeSelect?: boolean;\r\n+\tchildren?: React.ReactNode;\r\n+\tplaceholder?: string;\r\n+\trenderSkeleton?: (field: any) => React.ReactNode;\r\n+}\r\n+\r\n+const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n+\tconst {\r\n+\t\tfieldType,\r\n+\t\ticonSrc,\r\n+\t\ticonAlt,\r\n+\t\tplaceholder,\r\n+\t\tshowTimeSelect,\r\n+\t\tdateFormat,\r\n+\t\trenderSkeleton,\r\n+\t\tname,\r\n+\t\tlabel,\r\n+\t} = props;\r\n+\tswitch (fieldType) {\r\n+\t\tcase FormFieldType.INPUT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t{iconSrc && (\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\tsrc={iconSrc}\r\n+\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n+\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.PHONE:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PhoneInput\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n+\t\t\t\t\t\tinternational\r\n+\t\t\t\t\t\twithCountryCallingCode\r\n+\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.DATEPICKER:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\talt=\"calendar\"\r\n+\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<DatePicker\r\n+\t\t\t\t\t\t\tlocale=\"es\"\r\n+\t\t\t\t\t\t\tselected={field.value}\r\n+\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n+\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n+\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n+\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n+\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.TEXTAREA:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Textarea\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n+\t\t\t\t\t\tdisabled={props.disabled}\r\n+\t\t\t\t\t></Textarea>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SELECT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n+\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n+\t\t\t\t\t\t</SelectTrigger>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n+\t\t\t\t\t\t{props.children}\r\n+\t\t\t\t\t</SelectContent>\r\n+\t\t\t\t</Select>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.CHECKBOX:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n+\t\t\t\t\t\t<Checkbox\r\n+\t\t\t\t\t\t\tid={name}\r\n+\t\t\t\t\t\t\tchecked={field.value}\r\n+\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n+\t\t\t\t\t\t></Checkbox>\r\n+\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n+\t\t\t\t\t\t\t{label}\r\n+\t\t\t\t\t\t</label>\r\n+\t\t\t\t\t</div>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SKELETON:\r\n+\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n+\t\tcase FormFieldType.PASSWORD:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PasswordInput\r\n+\t\t\t\t\t\tvalue={field.value}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tdefault:\r\n+\t\t\tbreak;\r\n+\t}\r\n+\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n+};\r\n+\r\n+function CustomFormField(props: Props) {\r\n+\tconst { control, fieldType, name, label } = props;\r\n+\treturn (\r\n+\t\t<FormField\r\n+\t\t\tcontrol={control}\r\n+\t\t\tname={name}\r\n+\t\t\trender={({ field }) => (\r\n+\t\t\t\t<FormItem className=\"flex-1\">\r\n+\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n+\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n+\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n+\t\t\t\t</FormItem>\r\n+\t\t\t)}\r\n+\t\t/>\r\n+\t);\r\n+}\r\n+\r\n+export default CustomFormField;\r\n"
                },
                {
                    "date": 1723503674005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,203 @@\n+'use client';\r\n+import React from 'react';\r\n+import DatePicker from 'react-datepicker';\r\n+import { registerLocale } from 'react-datepicker';\r\n+\r\n+import 'react-datepicker/dist/react-datepicker.css';\r\n+import {\r\n+\tFormControl,\r\n+\tFormField,\r\n+\tFormItem,\r\n+\tFormLabel,\r\n+\tFormMessage,\r\n+} from '@/components/ui/form';\r\n+import {\r\n+\tSelect,\r\n+\tSelectValue,\r\n+\tSelectContent,\r\n+\tSelectTrigger,\r\n+} from '@/components/ui/select';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Textarea } from '@/components/ui/textarea';\r\n+import { Checkbox } from '@/components/ui/checkbox';\r\n+import { Control, Form } from 'react-hook-form';\r\n+import Image from 'next/image';\r\n+import 'react-phone-number-input/style.css';\r\n+import PhoneInput, { type Value } from 'react-phone-number-input';\r\n+import { es } from 'date-fns/locale/es';\r\n+import { PasswordInput } from '@/components/PasswordInput';\r\n+registerLocale('es', es);\r\n+\r\n+export enum FormFieldType {\r\n+\tINPUT = 'input',\r\n+\tTEXTAREA = 'textarea',\r\n+\tPHONE = 'phoneInput',\r\n+\tCHECKBOX = 'checkbox',\r\n+\tDATEPICKER = 'datePicker',\r\n+\tSELECT = 'select',\r\n+\tSKELETON = 'skeleton',\r\n+\tPASSWORD = 'password',\r\n+}\r\n+\r\n+interface Props {\r\n+\tcontrol: Control<any>;\r\n+\tfieldType: FormFieldType;\r\n+\tname: string;\r\n+\tlabel?: string;\r\n+\ticonSrc?: string;\r\n+\ticonAlt?: string;\r\n+\tdisabled?: boolean;\r\n+\tdateFormat?: string;\r\n+\tshowTimeSelect?: boolean;\r\n+\tchildren?: React.ReactNode;\r\n+\tplaceholder?: string;\r\n+\trenderSkeleton?: (field: any) => React.ReactNode;\r\n+}\r\n+\r\n+const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n+\tconst {\r\n+\t\tfieldType,\r\n+\t\ticonSrc,\r\n+\t\ticonAlt,\r\n+\t\tplaceholder,\r\n+\t\tshowTimeSelect,\r\n+\t\tdateFormat,\r\n+\t\trenderSkeleton,\r\n+\t\tname,\r\n+\t\tlabel,\r\n+\t} = props;\r\n+\tswitch (fieldType) {\r\n+\t\tcase FormFieldType.INPUT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t{iconSrc && (\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\tsrc={iconSrc}\r\n+\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n+\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.PHONE:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PhoneInput\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n+\t\t\t\t\t\tinternational\r\n+\t\t\t\t\t\twithCountryCallingCode\r\n+\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.DATEPICKER:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\talt=\"calendar\"\r\n+\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<DatePicker\r\n+\t\t\t\t\t\t\tlocale=\"es\"\r\n+\t\t\t\t\t\t\tselected={field.value}\r\n+\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n+\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n+\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n+\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n+\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.TEXTAREA:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Textarea\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n+\t\t\t\t\t\tdisabled={props.disabled}\r\n+\t\t\t\t\t></Textarea>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SELECT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n+\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n+\t\t\t\t\t\t</SelectTrigger>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n+\t\t\t\t\t\t{props.children}\r\n+\t\t\t\t\t</SelectContent>\r\n+\t\t\t\t</Select>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.CHECKBOX:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n+\t\t\t\t\t\t<Checkbox\r\n+\t\t\t\t\t\t\tid={name}\r\n+\t\t\t\t\t\t\tchecked={field.value}\r\n+\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n+\t\t\t\t\t\t></Checkbox>\r\n+\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n+\t\t\t\t\t\t\t{label}\r\n+\t\t\t\t\t\t</label>\r\n+\t\t\t\t\t</div>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SKELETON:\r\n+\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n+\t\tcase FormFieldType.PASSWORD:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PasswordInput\r\n+\t\t\t\t\t\tvalue={field.value}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tdefault:\r\n+\t\t\tbreak;\r\n+\t}\r\n+\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n+};\r\n+\r\n+function CustomFormField(props: Props) {\r\n+\tconst { control, fieldType, name, label } = props;\r\n+\treturn (\r\n+\t\t<FormField\r\n+\t\t\tcontrol={control}\r\n+\t\t\tname={name}\r\n+\t\t\trender={({ field }) => (\r\n+\t\t\t\t<FormItem className=\"flex-1\">\r\n+\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n+\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n+\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n+\t\t\t\t</FormItem>\r\n+\t\t\t)}\r\n+\t\t/>\r\n+\t);\r\n+}\r\n+\r\n+export default CustomFormField;\r\n"
                },
                {
                    "date": 1723505492538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,218 +167,14 @@\n \t\tcase FormFieldType.SKELETON:\r\n \t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n \t\tcase FormFieldType.PASSWORD:\r\n \t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PasswordInput\r\n-\t\t\t\t\t\tvalue={field.value}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tdefault:\r\n-\t\t\tbreak;\r\n-\t}\r\n-\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n-};\r\n-\r\n-function CustomFormField(props: Props) {\r\n-\tconst { control, fieldType, name, label } = props;\r\n-\treturn (\r\n-\t\t<FormField\r\n-\t\t\tcontrol={control}\r\n-\t\t\tname={name}\r\n-\t\t\trender={({ field }) => (\r\n-\t\t\t\t<FormItem className=\"flex-1\">\r\n-\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n-\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n-\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n-\t\t\t\t</FormItem>\r\n-\t\t\t)}\r\n-\t\t/>\r\n-\t);\r\n-}\r\n-\r\n-export default CustomFormField;\r\n-'use client';\r\n-import React from 'react';\r\n-import DatePicker from 'react-datepicker';\r\n-import { registerLocale } from 'react-datepicker';\r\n-\r\n-import 'react-datepicker/dist/react-datepicker.css';\r\n-import {\r\n-\tFormControl,\r\n-\tFormField,\r\n-\tFormItem,\r\n-\tFormLabel,\r\n-\tFormMessage,\r\n-} from '@/components/ui/form';\r\n-import {\r\n-\tSelect,\r\n-\tSelectValue,\r\n-\tSelectContent,\r\n-\tSelectTrigger,\r\n-} from '@/components/ui/select';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n-import { Checkbox } from '@/components/ui/checkbox';\r\n-import { Control, Form } from 'react-hook-form';\r\n-import Image from 'next/image';\r\n-import 'react-phone-number-input/style.css';\r\n-import PhoneInput, { type Value } from 'react-phone-number-input';\r\n-import { es } from 'date-fns/locale/es';\r\n-import { PasswordInput } from './PasswordInput';\r\n-registerLocale('es', es);\r\n-\r\n-export enum FormFieldType {\r\n-\tINPUT = 'input',\r\n-\tTEXTAREA = 'textarea',\r\n-\tPHONE = 'phoneInput',\r\n-\tCHECKBOX = 'checkbox',\r\n-\tDATEPICKER = 'datePicker',\r\n-\tSELECT = 'select',\r\n-\tSKELETON = 'skeleton',\r\n-\tPASSWORD = 'password',\r\n-}\r\n-\r\n-interface Props {\r\n-\tcontrol: Control<any>;\r\n-\tfieldType: FormFieldType;\r\n-\tname: string;\r\n-\tlabel?: string;\r\n-\ticonSrc?: string;\r\n-\ticonAlt?: string;\r\n-\tdisabled?: boolean;\r\n-\tdateFormat?: string;\r\n-\tshowTimeSelect?: boolean;\r\n-\tchildren?: React.ReactNode;\r\n-\tplaceholder?: string;\r\n-\trenderSkeleton?: (field: any) => React.ReactNode;\r\n-}\r\n-\r\n-const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n-\tconst {\r\n-\t\tfieldType,\r\n-\t\ticonSrc,\r\n-\t\ticonAlt,\r\n-\t\tplaceholder,\r\n-\t\tshowTimeSelect,\r\n-\t\tdateFormat,\r\n-\t\trenderSkeleton,\r\n-\t\tname,\r\n-\t\tlabel,\r\n-\t} = props;\r\n-\tswitch (fieldType) {\r\n-\t\tcase FormFieldType.INPUT:\r\n-\t\t\treturn (\r\n \t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t{iconSrc && (\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\tsrc={iconSrc}\r\n-\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n-\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n \t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t\t<PasswordInput value={field.value} onChange={field.onChange} />\r\n \t\t\t\t\t</FormControl>\r\n \t\t\t\t</div>\r\n \t\t\t);\r\n-\t\tcase FormFieldType.PHONE:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PhoneInput\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tinternational\r\n-\t\t\t\t\t\twithCountryCallingCode\r\n-\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.DATEPICKER:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\talt=\"calendar\"\r\n-\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<DatePicker\r\n-\t\t\t\t\t\t\tlocale=\"es\"\r\n-\t\t\t\t\t\t\tselected={field.value}\r\n-\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n-\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n-\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n-\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n-\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.TEXTAREA:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Textarea\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n-\t\t\t\t\t\tdisabled={props.disabled}\r\n-\t\t\t\t\t></Textarea>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SELECT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n-\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n-\t\t\t\t\t\t</SelectTrigger>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n-\t\t\t\t\t\t{props.children}\r\n-\t\t\t\t\t</SelectContent>\r\n-\t\t\t\t</Select>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.CHECKBOX:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n-\t\t\t\t\t\t<Checkbox\r\n-\t\t\t\t\t\t\tid={name}\r\n-\t\t\t\t\t\t\tchecked={field.value}\r\n-\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n-\t\t\t\t\t\t></Checkbox>\r\n-\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n-\t\t\t\t\t\t\t{label}\r\n-\t\t\t\t\t\t</label>\r\n-\t\t\t\t\t</div>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SKELETON:\r\n-\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n-\t\tcase FormFieldType.PASSWORD:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PasswordInput\r\n-\t\t\t\t\t\tvalue={field.value}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n \t\tdefault:\r\n \t\t\tbreak;\r\n \t}\r\n \treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n@@ -403,606 +199,4 @@\n \t);\r\n }\r\n \r\n export default CustomFormField;\r\n-'use client';\r\n-import React from 'react';\r\n-import DatePicker from 'react-datepicker';\r\n-import { registerLocale } from 'react-datepicker';\r\n-\r\n-import 'react-datepicker/dist/react-datepicker.css';\r\n-import {\r\n-\tFormControl,\r\n-\tFormField,\r\n-\tFormItem,\r\n-\tFormLabel,\r\n-\tFormMessage,\r\n-} from '@/components/ui/form';\r\n-import {\r\n-\tSelect,\r\n-\tSelectValue,\r\n-\tSelectContent,\r\n-\tSelectTrigger,\r\n-} from '@/components/ui/select';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n-import { Checkbox } from '@/components/ui/checkbox';\r\n-import { Control, Form } from 'react-hook-form';\r\n-import Image from 'next/image';\r\n-import 'react-phone-number-input/style.css';\r\n-import PhoneInput, { type Value } from 'react-phone-number-input';\r\n-import { es } from 'date-fns/locale/es';\r\n-import { PasswordInput } from './PasswordInput';\r\n-registerLocale('es', es);\r\n-\r\n-export enum FormFieldType {\r\n-\tINPUT = 'input',\r\n-\tTEXTAREA = 'textarea',\r\n-\tPHONE = 'phoneInput',\r\n-\tCHECKBOX = 'checkbox',\r\n-\tDATEPICKER = 'datePicker',\r\n-\tSELECT = 'select',\r\n-\tSKELETON = 'skeleton',\r\n-\tPASSWORD = 'password',\r\n-}\r\n-\r\n-interface Props {\r\n-\tcontrol: Control<any>;\r\n-\tfieldType: FormFieldType;\r\n-\tname: string;\r\n-\tlabel?: string;\r\n-\ticonSrc?: string;\r\n-\ticonAlt?: string;\r\n-\tdisabled?: boolean;\r\n-\tdateFormat?: string;\r\n-\tshowTimeSelect?: boolean;\r\n-\tchildren?: React.ReactNode;\r\n-\tplaceholder?: string;\r\n-\trenderSkeleton?: (field: any) => React.ReactNode;\r\n-}\r\n-\r\n-const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n-\tconst {\r\n-\t\tfieldType,\r\n-\t\ticonSrc,\r\n-\t\ticonAlt,\r\n-\t\tplaceholder,\r\n-\t\tshowTimeSelect,\r\n-\t\tdateFormat,\r\n-\t\trenderSkeleton,\r\n-\t\tname,\r\n-\t\tlabel,\r\n-\t} = props;\r\n-\tswitch (fieldType) {\r\n-\t\tcase FormFieldType.INPUT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t{iconSrc && (\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\tsrc={iconSrc}\r\n-\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n-\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.PHONE:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PhoneInput\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tinternational\r\n-\t\t\t\t\t\twithCountryCallingCode\r\n-\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.DATEPICKER:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\talt=\"calendar\"\r\n-\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<DatePicker\r\n-\t\t\t\t\t\t\tlocale=\"es\"\r\n-\t\t\t\t\t\t\tselected={field.value}\r\n-\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n-\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n-\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n-\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n-\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.TEXTAREA:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Textarea\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n-\t\t\t\t\t\tdisabled={props.disabled}\r\n-\t\t\t\t\t></Textarea>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SELECT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n-\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n-\t\t\t\t\t\t</SelectTrigger>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n-\t\t\t\t\t\t{props.children}\r\n-\t\t\t\t\t</SelectContent>\r\n-\t\t\t\t</Select>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.CHECKBOX:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n-\t\t\t\t\t\t<Checkbox\r\n-\t\t\t\t\t\t\tid={name}\r\n-\t\t\t\t\t\t\tchecked={field.value}\r\n-\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n-\t\t\t\t\t\t></Checkbox>\r\n-\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n-\t\t\t\t\t\t\t{label}\r\n-\t\t\t\t\t\t</label>\r\n-\t\t\t\t\t</div>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SKELETON:\r\n-\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n-\t\tcase FormFieldType.PASSWORD:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PasswordInput\r\n-\t\t\t\t\t\tvalue={field.value}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tdefault:\r\n-\t\t\tbreak;\r\n-\t}\r\n-\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n-};\r\n-\r\n-function CustomFormField(props: Props) {\r\n-\tconst { control, fieldType, name, label } = props;\r\n-\treturn (\r\n-\t\t<FormField\r\n-\t\t\tcontrol={control}\r\n-\t\t\tname={name}\r\n-\t\t\trender={({ field }) => (\r\n-\t\t\t\t<FormItem className=\"flex-1\">\r\n-\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n-\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n-\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n-\t\t\t\t</FormItem>\r\n-\t\t\t)}\r\n-\t\t/>\r\n-\t);\r\n-}\r\n-\r\n-export default CustomFormField;\r\n-'use client';\r\n-import React from 'react';\r\n-import DatePicker from 'react-datepicker';\r\n-import { registerLocale } from 'react-datepicker';\r\n-\r\n-import 'react-datepicker/dist/react-datepicker.css';\r\n-import {\r\n-\tFormControl,\r\n-\tFormField,\r\n-\tFormItem,\r\n-\tFormLabel,\r\n-\tFormMessage,\r\n-} from '@/components/ui/form';\r\n-import {\r\n-\tSelect,\r\n-\tSelectValue,\r\n-\tSelectContent,\r\n-\tSelectTrigger,\r\n-} from '@/components/ui/select';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n-import { Checkbox } from '@/components/ui/checkbox';\r\n-import { Control, Form } from 'react-hook-form';\r\n-import Image from 'next/image';\r\n-import 'react-phone-number-input/style.css';\r\n-import PhoneInput, { type Value } from 'react-phone-number-input';\r\n-import { es } from 'date-fns/locale/es';\r\n-import { PasswordInput } from './passwordInput';\r\n-registerLocale('es', es);\r\n-\r\n-export enum FormFieldType {\r\n-\tINPUT = 'input',\r\n-\tTEXTAREA = 'textarea',\r\n-\tPHONE = 'phoneInput',\r\n-\tCHECKBOX = 'checkbox',\r\n-\tDATEPICKER = 'datePicker',\r\n-\tSELECT = 'select',\r\n-\tSKELETON = 'skeleton',\r\n-\tPASSWORD = 'password',\r\n-}\r\n-\r\n-interface Props {\r\n-\tcontrol: Control<any>;\r\n-\tfieldType: FormFieldType;\r\n-\tname: string;\r\n-\tlabel?: string;\r\n-\ticonSrc?: string;\r\n-\ticonAlt?: string;\r\n-\tdisabled?: boolean;\r\n-\tdateFormat?: string;\r\n-\tshowTimeSelect?: boolean;\r\n-\tchildren?: React.ReactNode;\r\n-\tplaceholder?: string;\r\n-\trenderSkeleton?: (field: any) => React.ReactNode;\r\n-}\r\n-\r\n-const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n-\tconst {\r\n-\t\tfieldType,\r\n-\t\ticonSrc,\r\n-\t\ticonAlt,\r\n-\t\tplaceholder,\r\n-\t\tshowTimeSelect,\r\n-\t\tdateFormat,\r\n-\t\trenderSkeleton,\r\n-\t\tname,\r\n-\t\tlabel,\r\n-\t} = props;\r\n-\tswitch (fieldType) {\r\n-\t\tcase FormFieldType.INPUT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t{iconSrc && (\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\tsrc={iconSrc}\r\n-\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n-\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.PHONE:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PhoneInput\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tinternational\r\n-\t\t\t\t\t\twithCountryCallingCode\r\n-\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.DATEPICKER:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\talt=\"calendar\"\r\n-\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<DatePicker\r\n-\t\t\t\t\t\t\tlocale=\"es\"\r\n-\t\t\t\t\t\t\tselected={field.value}\r\n-\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n-\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n-\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n-\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n-\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.TEXTAREA:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Textarea\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n-\t\t\t\t\t\tdisabled={props.disabled}\r\n-\t\t\t\t\t></Textarea>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SELECT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n-\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n-\t\t\t\t\t\t</SelectTrigger>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n-\t\t\t\t\t\t{props.children}\r\n-\t\t\t\t\t</SelectContent>\r\n-\t\t\t\t</Select>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.CHECKBOX:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n-\t\t\t\t\t\t<Checkbox\r\n-\t\t\t\t\t\t\tid={name}\r\n-\t\t\t\t\t\t\tchecked={field.value}\r\n-\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n-\t\t\t\t\t\t></Checkbox>\r\n-\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n-\t\t\t\t\t\t\t{label}\r\n-\t\t\t\t\t\t</label>\r\n-\t\t\t\t\t</div>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SKELETON:\r\n-\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n-\t\tcase FormFieldType.PASSWORD:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PasswordInput />\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tdefault:\r\n-\t\t\tbreak;\r\n-\t}\r\n-\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n-};\r\n-\r\n-function CustomFormField(props: Props) {\r\n-\tconst { control, fieldType, name, label } = props;\r\n-\treturn (\r\n-\t\t<FormField\r\n-\t\t\tcontrol={control}\r\n-\t\t\tname={name}\r\n-\t\t\trender={({ field }) => (\r\n-\t\t\t\t<FormItem className=\"flex-1\">\r\n-\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n-\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n-\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n-\t\t\t\t</FormItem>\r\n-\t\t\t)}\r\n-\t\t/>\r\n-\t);\r\n-}\r\n-\r\n-export default CustomFormField;\r\n-'use client';\r\n-import React from 'react';\r\n-import DatePicker from 'react-datepicker';\r\n-import { registerLocale } from 'react-datepicker';\r\n-\r\n-import 'react-datepicker/dist/react-datepicker.css';\r\n-import {\r\n-\tFormControl,\r\n-\tFormField,\r\n-\tFormItem,\r\n-\tFormLabel,\r\n-\tFormMessage,\r\n-} from '@/components/ui/form';\r\n-import {\r\n-\tSelect,\r\n-\tSelectValue,\r\n-\tSelectContent,\r\n-\tSelectTrigger,\r\n-} from '@/components/ui/select';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n-import { Checkbox } from '@/components/ui/checkbox';\r\n-import { Control, Form } from 'react-hook-form';\r\n-import Image from 'next/image';\r\n-import 'react-phone-number-input/style.css';\r\n-import PhoneInput, { type Value } from 'react-phone-number-input';\r\n-import { es } from 'date-fns/locale/es';\r\n-registerLocale('es', es);\r\n-\r\n-export enum FormFieldType {\r\n-\tINPUT = 'input',\r\n-\tTEXTAREA = 'textarea',\r\n-\tPHONE = 'phoneInput',\r\n-\tCHECKBOX = 'checkbox',\r\n-\tDATEPICKER = 'datePicker',\r\n-\tSELECT = 'select',\r\n-\tSKELETON = 'skeleton',\r\n-\tPASSWORD = 'password',\r\n-}\r\n-\r\n-interface Props {\r\n-\tcontrol: Control<any>;\r\n-\tfieldType: FormFieldType;\r\n-\tname: string;\r\n-\tlabel?: string;\r\n-\ticonSrc?: string;\r\n-\ticonAlt?: string;\r\n-\tdisabled?: boolean;\r\n-\tdateFormat?: string;\r\n-\tshowTimeSelect?: boolean;\r\n-\tchildren?: React.ReactNode;\r\n-\tplaceholder?: string;\r\n-\trenderSkeleton?: (field: any) => React.ReactNode;\r\n-}\r\n-\r\n-const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n-\tconst {\r\n-\t\tfieldType,\r\n-\t\ticonSrc,\r\n-\t\ticonAlt,\r\n-\t\tplaceholder,\r\n-\t\tshowTimeSelect,\r\n-\t\tdateFormat,\r\n-\t\trenderSkeleton,\r\n-\t\tname,\r\n-\t\tlabel,\r\n-\t} = props;\r\n-\tswitch (fieldType) {\r\n-\t\tcase FormFieldType.INPUT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t{iconSrc && (\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\tsrc={iconSrc}\r\n-\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n-\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.PHONE:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PhoneInput\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tinternational\r\n-\t\t\t\t\t\twithCountryCallingCode\r\n-\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.DATEPICKER:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\talt=\"calendar\"\r\n-\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<DatePicker\r\n-\t\t\t\t\t\t\tlocale=\"es\"\r\n-\t\t\t\t\t\t\tselected={field.value}\r\n-\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n-\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n-\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n-\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n-\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.TEXTAREA:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Textarea\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n-\t\t\t\t\t\tdisabled={props.disabled}\r\n-\t\t\t\t\t></Textarea>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SELECT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n-\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n-\t\t\t\t\t\t</SelectTrigger>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n-\t\t\t\t\t\t{props.children}\r\n-\t\t\t\t\t</SelectContent>\r\n-\t\t\t\t</Select>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.CHECKBOX:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n-\t\t\t\t\t\t<Checkbox\r\n-\t\t\t\t\t\t\tid={name}\r\n-\t\t\t\t\t\t\tchecked={field.value}\r\n-\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n-\t\t\t\t\t\t></Checkbox>\r\n-\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n-\t\t\t\t\t\t\t{label}\r\n-\t\t\t\t\t\t</label>\r\n-\t\t\t\t\t</div>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SKELETON:\r\n-\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n-\t\tcase FormFieldType.PASSWORD:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PasswordInput />\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tdefault:\r\n-\t\t\tbreak;\r\n-\t}\r\n-\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n-};\r\n-\r\n-function CustomFormField(props: Props) {\r\n-\tconst { control, fieldType, name, label } = props;\r\n-\treturn (\r\n-\t\t<FormField\r\n-\t\t\tcontrol={control}\r\n-\t\t\tname={name}\r\n-\t\t\trender={({ field }) => (\r\n-\t\t\t\t<FormItem className=\"flex-1\">\r\n-\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n-\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n-\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n-\t\t\t\t</FormItem>\r\n-\t\t\t)}\r\n-\t\t/>\r\n-\t);\r\n-}\r\n-\r\n-export default CustomFormField;\r\n"
                },
                {
                    "date": 1723505506621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n \t\tcase FormFieldType.SKELETON:\r\n \t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n \t\tcase FormFieldType.PASSWORD:\r\n \t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n \t\t\t\t\t<FormControl>\r\n \t\t\t\t\t\t<PasswordInput value={field.value} onChange={field.onChange} />\r\n \t\t\t\t\t</FormControl>\r\n \t\t\t\t</div>\r\n"
                },
                {
                    "date": 1723505513743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,202 @@\n+'use client';\r\n+import React from 'react';\r\n+import DatePicker from 'react-datepicker';\r\n+import { registerLocale } from 'react-datepicker';\r\n+\r\n+import 'react-datepicker/dist/react-datepicker.css';\r\n+import {\r\n+\tFormControl,\r\n+\tFormField,\r\n+\tFormItem,\r\n+\tFormLabel,\r\n+\tFormMessage,\r\n+} from '@/components/ui/form';\r\n+import {\r\n+\tSelect,\r\n+\tSelectValue,\r\n+\tSelectContent,\r\n+\tSelectTrigger,\r\n+} from '@/components/ui/select';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Textarea } from '@/components/ui/textarea';\r\n+import { Checkbox } from '@/components/ui/checkbox';\r\n+import { Control, Form } from 'react-hook-form';\r\n+import Image from 'next/image';\r\n+import 'react-phone-number-input/style.css';\r\n+import PhoneInput, { type Value } from 'react-phone-number-input';\r\n+import { es } from 'date-fns/locale/es';\r\n+import { PasswordInput } from '@/components/PasswordInput';\r\n+registerLocale('es', es);\r\n+\r\n+export enum FormFieldType {\r\n+\tINPUT = 'input',\r\n+\tTEXTAREA = 'textarea',\r\n+\tPHONE = 'phoneInput',\r\n+\tCHECKBOX = 'checkbox',\r\n+\tDATEPICKER = 'datePicker',\r\n+\tSELECT = 'select',\r\n+\tSKELETON = 'skeleton',\r\n+\tPASSWORD = 'password',\r\n+}\r\n+\r\n+interface Props {\r\n+\tcontrol: Control<any>;\r\n+\tfieldType: FormFieldType;\r\n+\tname: string;\r\n+\tlabel?: string;\r\n+\ticonSrc?: string;\r\n+\ticonAlt?: string;\r\n+\tdisabled?: boolean;\r\n+\tdateFormat?: string;\r\n+\tshowTimeSelect?: boolean;\r\n+\tchildren?: React.ReactNode;\r\n+\tplaceholder?: string;\r\n+\trenderSkeleton?: (field: any) => React.ReactNode;\r\n+}\r\n+\r\n+const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n+\tconst {\r\n+\t\tfieldType,\r\n+\t\ticonSrc,\r\n+\t\ticonAlt,\r\n+\t\tplaceholder,\r\n+\t\tshowTimeSelect,\r\n+\t\tdateFormat,\r\n+\t\trenderSkeleton,\r\n+\t\tname,\r\n+\t\tlabel,\r\n+\t} = props;\r\n+\tswitch (fieldType) {\r\n+\t\tcase FormFieldType.INPUT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t{iconSrc && (\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\tsrc={iconSrc}\r\n+\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n+\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.PHONE:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PhoneInput\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n+\t\t\t\t\t\tinternational\r\n+\t\t\t\t\t\twithCountryCallingCode\r\n+\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.DATEPICKER:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\talt=\"calendar\"\r\n+\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<DatePicker\r\n+\t\t\t\t\t\t\tlocale=\"es\"\r\n+\t\t\t\t\t\t\tselected={field.value}\r\n+\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n+\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n+\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n+\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n+\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.TEXTAREA:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Textarea\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n+\t\t\t\t\t\tdisabled={props.disabled}\r\n+\t\t\t\t\t></Textarea>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SELECT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n+\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n+\t\t\t\t\t\t</SelectTrigger>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n+\t\t\t\t\t\t{props.children}\r\n+\t\t\t\t\t</SelectContent>\r\n+\t\t\t\t</Select>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.CHECKBOX:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n+\t\t\t\t\t\t<Checkbox\r\n+\t\t\t\t\t\t\tid={name}\r\n+\t\t\t\t\t\t\tchecked={field.value}\r\n+\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n+\t\t\t\t\t\t></Checkbox>\r\n+\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n+\t\t\t\t\t\t\t{label}\r\n+\t\t\t\t\t\t</label>\r\n+\t\t\t\t\t</div>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SKELETON:\r\n+\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n+\t\tcase FormFieldType.PASSWORD:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<PasswordInput value={field.value} onChange={field.onChange} />\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tdefault:\r\n+\t\t\tbreak;\r\n+\t}\r\n+\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n+};\r\n+\r\n+function CustomFormField(props: Props) {\r\n+\tconst { control, fieldType, name, label } = props;\r\n+\treturn (\r\n+\t\t<FormField\r\n+\t\t\tcontrol={control}\r\n+\t\t\tname={name}\r\n+\t\t\trender={({ field }) => (\r\n+\t\t\t\t<FormItem className=\"flex-1\">\r\n+\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n+\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n+\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n+\t\t\t\t</FormItem>\r\n+\t\t\t)}\r\n+\t\t/>\r\n+\t);\r\n+}\r\n+\r\n+export default CustomFormField;\r\n"
                },
                {
                    "date": 1723507881034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,202 @@\n+'use client';\r\n+import React from 'react';\r\n+import DatePicker from 'react-datepicker';\r\n+import { registerLocale } from 'react-datepicker';\r\n+\r\n+import 'react-datepicker/dist/react-datepicker.css';\r\n+import {\r\n+\tFormControl,\r\n+\tFormField,\r\n+\tFormItem,\r\n+\tFormLabel,\r\n+\tFormMessage,\r\n+} from '@/components/ui/form';\r\n+import {\r\n+\tSelect,\r\n+\tSelectValue,\r\n+\tSelectContent,\r\n+\tSelectTrigger,\r\n+} from '@/components/ui/select';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Textarea } from '@/components/ui/textarea';\r\n+import { Checkbox } from '@/components/ui/checkbox';\r\n+import { Control, Form } from 'react-hook-form';\r\n+import Image from 'next/image';\r\n+import 'react-phone-number-input/style.css';\r\n+import PhoneInput, { type Value } from 'react-phone-number-input';\r\n+import { es } from 'date-fns/locale/es';\r\n+import { PasswordInput } from '@/components/PasswordInput';\r\n+registerLocale('es', es);\r\n+\r\n+export enum FormFieldType {\r\n+\tINPUT = 'input',\r\n+\tTEXTAREA = 'textarea',\r\n+\tPHONE = 'phoneInput',\r\n+\tCHECKBOX = 'checkbox',\r\n+\tDATEPICKER = 'datePicker',\r\n+\tSELECT = 'select',\r\n+\tSKELETON = 'skeleton',\r\n+\tPASSWORD = 'password',\r\n+}\r\n+\r\n+interface Props {\r\n+\tcontrol: Control<any>;\r\n+\tfieldType: FormFieldType;\r\n+\tname: string;\r\n+\tlabel?: string;\r\n+\ticonSrc?: string;\r\n+\ticonAlt?: string;\r\n+\tdisabled?: boolean;\r\n+\tdateFormat?: string;\r\n+\tshowTimeSelect?: boolean;\r\n+\tchildren?: React.ReactNode;\r\n+\tplaceholder?: string;\r\n+\trenderSkeleton?: (field: any) => React.ReactNode;\r\n+}\r\n+\r\n+const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n+\tconst {\r\n+\t\tfieldType,\r\n+\t\ticonSrc,\r\n+\t\ticonAlt,\r\n+\t\tplaceholder,\r\n+\t\tshowTimeSelect,\r\n+\t\tdateFormat,\r\n+\t\trenderSkeleton,\r\n+\t\tname,\r\n+\t\tlabel,\r\n+\t} = props;\r\n+\tswitch (fieldType) {\r\n+\t\tcase FormFieldType.INPUT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t{iconSrc && (\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\tsrc={iconSrc}\r\n+\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n+\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.PHONE:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PhoneInput\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n+\t\t\t\t\t\tinternational\r\n+\t\t\t\t\t\twithCountryCallingCode\r\n+\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.DATEPICKER:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\talt=\"calendar\"\r\n+\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<DatePicker\r\n+\t\t\t\t\t\t\tlocale=\"es\"\r\n+\t\t\t\t\t\t\tselected={field.value}\r\n+\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n+\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n+\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n+\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n+\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.TEXTAREA:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Textarea\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n+\t\t\t\t\t\tdisabled={props.disabled}\r\n+\t\t\t\t\t></Textarea>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SELECT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n+\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n+\t\t\t\t\t\t</SelectTrigger>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n+\t\t\t\t\t\t{props.children}\r\n+\t\t\t\t\t</SelectContent>\r\n+\t\t\t\t</Select>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.CHECKBOX:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n+\t\t\t\t\t\t<Checkbox\r\n+\t\t\t\t\t\t\tid={name}\r\n+\t\t\t\t\t\t\tchecked={field.value}\r\n+\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n+\t\t\t\t\t\t></Checkbox>\r\n+\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n+\t\t\t\t\t\t\t{label}\r\n+\t\t\t\t\t\t</label>\r\n+\t\t\t\t\t</div>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SKELETON:\r\n+\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n+\t\tcase FormFieldType.PASSWORD:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<PasswordInput placeholder={placeholder} value={field.value} onChange={field.onChange} />\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tdefault:\r\n+\t\t\tbreak;\r\n+\t}\r\n+\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n+};\r\n+\r\n+function CustomFormField(props: Props) {\r\n+\tconst { control, fieldType, name, label } = props;\r\n+\treturn (\r\n+\t\t<FormField\r\n+\t\t\tcontrol={control}\r\n+\t\t\tname={name}\r\n+\t\t\trender={({ field }) => (\r\n+\t\t\t\t<FormItem className=\"flex-1\">\r\n+\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n+\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n+\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n+\t\t\t\t</FormItem>\r\n+\t\t\t)}\r\n+\t\t/>\r\n+\t);\r\n+}\r\n+\r\n+export default CustomFormField;\r\n"
                },
                {
                    "date": 1723528808712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,408 +199,4 @@\n \t);\r\n }\r\n \r\n export default CustomFormField;\r\n-'use client';\r\n-import React from 'react';\r\n-import DatePicker from 'react-datepicker';\r\n-import { registerLocale } from 'react-datepicker';\r\n-\r\n-import 'react-datepicker/dist/react-datepicker.css';\r\n-import {\r\n-\tFormControl,\r\n-\tFormField,\r\n-\tFormItem,\r\n-\tFormLabel,\r\n-\tFormMessage,\r\n-} from '@/components/ui/form';\r\n-import {\r\n-\tSelect,\r\n-\tSelectValue,\r\n-\tSelectContent,\r\n-\tSelectTrigger,\r\n-} from '@/components/ui/select';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n-import { Checkbox } from '@/components/ui/checkbox';\r\n-import { Control, Form } from 'react-hook-form';\r\n-import Image from 'next/image';\r\n-import 'react-phone-number-input/style.css';\r\n-import PhoneInput, { type Value } from 'react-phone-number-input';\r\n-import { es } from 'date-fns/locale/es';\r\n-import { PasswordInput } from '@/components/PasswordInput';\r\n-registerLocale('es', es);\r\n-\r\n-export enum FormFieldType {\r\n-\tINPUT = 'input',\r\n-\tTEXTAREA = 'textarea',\r\n-\tPHONE = 'phoneInput',\r\n-\tCHECKBOX = 'checkbox',\r\n-\tDATEPICKER = 'datePicker',\r\n-\tSELECT = 'select',\r\n-\tSKELETON = 'skeleton',\r\n-\tPASSWORD = 'password',\r\n-}\r\n-\r\n-interface Props {\r\n-\tcontrol: Control<any>;\r\n-\tfieldType: FormFieldType;\r\n-\tname: string;\r\n-\tlabel?: string;\r\n-\ticonSrc?: string;\r\n-\ticonAlt?: string;\r\n-\tdisabled?: boolean;\r\n-\tdateFormat?: string;\r\n-\tshowTimeSelect?: boolean;\r\n-\tchildren?: React.ReactNode;\r\n-\tplaceholder?: string;\r\n-\trenderSkeleton?: (field: any) => React.ReactNode;\r\n-}\r\n-\r\n-const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n-\tconst {\r\n-\t\tfieldType,\r\n-\t\ticonSrc,\r\n-\t\ticonAlt,\r\n-\t\tplaceholder,\r\n-\t\tshowTimeSelect,\r\n-\t\tdateFormat,\r\n-\t\trenderSkeleton,\r\n-\t\tname,\r\n-\t\tlabel,\r\n-\t} = props;\r\n-\tswitch (fieldType) {\r\n-\t\tcase FormFieldType.INPUT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t{iconSrc && (\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\tsrc={iconSrc}\r\n-\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n-\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.PHONE:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PhoneInput\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tinternational\r\n-\t\t\t\t\t\twithCountryCallingCode\r\n-\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.DATEPICKER:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\talt=\"calendar\"\r\n-\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<DatePicker\r\n-\t\t\t\t\t\t\tlocale=\"es\"\r\n-\t\t\t\t\t\t\tselected={field.value}\r\n-\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n-\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n-\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n-\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n-\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.TEXTAREA:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Textarea\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n-\t\t\t\t\t\tdisabled={props.disabled}\r\n-\t\t\t\t\t></Textarea>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SELECT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n-\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n-\t\t\t\t\t\t</SelectTrigger>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n-\t\t\t\t\t\t{props.children}\r\n-\t\t\t\t\t</SelectContent>\r\n-\t\t\t\t</Select>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.CHECKBOX:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n-\t\t\t\t\t\t<Checkbox\r\n-\t\t\t\t\t\t\tid={name}\r\n-\t\t\t\t\t\t\tchecked={field.value}\r\n-\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n-\t\t\t\t\t\t></Checkbox>\r\n-\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n-\t\t\t\t\t\t\t{label}\r\n-\t\t\t\t\t\t</label>\r\n-\t\t\t\t\t</div>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SKELETON:\r\n-\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n-\t\tcase FormFieldType.PASSWORD:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<PasswordInput value={field.value} onChange={field.onChange} />\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tdefault:\r\n-\t\t\tbreak;\r\n-\t}\r\n-\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n-};\r\n-\r\n-function CustomFormField(props: Props) {\r\n-\tconst { control, fieldType, name, label } = props;\r\n-\treturn (\r\n-\t\t<FormField\r\n-\t\t\tcontrol={control}\r\n-\t\t\tname={name}\r\n-\t\t\trender={({ field }) => (\r\n-\t\t\t\t<FormItem className=\"flex-1\">\r\n-\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n-\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n-\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n-\t\t\t\t</FormItem>\r\n-\t\t\t)}\r\n-\t\t/>\r\n-\t);\r\n-}\r\n-\r\n-export default CustomFormField;\r\n-'use client';\r\n-import React from 'react';\r\n-import DatePicker from 'react-datepicker';\r\n-import { registerLocale } from 'react-datepicker';\r\n-\r\n-import 'react-datepicker/dist/react-datepicker.css';\r\n-import {\r\n-\tFormControl,\r\n-\tFormField,\r\n-\tFormItem,\r\n-\tFormLabel,\r\n-\tFormMessage,\r\n-} from '@/components/ui/form';\r\n-import {\r\n-\tSelect,\r\n-\tSelectValue,\r\n-\tSelectContent,\r\n-\tSelectTrigger,\r\n-} from '@/components/ui/select';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n-import { Checkbox } from '@/components/ui/checkbox';\r\n-import { Control, Form } from 'react-hook-form';\r\n-import Image from 'next/image';\r\n-import 'react-phone-number-input/style.css';\r\n-import PhoneInput, { type Value } from 'react-phone-number-input';\r\n-import { es } from 'date-fns/locale/es';\r\n-import { PasswordInput } from '@/components/PasswordInput';\r\n-registerLocale('es', es);\r\n-\r\n-export enum FormFieldType {\r\n-\tINPUT = 'input',\r\n-\tTEXTAREA = 'textarea',\r\n-\tPHONE = 'phoneInput',\r\n-\tCHECKBOX = 'checkbox',\r\n-\tDATEPICKER = 'datePicker',\r\n-\tSELECT = 'select',\r\n-\tSKELETON = 'skeleton',\r\n-\tPASSWORD = 'password',\r\n-}\r\n-\r\n-interface Props {\r\n-\tcontrol: Control<any>;\r\n-\tfieldType: FormFieldType;\r\n-\tname: string;\r\n-\tlabel?: string;\r\n-\ticonSrc?: string;\r\n-\ticonAlt?: string;\r\n-\tdisabled?: boolean;\r\n-\tdateFormat?: string;\r\n-\tshowTimeSelect?: boolean;\r\n-\tchildren?: React.ReactNode;\r\n-\tplaceholder?: string;\r\n-\trenderSkeleton?: (field: any) => React.ReactNode;\r\n-}\r\n-\r\n-const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n-\tconst {\r\n-\t\tfieldType,\r\n-\t\ticonSrc,\r\n-\t\ticonAlt,\r\n-\t\tplaceholder,\r\n-\t\tshowTimeSelect,\r\n-\t\tdateFormat,\r\n-\t\trenderSkeleton,\r\n-\t\tname,\r\n-\t\tlabel,\r\n-\t} = props;\r\n-\tswitch (fieldType) {\r\n-\t\tcase FormFieldType.INPUT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t{iconSrc && (\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\tsrc={iconSrc}\r\n-\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n-\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.PHONE:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PhoneInput\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tinternational\r\n-\t\t\t\t\t\twithCountryCallingCode\r\n-\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.DATEPICKER:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\talt=\"calendar\"\r\n-\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<DatePicker\r\n-\t\t\t\t\t\t\tlocale=\"es\"\r\n-\t\t\t\t\t\t\tselected={field.value}\r\n-\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n-\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n-\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n-\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n-\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.TEXTAREA:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Textarea\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n-\t\t\t\t\t\tdisabled={props.disabled}\r\n-\t\t\t\t\t></Textarea>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SELECT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n-\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n-\t\t\t\t\t\t</SelectTrigger>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n-\t\t\t\t\t\t{props.children}\r\n-\t\t\t\t\t</SelectContent>\r\n-\t\t\t\t</Select>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.CHECKBOX:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n-\t\t\t\t\t\t<Checkbox\r\n-\t\t\t\t\t\t\tid={name}\r\n-\t\t\t\t\t\t\tchecked={field.value}\r\n-\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n-\t\t\t\t\t\t></Checkbox>\r\n-\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n-\t\t\t\t\t\t\t{label}\r\n-\t\t\t\t\t\t</label>\r\n-\t\t\t\t\t</div>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SKELETON:\r\n-\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n-\t\tcase FormFieldType.PASSWORD:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<PasswordInput value={field.value} onChange={field.onChange} />\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tdefault:\r\n-\t\t\tbreak;\r\n-\t}\r\n-\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n-};\r\n-\r\n-function CustomFormField(props: Props) {\r\n-\tconst { control, fieldType, name, label } = props;\r\n-\treturn (\r\n-\t\t<FormField\r\n-\t\t\tcontrol={control}\r\n-\t\t\tname={name}\r\n-\t\t\trender={({ field }) => (\r\n-\t\t\t\t<FormItem className=\"flex-1\">\r\n-\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n-\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n-\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n-\t\t\t\t</FormItem>\r\n-\t\t\t)}\r\n-\t\t/>\r\n-\t);\r\n-}\r\n-\r\n-export default CustomFormField;\r\n"
                },
                {
                    "date": 1727130973452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,8 @@\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<PhoneInput\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tinternational\r\n \t\t\t\t\t\twithCountryCallingCode\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n \t\t\t\t\t\tclassName=\"input-phone\"\r\n"
                },
                {
                    "date": 1727131022464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,8 @@\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<PhoneInput\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\twithCountryCallingCode\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n \t\t\t\t\t\tclassName=\"input-phone\"\r\n \t\t\t\t\t/>\r\n"
                },
                {
                    "date": 1727131193280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,202 @@\n+'use client';\r\n+import React from 'react';\r\n+import DatePicker from 'react-datepicker';\r\n+import { registerLocale } from 'react-datepicker';\r\n+\r\n+import 'react-datepicker/dist/react-datepicker.css';\r\n+import {\r\n+\tFormControl,\r\n+\tFormField,\r\n+\tFormItem,\r\n+\tFormLabel,\r\n+\tFormMessage,\r\n+} from '@/components/ui/form';\r\n+import {\r\n+\tSelect,\r\n+\tSelectValue,\r\n+\tSelectContent,\r\n+\tSelectTrigger,\r\n+} from '@/components/ui/select';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Textarea } from '@/components/ui/textarea';\r\n+import { Checkbox } from '@/components/ui/checkbox';\r\n+import { Control, Form } from 'react-hook-form';\r\n+import Image from 'next/image';\r\n+import 'react-phone-number-input/style.css';\r\n+import PhoneInput, { type Value } from 'react-phone-number-input';\r\n+import { es } from 'date-fns/locale/es';\r\n+import { PasswordInput } from '@/components/PasswordInput';\r\n+registerLocale('es', es);\r\n+\r\n+export enum FormFieldType {\r\n+\tINPUT = 'input',\r\n+\tTEXTAREA = 'textarea',\r\n+\tPHONE = 'phoneInput',\r\n+\tCHECKBOX = 'checkbox',\r\n+\tDATEPICKER = 'datePicker',\r\n+\tSELECT = 'select',\r\n+\tSKELETON = 'skeleton',\r\n+\tPASSWORD = 'password',\r\n+}\r\n+\r\n+interface Props {\r\n+\tcontrol: Control<any>;\r\n+\tfieldType: FormFieldType;\r\n+\tname: string;\r\n+\tlabel?: string;\r\n+\ticonSrc?: string;\r\n+\ticonAlt?: string;\r\n+\tdisabled?: boolean;\r\n+\tdateFormat?: string;\r\n+\tshowTimeSelect?: boolean;\r\n+\tchildren?: React.ReactNode;\r\n+\tplaceholder?: string;\r\n+\trenderSkeleton?: (field: any) => React.ReactNode;\r\n+}\r\n+\r\n+const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n+\tconst {\r\n+\t\tfieldType,\r\n+\t\ticonSrc,\r\n+\t\ticonAlt,\r\n+\t\tplaceholder,\r\n+\t\tshowTimeSelect,\r\n+\t\tdateFormat,\r\n+\t\trenderSkeleton,\r\n+\t\tname,\r\n+\t\tlabel,\r\n+\t} = props;\r\n+\tswitch (fieldType) {\r\n+\t\tcase FormFieldType.INPUT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t{iconSrc && (\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\tsrc={iconSrc}\r\n+\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n+\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.PHONE:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PhoneInput\r\n+\t\t\t\t\t\tlimitMaxLength={true}\r\n+\t\t\t\t\t\tmaxLength={9}\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n+\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.DATEPICKER:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\talt=\"calendar\"\r\n+\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<DatePicker\r\n+\t\t\t\t\t\t\tlocale=\"es\"\r\n+\t\t\t\t\t\t\tselected={field.value}\r\n+\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n+\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n+\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n+\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n+\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.TEXTAREA:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Textarea\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n+\t\t\t\t\t\tdisabled={props.disabled}\r\n+\t\t\t\t\t></Textarea>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SELECT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n+\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n+\t\t\t\t\t\t</SelectTrigger>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n+\t\t\t\t\t\t{props.children}\r\n+\t\t\t\t\t</SelectContent>\r\n+\t\t\t\t</Select>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.CHECKBOX:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n+\t\t\t\t\t\t<Checkbox\r\n+\t\t\t\t\t\t\tid={name}\r\n+\t\t\t\t\t\t\tchecked={field.value}\r\n+\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n+\t\t\t\t\t\t></Checkbox>\r\n+\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n+\t\t\t\t\t\t\t{label}\r\n+\t\t\t\t\t\t</label>\r\n+\t\t\t\t\t</div>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SKELETON:\r\n+\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n+\t\tcase FormFieldType.PASSWORD:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<PasswordInput placeholder={placeholder} value={field.value} onChange={field.onChange} />\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tdefault:\r\n+\t\t\tbreak;\r\n+\t}\r\n+\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n+};\r\n+\r\n+function CustomFormField(props: Props) {\r\n+\tconst { control, fieldType, name, label } = props;\r\n+\treturn (\r\n+\t\t<FormField\r\n+\t\t\tcontrol={control}\r\n+\t\t\tname={name}\r\n+\t\t\trender={({ field }) => (\r\n+\t\t\t\t<FormItem className=\"flex-1\">\r\n+\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n+\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n+\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n+\t\t\t\t</FormItem>\r\n+\t\t\t)}\r\n+\t\t/>\r\n+\t);\r\n+}\r\n+\r\n+export default CustomFormField;\r\n"
                },
                {
                    "date": 1727131232750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n \t\t\treturn (\r\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<PhoneInput\r\n \t\t\t\t\t\tlimitMaxLength={true}\r\n-\t\t\t\t\t\tmaxLength={9}\r\n+\t\t\t\t\t\tmaxLength={11}\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tdefaultCountry=\"PE\"\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n@@ -199,204 +199,4 @@\n \t);\r\n }\r\n \r\n export default CustomFormField;\r\n-'use client';\r\n-import React from 'react';\r\n-import DatePicker from 'react-datepicker';\r\n-import { registerLocale } from 'react-datepicker';\r\n-\r\n-import 'react-datepicker/dist/react-datepicker.css';\r\n-import {\r\n-\tFormControl,\r\n-\tFormField,\r\n-\tFormItem,\r\n-\tFormLabel,\r\n-\tFormMessage,\r\n-} from '@/components/ui/form';\r\n-import {\r\n-\tSelect,\r\n-\tSelectValue,\r\n-\tSelectContent,\r\n-\tSelectTrigger,\r\n-} from '@/components/ui/select';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n-import { Checkbox } from '@/components/ui/checkbox';\r\n-import { Control, Form } from 'react-hook-form';\r\n-import Image from 'next/image';\r\n-import 'react-phone-number-input/style.css';\r\n-import PhoneInput, { type Value } from 'react-phone-number-input';\r\n-import { es } from 'date-fns/locale/es';\r\n-import { PasswordInput } from '@/components/PasswordInput';\r\n-registerLocale('es', es);\r\n-\r\n-export enum FormFieldType {\r\n-\tINPUT = 'input',\r\n-\tTEXTAREA = 'textarea',\r\n-\tPHONE = 'phoneInput',\r\n-\tCHECKBOX = 'checkbox',\r\n-\tDATEPICKER = 'datePicker',\r\n-\tSELECT = 'select',\r\n-\tSKELETON = 'skeleton',\r\n-\tPASSWORD = 'password',\r\n-}\r\n-\r\n-interface Props {\r\n-\tcontrol: Control<any>;\r\n-\tfieldType: FormFieldType;\r\n-\tname: string;\r\n-\tlabel?: string;\r\n-\ticonSrc?: string;\r\n-\ticonAlt?: string;\r\n-\tdisabled?: boolean;\r\n-\tdateFormat?: string;\r\n-\tshowTimeSelect?: boolean;\r\n-\tchildren?: React.ReactNode;\r\n-\tplaceholder?: string;\r\n-\trenderSkeleton?: (field: any) => React.ReactNode;\r\n-}\r\n-\r\n-const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n-\tconst {\r\n-\t\tfieldType,\r\n-\t\ticonSrc,\r\n-\t\ticonAlt,\r\n-\t\tplaceholder,\r\n-\t\tshowTimeSelect,\r\n-\t\tdateFormat,\r\n-\t\trenderSkeleton,\r\n-\t\tname,\r\n-\t\tlabel,\r\n-\t} = props;\r\n-\tswitch (fieldType) {\r\n-\t\tcase FormFieldType.INPUT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t{iconSrc && (\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\tsrc={iconSrc}\r\n-\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n-\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.PHONE:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PhoneInput\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.DATEPICKER:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\talt=\"calendar\"\r\n-\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<DatePicker\r\n-\t\t\t\t\t\t\tlocale=\"es\"\r\n-\t\t\t\t\t\t\tselected={field.value}\r\n-\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n-\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n-\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n-\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n-\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.TEXTAREA:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Textarea\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n-\t\t\t\t\t\tdisabled={props.disabled}\r\n-\t\t\t\t\t></Textarea>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SELECT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n-\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n-\t\t\t\t\t\t</SelectTrigger>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n-\t\t\t\t\t\t{props.children}\r\n-\t\t\t\t\t</SelectContent>\r\n-\t\t\t\t</Select>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.CHECKBOX:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n-\t\t\t\t\t\t<Checkbox\r\n-\t\t\t\t\t\t\tid={name}\r\n-\t\t\t\t\t\t\tchecked={field.value}\r\n-\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n-\t\t\t\t\t\t></Checkbox>\r\n-\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n-\t\t\t\t\t\t\t{label}\r\n-\t\t\t\t\t\t</label>\r\n-\t\t\t\t\t</div>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SKELETON:\r\n-\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n-\t\tcase FormFieldType.PASSWORD:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<PasswordInput placeholder={placeholder} value={field.value} onChange={field.onChange} />\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tdefault:\r\n-\t\t\tbreak;\r\n-\t}\r\n-\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n-};\r\n-\r\n-function CustomFormField(props: Props) {\r\n-\tconst { control, fieldType, name, label } = props;\r\n-\treturn (\r\n-\t\t<FormField\r\n-\t\t\tcontrol={control}\r\n-\t\t\tname={name}\r\n-\t\t\trender={({ field }) => (\r\n-\t\t\t\t<FormItem className=\"flex-1\">\r\n-\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n-\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n-\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n-\t\t\t\t</FormItem>\r\n-\t\t\t)}\r\n-\t\t/>\r\n-\t);\r\n-}\r\n-\r\n-export default CustomFormField;\r\n"
                },
                {
                    "date": 1727137183671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,203 @@\n+'use client';\r\n+import React from 'react';\r\n+import DatePicker from 'react-datepicker';\r\n+import { registerLocale } from 'react-datepicker';\r\n+\r\n+import 'react-datepicker/dist/react-datepicker.css';\r\n+import {\r\n+\tFormControl,\r\n+\tFormField,\r\n+\tFormItem,\r\n+\tFormLabel,\r\n+\tFormMessage,\r\n+} from '@/components/ui/form';\r\n+import {\r\n+\tSelect,\r\n+\tSelectValue,\r\n+\tSelectContent,\r\n+\tSelectTrigger,\r\n+} from '@/components/ui/select';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Textarea } from '@/components/ui/textarea';\r\n+import { Checkbox } from '@/components/ui/checkbox';\r\n+import { Control, Form } from 'react-hook-form';\r\n+import Image from 'next/image';\r\n+import 'react-phone-number-input/style.css';\r\n+import PhoneInput, { type Value } from 'react-phone-number-input';\r\n+import { es } from 'date-fns/locale/es';\r\n+import { PasswordInput } from '@/components/PasswordInput';\r\n+registerLocale('es', es);\r\n+\r\n+export enum FormFieldType {\r\n+\tINPUT = 'input',\r\n+\tTEXTAREA = 'textarea',\r\n+\tPHONE = 'phoneInput',\r\n+\tCHECKBOX = 'checkbox',\r\n+\tDATEPICKER = 'datePicker',\r\n+\tSELECT = 'select',\r\n+\tSKELETON = 'skeleton',\r\n+\tPASSWORD = 'password',\r\n+}\r\n+\r\n+interface Props {\r\n+\tcontrol: Control<any>;\r\n+\tfieldType: FormFieldType;\r\n+\tname: string;\r\n+\tlabel?: string;\r\n+\ticonSrc?: string;\r\n+\ticonAlt?: string;\r\n+\tdisabled?: boolean;\r\n+\tdateFormat?: string;\r\n+\tshowTimeSelect?: boolean;\r\n+\tchildren?: React.ReactNode;\r\n+\tplaceholder?: string;\r\n+\trenderSkeleton?: (field: any) => React.ReactNode;\r\n+}\r\n+\r\n+const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n+\tconst {\r\n+\t\tfieldType,\r\n+\t\ticonSrc,\r\n+\t\ticonAlt,\r\n+\t\tplaceholder,\r\n+\t\tshowTimeSelect,\r\n+\t\tdateFormat,\r\n+\t\trenderSkeleton,\r\n+\t\tname,\r\n+\t\tlabel,\r\n+\t} = props;\r\n+\tswitch (fieldType) {\r\n+\t\tcase FormFieldType.INPUT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t{iconSrc && (\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\tsrc={iconSrc}\r\n+\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n+\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.PHONE:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PhoneInput\r\n+\t\t\t\t\t\tlimitMaxLength={true}\r\n+\t\t\t\t\t\tmaxLength={11}\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\tinternational={false}\r\n+\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n+\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.DATEPICKER:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\talt=\"calendar\"\r\n+\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<DatePicker\r\n+\t\t\t\t\t\t\tlocale=\"es\"\r\n+\t\t\t\t\t\t\tselected={field.value}\r\n+\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n+\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n+\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n+\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n+\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.TEXTAREA:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Textarea\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n+\t\t\t\t\t\tdisabled={props.disabled}\r\n+\t\t\t\t\t></Textarea>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SELECT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n+\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n+\t\t\t\t\t\t</SelectTrigger>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n+\t\t\t\t\t\t{props.children}\r\n+\t\t\t\t\t</SelectContent>\r\n+\t\t\t\t</Select>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.CHECKBOX:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n+\t\t\t\t\t\t<Checkbox\r\n+\t\t\t\t\t\t\tid={name}\r\n+\t\t\t\t\t\t\tchecked={field.value}\r\n+\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n+\t\t\t\t\t\t></Checkbox>\r\n+\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n+\t\t\t\t\t\t\t{label}\r\n+\t\t\t\t\t\t</label>\r\n+\t\t\t\t\t</div>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SKELETON:\r\n+\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n+\t\tcase FormFieldType.PASSWORD:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<PasswordInput placeholder={placeholder} value={field.value} onChange={field.onChange} />\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tdefault:\r\n+\t\t\tbreak;\r\n+\t}\r\n+\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n+};\r\n+\r\n+function CustomFormField(props: Props) {\r\n+\tconst { control, fieldType, name, label } = props;\r\n+\treturn (\r\n+\t\t<FormField\r\n+\t\t\tcontrol={control}\r\n+\t\t\tname={name}\r\n+\t\t\trender={({ field }) => (\r\n+\t\t\t\t<FormItem className=\"flex-1\">\r\n+\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n+\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n+\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n+\t\t\t\t</FormItem>\r\n+\t\t\t)}\r\n+\t\t/>\r\n+\t);\r\n+}\r\n+\r\n+export default CustomFormField;\r\n"
                },
                {
                    "date": 1727137200676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n \t\t\treturn (\r\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<PhoneInput\r\n \t\t\t\t\t\tlimitMaxLength={true}\r\n-\t\t\t\t\t\tmaxLength={11}\r\n+\t\t\t\t\t\tmaxLength={9}\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tinternational={false}\r\n \t\t\t\t\t\tdefaultCountry=\"PE\"\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n@@ -200,206 +200,4 @@\n \t);\r\n }\r\n \r\n export default CustomFormField;\r\n-'use client';\r\n-import React from 'react';\r\n-import DatePicker from 'react-datepicker';\r\n-import { registerLocale } from 'react-datepicker';\r\n-\r\n-import 'react-datepicker/dist/react-datepicker.css';\r\n-import {\r\n-\tFormControl,\r\n-\tFormField,\r\n-\tFormItem,\r\n-\tFormLabel,\r\n-\tFormMessage,\r\n-} from '@/components/ui/form';\r\n-import {\r\n-\tSelect,\r\n-\tSelectValue,\r\n-\tSelectContent,\r\n-\tSelectTrigger,\r\n-} from '@/components/ui/select';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n-import { Checkbox } from '@/components/ui/checkbox';\r\n-import { Control, Form } from 'react-hook-form';\r\n-import Image from 'next/image';\r\n-import 'react-phone-number-input/style.css';\r\n-import PhoneInput, { type Value } from 'react-phone-number-input';\r\n-import { es } from 'date-fns/locale/es';\r\n-import { PasswordInput } from '@/components/PasswordInput';\r\n-registerLocale('es', es);\r\n-\r\n-export enum FormFieldType {\r\n-\tINPUT = 'input',\r\n-\tTEXTAREA = 'textarea',\r\n-\tPHONE = 'phoneInput',\r\n-\tCHECKBOX = 'checkbox',\r\n-\tDATEPICKER = 'datePicker',\r\n-\tSELECT = 'select',\r\n-\tSKELETON = 'skeleton',\r\n-\tPASSWORD = 'password',\r\n-}\r\n-\r\n-interface Props {\r\n-\tcontrol: Control<any>;\r\n-\tfieldType: FormFieldType;\r\n-\tname: string;\r\n-\tlabel?: string;\r\n-\ticonSrc?: string;\r\n-\ticonAlt?: string;\r\n-\tdisabled?: boolean;\r\n-\tdateFormat?: string;\r\n-\tshowTimeSelect?: boolean;\r\n-\tchildren?: React.ReactNode;\r\n-\tplaceholder?: string;\r\n-\trenderSkeleton?: (field: any) => React.ReactNode;\r\n-}\r\n-\r\n-const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n-\tconst {\r\n-\t\tfieldType,\r\n-\t\ticonSrc,\r\n-\t\ticonAlt,\r\n-\t\tplaceholder,\r\n-\t\tshowTimeSelect,\r\n-\t\tdateFormat,\r\n-\t\trenderSkeleton,\r\n-\t\tname,\r\n-\t\tlabel,\r\n-\t} = props;\r\n-\tswitch (fieldType) {\r\n-\t\tcase FormFieldType.INPUT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t{iconSrc && (\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\tsrc={iconSrc}\r\n-\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n-\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.PHONE:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PhoneInput\r\n-\t\t\t\t\t\tlimitMaxLength={true}\r\n-\t\t\t\t\t\tmaxLength={11}\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.DATEPICKER:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\talt=\"calendar\"\r\n-\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<DatePicker\r\n-\t\t\t\t\t\t\tlocale=\"es\"\r\n-\t\t\t\t\t\t\tselected={field.value}\r\n-\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n-\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n-\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n-\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n-\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.TEXTAREA:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Textarea\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n-\t\t\t\t\t\tdisabled={props.disabled}\r\n-\t\t\t\t\t></Textarea>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SELECT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n-\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n-\t\t\t\t\t\t</SelectTrigger>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n-\t\t\t\t\t\t{props.children}\r\n-\t\t\t\t\t</SelectContent>\r\n-\t\t\t\t</Select>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.CHECKBOX:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n-\t\t\t\t\t\t<Checkbox\r\n-\t\t\t\t\t\t\tid={name}\r\n-\t\t\t\t\t\t\tchecked={field.value}\r\n-\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n-\t\t\t\t\t\t></Checkbox>\r\n-\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n-\t\t\t\t\t\t\t{label}\r\n-\t\t\t\t\t\t</label>\r\n-\t\t\t\t\t</div>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SKELETON:\r\n-\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n-\t\tcase FormFieldType.PASSWORD:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<PasswordInput placeholder={placeholder} value={field.value} onChange={field.onChange} />\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tdefault:\r\n-\t\t\tbreak;\r\n-\t}\r\n-\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n-};\r\n-\r\n-function CustomFormField(props: Props) {\r\n-\tconst { control, fieldType, name, label } = props;\r\n-\treturn (\r\n-\t\t<FormField\r\n-\t\t\tcontrol={control}\r\n-\t\t\tname={name}\r\n-\t\t\trender={({ field }) => (\r\n-\t\t\t\t<FormItem className=\"flex-1\">\r\n-\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n-\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n-\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n-\t\t\t\t</FormItem>\r\n-\t\t\t)}\r\n-\t\t/>\r\n-\t);\r\n-}\r\n-\r\n-export default CustomFormField;\r\n"
                },
                {
                    "date": 1727138334544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,8 +94,9 @@\n \t\t\t\t\t<PhoneInput\r\n \t\t\t\t\t\tlimitMaxLength={true}\r\n \t\t\t\t\t\tmaxLength={9}\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\tsmartCaret={true}\r\n \t\t\t\t\t\tinternational={false}\r\n \t\t\t\t\t\tdefaultCountry=\"PE\"\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n"
                },
                {
                    "date": 1727138464821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,201 @@\n+'use client';\r\n+import React from 'react';\r\n+import DatePicker from 'react-datepicker';\r\n+import { registerLocale } from 'react-datepicker';\r\n+\r\n+import 'react-datepicker/dist/react-datepicker.css';\r\n+import {\r\n+\tFormControl,\r\n+\tFormField,\r\n+\tFormItem,\r\n+\tFormLabel,\r\n+\tFormMessage,\r\n+} from '@/components/ui/form';\r\n+import {\r\n+\tSelect,\r\n+\tSelectValue,\r\n+\tSelectContent,\r\n+\tSelectTrigger,\r\n+} from '@/components/ui/select';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Textarea } from '@/components/ui/textarea';\r\n+import { Checkbox } from '@/components/ui/checkbox';\r\n+import { Control, Form } from 'react-hook-form';\r\n+import Image from 'next/image';\r\n+import 'react-phone-number-input/style.css';\r\n+import PhoneInput, { type Value } from 'react-phone-number-input';\r\n+import { es } from 'date-fns/locale/es';\r\n+import { PasswordInput } from '@/components/PasswordInput';\r\n+registerLocale('es', es);\r\n+\r\n+export enum FormFieldType {\r\n+\tINPUT = 'input',\r\n+\tTEXTAREA = 'textarea',\r\n+\tPHONE = 'phoneInput',\r\n+\tCHECKBOX = 'checkbox',\r\n+\tDATEPICKER = 'datePicker',\r\n+\tSELECT = 'select',\r\n+\tSKELETON = 'skeleton',\r\n+\tPASSWORD = 'password',\r\n+}\r\n+\r\n+interface Props {\r\n+\tcontrol: Control<any>;\r\n+\tfieldType: FormFieldType;\r\n+\tname: string;\r\n+\tlabel?: string;\r\n+\ticonSrc?: string;\r\n+\ticonAlt?: string;\r\n+\tdisabled?: boolean;\r\n+\tdateFormat?: string;\r\n+\tshowTimeSelect?: boolean;\r\n+\tchildren?: React.ReactNode;\r\n+\tplaceholder?: string;\r\n+\trenderSkeleton?: (field: any) => React.ReactNode;\r\n+}\r\n+\r\n+const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n+\tconst {\r\n+\t\tfieldType,\r\n+\t\ticonSrc,\r\n+\t\ticonAlt,\r\n+\t\tplaceholder,\r\n+\t\tshowTimeSelect,\r\n+\t\tdateFormat,\r\n+\t\trenderSkeleton,\r\n+\t\tname,\r\n+\t\tlabel,\r\n+\t} = props;\r\n+\tswitch (fieldType) {\r\n+\t\tcase FormFieldType.INPUT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t{iconSrc && (\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\tsrc={iconSrc}\r\n+\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n+\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.PHONE:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Input\r\n+\t\t\t\t\t\tmaxLength={9}\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t\t\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.DATEPICKER:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\talt=\"calendar\"\r\n+\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<DatePicker\r\n+\t\t\t\t\t\t\tlocale=\"es\"\r\n+\t\t\t\t\t\t\tselected={field.value}\r\n+\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n+\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n+\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n+\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n+\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.TEXTAREA:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Textarea\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n+\t\t\t\t\t\tdisabled={props.disabled}\r\n+\t\t\t\t\t></Textarea>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SELECT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n+\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n+\t\t\t\t\t\t</SelectTrigger>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n+\t\t\t\t\t\t{props.children}\r\n+\t\t\t\t\t</SelectContent>\r\n+\t\t\t\t</Select>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.CHECKBOX:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n+\t\t\t\t\t\t<Checkbox\r\n+\t\t\t\t\t\t\tid={name}\r\n+\t\t\t\t\t\t\tchecked={field.value}\r\n+\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n+\t\t\t\t\t\t></Checkbox>\r\n+\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n+\t\t\t\t\t\t\t{label}\r\n+\t\t\t\t\t\t</label>\r\n+\t\t\t\t\t</div>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SKELETON:\r\n+\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n+\t\tcase FormFieldType.PASSWORD:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<PasswordInput placeholder={placeholder} value={field.value} onChange={field.onChange} />\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tdefault:\r\n+\t\t\tbreak;\r\n+\t}\r\n+\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n+};\r\n+\r\n+function CustomFormField(props: Props) {\r\n+\tconst { control, fieldType, name, label } = props;\r\n+\treturn (\r\n+\t\t<FormField\r\n+\t\t\tcontrol={control}\r\n+\t\t\tname={name}\r\n+\t\t\trender={({ field }) => (\r\n+\t\t\t\t<FormItem className=\"flex-1\">\r\n+\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n+\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n+\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n+\t\t\t\t</FormItem>\r\n+\t\t\t)}\r\n+\t\t/>\r\n+\t);\r\n+}\r\n+\r\n+export default CustomFormField;\r\n"
                },
                {
                    "date": 1727138711056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,206 @@\n+'use client';\r\n+import React from 'react';\r\n+import DatePicker from 'react-datepicker';\r\n+import { registerLocale } from 'react-datepicker';\r\n+\r\n+import 'react-datepicker/dist/react-datepicker.css';\r\n+import {\r\n+\tFormControl,\r\n+\tFormField,\r\n+\tFormItem,\r\n+\tFormLabel,\r\n+\tFormMessage,\r\n+} from '@/components/ui/form';\r\n+import {\r\n+\tSelect,\r\n+\tSelectValue,\r\n+\tSelectContent,\r\n+\tSelectTrigger,\r\n+} from '@/components/ui/select';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Textarea } from '@/components/ui/textarea';\r\n+import { Checkbox } from '@/components/ui/checkbox';\r\n+import { Control, Form } from 'react-hook-form';\r\n+import Image from 'next/image';\r\n+import 'react-phone-number-input/style.css';\r\n+import PhoneInput, { type Value } from 'react-phone-number-input';\r\n+import { es } from 'date-fns/locale/es';\r\n+import { PasswordInput } from '@/components/PasswordInput';\r\n+registerLocale('es', es);\r\n+\r\n+export enum FormFieldType {\r\n+\tINPUT = 'input',\r\n+\tTEXTAREA = 'textarea',\r\n+\tPHONE = 'phoneInput',\r\n+\tCHECKBOX = 'checkbox',\r\n+\tDATEPICKER = 'datePicker',\r\n+\tSELECT = 'select',\r\n+\tSKELETON = 'skeleton',\r\n+\tPASSWORD = 'password',\r\n+}\r\n+\r\n+interface Props {\r\n+\tcontrol: Control<any>;\r\n+\tfieldType: FormFieldType;\r\n+\tname: string;\r\n+\tlabel?: string;\r\n+\ticonSrc?: string;\r\n+\ticonAlt?: string;\r\n+\tdisabled?: boolean;\r\n+\tdateFormat?: string;\r\n+\tshowTimeSelect?: boolean;\r\n+\tchildren?: React.ReactNode;\r\n+\tplaceholder?: string;\r\n+\trenderSkeleton?: (field: any) => React.ReactNode;\r\n+}\r\n+\r\n+const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n+\tconst {\r\n+\t\tfieldType,\r\n+\t\ticonSrc,\r\n+\t\ticonAlt,\r\n+\t\tplaceholder,\r\n+\t\tshowTimeSelect,\r\n+\t\tdateFormat,\r\n+\t\trenderSkeleton,\r\n+\t\tname,\r\n+\t\tlabel,\r\n+\t} = props;\r\n+\tswitch (fieldType) {\r\n+\t\tcase FormFieldType.INPUT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t{iconSrc && (\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\tsrc={iconSrc}\r\n+\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n+\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.PHONE:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PhoneInput\r\n+\t\t\t\t\t\tcountryCallingCodeEditable={false}\r\n+\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n+\t\t\t\t\t\tmaxLength={9}\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.DATEPICKER:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\talt=\"calendar\"\r\n+\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<DatePicker\r\n+\t\t\t\t\t\t\tlocale=\"es\"\r\n+\t\t\t\t\t\t\tselected={field.value}\r\n+\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n+\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n+\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n+\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n+\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.TEXTAREA:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Textarea\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n+\t\t\t\t\t\tdisabled={props.disabled}\r\n+\t\t\t\t\t></Textarea>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SELECT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n+\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n+\t\t\t\t\t\t</SelectTrigger>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n+\t\t\t\t\t\t{props.children}\r\n+\t\t\t\t\t</SelectContent>\r\n+\t\t\t\t</Select>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.CHECKBOX:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n+\t\t\t\t\t\t<Checkbox\r\n+\t\t\t\t\t\t\tid={name}\r\n+\t\t\t\t\t\t\tchecked={field.value}\r\n+\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n+\t\t\t\t\t\t></Checkbox>\r\n+\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n+\t\t\t\t\t\t\t{label}\r\n+\t\t\t\t\t\t</label>\r\n+\t\t\t\t\t</div>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SKELETON:\r\n+\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n+\t\tcase FormFieldType.PASSWORD:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<PasswordInput\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\tvalue={field.value}\r\n+\t\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tdefault:\r\n+\t\t\tbreak;\r\n+\t}\r\n+\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n+};\r\n+\r\n+function CustomFormField(props: Props) {\r\n+\tconst { control, fieldType, name, label } = props;\r\n+\treturn (\r\n+\t\t<FormField\r\n+\t\t\tcontrol={control}\r\n+\t\t\tname={name}\r\n+\t\t\trender={({ field }) => (\r\n+\t\t\t\t<FormItem className=\"flex-1\">\r\n+\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n+\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n+\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n+\t\t\t\t</FormItem>\r\n+\t\t\t)}\r\n+\t\t/>\r\n+\t);\r\n+}\r\n+\r\n+export default CustomFormField;\r\n"
                },
                {
                    "date": 1727138778100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<PhoneInput\r\n \t\t\t\t\t\tcountryCallingCodeEditable={false}\r\n \t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tmaxLength={9}\r\n+\t\t\t\t\t\tmaxLength={11}\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n \t\t\t\t\t\tclassName=\"input-phone\"\r\n"
                },
                {
                    "date": 1727138815459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,206 @@\n+'use client';\r\n+import React from 'react';\r\n+import DatePicker from 'react-datepicker';\r\n+import { registerLocale } from 'react-datepicker';\r\n+\r\n+import 'react-datepicker/dist/react-datepicker.css';\r\n+import {\r\n+\tFormControl,\r\n+\tFormField,\r\n+\tFormItem,\r\n+\tFormLabel,\r\n+\tFormMessage,\r\n+} from '@/components/ui/form';\r\n+import {\r\n+\tSelect,\r\n+\tSelectValue,\r\n+\tSelectContent,\r\n+\tSelectTrigger,\r\n+} from '@/components/ui/select';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Textarea } from '@/components/ui/textarea';\r\n+import { Checkbox } from '@/components/ui/checkbox';\r\n+import { Control, Form } from 'react-hook-form';\r\n+import Image from 'next/image';\r\n+import 'react-phone-number-input/style.css';\r\n+import PhoneInput, { type Value } from 'react-phone-number-input';\r\n+import { es } from 'date-fns/locale/es';\r\n+import { PasswordInput } from '@/components/PasswordInput';\r\n+registerLocale('es', es);\r\n+\r\n+export enum FormFieldType {\r\n+\tINPUT = 'input',\r\n+\tTEXTAREA = 'textarea',\r\n+\tPHONE = 'phoneInput',\r\n+\tCHECKBOX = 'checkbox',\r\n+\tDATEPICKER = 'datePicker',\r\n+\tSELECT = 'select',\r\n+\tSKELETON = 'skeleton',\r\n+\tPASSWORD = 'password',\r\n+}\r\n+\r\n+interface Props {\r\n+\tcontrol: Control<any>;\r\n+\tfieldType: FormFieldType;\r\n+\tname: string;\r\n+\tlabel?: string;\r\n+\ticonSrc?: string;\r\n+\ticonAlt?: string;\r\n+\tdisabled?: boolean;\r\n+\tdateFormat?: string;\r\n+\tshowTimeSelect?: boolean;\r\n+\tchildren?: React.ReactNode;\r\n+\tplaceholder?: string;\r\n+\trenderSkeleton?: (field: any) => React.ReactNode;\r\n+}\r\n+\r\n+const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n+\tconst {\r\n+\t\tfieldType,\r\n+\t\ticonSrc,\r\n+\t\ticonAlt,\r\n+\t\tplaceholder,\r\n+\t\tshowTimeSelect,\r\n+\t\tdateFormat,\r\n+\t\trenderSkeleton,\r\n+\t\tname,\r\n+\t\tlabel,\r\n+\t} = props;\r\n+\tswitch (fieldType) {\r\n+\t\tcase FormFieldType.INPUT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t{iconSrc && (\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\tsrc={iconSrc}\r\n+\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n+\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.PHONE:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PhoneInput\r\n+\t\t\t\t\t\tcountryCallingCodeEditable={false}\r\n+\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n+\t\t\t\t\t\tmaxLength={9}\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.DATEPICKER:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\talt=\"calendar\"\r\n+\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<DatePicker\r\n+\t\t\t\t\t\t\tlocale=\"es\"\r\n+\t\t\t\t\t\t\tselected={field.value}\r\n+\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n+\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n+\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n+\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n+\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.TEXTAREA:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Textarea\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n+\t\t\t\t\t\tdisabled={props.disabled}\r\n+\t\t\t\t\t></Textarea>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SELECT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n+\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n+\t\t\t\t\t\t</SelectTrigger>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n+\t\t\t\t\t\t{props.children}\r\n+\t\t\t\t\t</SelectContent>\r\n+\t\t\t\t</Select>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.CHECKBOX:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n+\t\t\t\t\t\t<Checkbox\r\n+\t\t\t\t\t\t\tid={name}\r\n+\t\t\t\t\t\t\tchecked={field.value}\r\n+\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n+\t\t\t\t\t\t></Checkbox>\r\n+\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n+\t\t\t\t\t\t\t{label}\r\n+\t\t\t\t\t\t</label>\r\n+\t\t\t\t\t</div>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SKELETON:\r\n+\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n+\t\tcase FormFieldType.PASSWORD:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<PasswordInput\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\tvalue={field.value}\r\n+\t\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tdefault:\r\n+\t\t\tbreak;\r\n+\t}\r\n+\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n+};\r\n+\r\n+function CustomFormField(props: Props) {\r\n+\tconst { control, fieldType, name, label } = props;\r\n+\treturn (\r\n+\t\t<FormField\r\n+\t\t\tcontrol={control}\r\n+\t\t\tname={name}\r\n+\t\t\trender={({ field }) => (\r\n+\t\t\t\t<FormItem className=\"flex-1\">\r\n+\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n+\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n+\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n+\t\t\t\t</FormItem>\r\n+\t\t\t)}\r\n+\t\t/>\r\n+\t);\r\n+}\r\n+\r\n+export default CustomFormField;\r\n"
                },
                {
                    "date": 1727138849970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,214 +93,8 @@\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<PhoneInput\r\n \t\t\t\t\t\tcountryCallingCodeEditable={false}\r\n \t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tmaxLength={9}\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.DATEPICKER:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\talt=\"calendar\"\r\n-\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<DatePicker\r\n-\t\t\t\t\t\t\tlocale=\"es\"\r\n-\t\t\t\t\t\t\tselected={field.value}\r\n-\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n-\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n-\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n-\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n-\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.TEXTAREA:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Textarea\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n-\t\t\t\t\t\tdisabled={props.disabled}\r\n-\t\t\t\t\t></Textarea>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SELECT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n-\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n-\t\t\t\t\t\t</SelectTrigger>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n-\t\t\t\t\t\t{props.children}\r\n-\t\t\t\t\t</SelectContent>\r\n-\t\t\t\t</Select>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.CHECKBOX:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n-\t\t\t\t\t\t<Checkbox\r\n-\t\t\t\t\t\t\tid={name}\r\n-\t\t\t\t\t\t\tchecked={field.value}\r\n-\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n-\t\t\t\t\t\t></Checkbox>\r\n-\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n-\t\t\t\t\t\t\t{label}\r\n-\t\t\t\t\t\t</label>\r\n-\t\t\t\t\t</div>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SKELETON:\r\n-\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n-\t\tcase FormFieldType.PASSWORD:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<PasswordInput\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\tvalue={field.value}\r\n-\t\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tdefault:\r\n-\t\t\tbreak;\r\n-\t}\r\n-\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n-};\r\n-\r\n-function CustomFormField(props: Props) {\r\n-\tconst { control, fieldType, name, label } = props;\r\n-\treturn (\r\n-\t\t<FormField\r\n-\t\t\tcontrol={control}\r\n-\t\t\tname={name}\r\n-\t\t\trender={({ field }) => (\r\n-\t\t\t\t<FormItem className=\"flex-1\">\r\n-\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n-\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n-\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n-\t\t\t\t</FormItem>\r\n-\t\t\t)}\r\n-\t\t/>\r\n-\t);\r\n-}\r\n-\r\n-export default CustomFormField;\r\n-'use client';\r\n-import React from 'react';\r\n-import DatePicker from 'react-datepicker';\r\n-import { registerLocale } from 'react-datepicker';\r\n-\r\n-import 'react-datepicker/dist/react-datepicker.css';\r\n-import {\r\n-\tFormControl,\r\n-\tFormField,\r\n-\tFormItem,\r\n-\tFormLabel,\r\n-\tFormMessage,\r\n-} from '@/components/ui/form';\r\n-import {\r\n-\tSelect,\r\n-\tSelectValue,\r\n-\tSelectContent,\r\n-\tSelectTrigger,\r\n-} from '@/components/ui/select';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n-import { Checkbox } from '@/components/ui/checkbox';\r\n-import { Control, Form } from 'react-hook-form';\r\n-import Image from 'next/image';\r\n-import 'react-phone-number-input/style.css';\r\n-import PhoneInput, { type Value } from 'react-phone-number-input';\r\n-import { es } from 'date-fns/locale/es';\r\n-import { PasswordInput } from '@/components/PasswordInput';\r\n-registerLocale('es', es);\r\n-\r\n-export enum FormFieldType {\r\n-\tINPUT = 'input',\r\n-\tTEXTAREA = 'textarea',\r\n-\tPHONE = 'phoneInput',\r\n-\tCHECKBOX = 'checkbox',\r\n-\tDATEPICKER = 'datePicker',\r\n-\tSELECT = 'select',\r\n-\tSKELETON = 'skeleton',\r\n-\tPASSWORD = 'password',\r\n-}\r\n-\r\n-interface Props {\r\n-\tcontrol: Control<any>;\r\n-\tfieldType: FormFieldType;\r\n-\tname: string;\r\n-\tlabel?: string;\r\n-\ticonSrc?: string;\r\n-\ticonAlt?: string;\r\n-\tdisabled?: boolean;\r\n-\tdateFormat?: string;\r\n-\tshowTimeSelect?: boolean;\r\n-\tchildren?: React.ReactNode;\r\n-\tplaceholder?: string;\r\n-\trenderSkeleton?: (field: any) => React.ReactNode;\r\n-}\r\n-\r\n-const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n-\tconst {\r\n-\t\tfieldType,\r\n-\t\ticonSrc,\r\n-\t\ticonAlt,\r\n-\t\tplaceholder,\r\n-\t\tshowTimeSelect,\r\n-\t\tdateFormat,\r\n-\t\trenderSkeleton,\r\n-\t\tname,\r\n-\t\tlabel,\r\n-\t} = props;\r\n-\tswitch (fieldType) {\r\n-\t\tcase FormFieldType.INPUT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t{iconSrc && (\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\tsrc={iconSrc}\r\n-\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n-\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.PHONE:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PhoneInput\r\n-\t\t\t\t\t\tcountryCallingCodeEditable={false}\r\n-\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n \t\t\t\t\t\tmaxLength={11}\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n@@ -409,409 +203,4 @@\n \t);\r\n }\r\n \r\n export default CustomFormField;\r\n-'use client';\r\n-import React from 'react';\r\n-import DatePicker from 'react-datepicker';\r\n-import { registerLocale } from 'react-datepicker';\r\n-\r\n-import 'react-datepicker/dist/react-datepicker.css';\r\n-import {\r\n-\tFormControl,\r\n-\tFormField,\r\n-\tFormItem,\r\n-\tFormLabel,\r\n-\tFormMessage,\r\n-} from '@/components/ui/form';\r\n-import {\r\n-\tSelect,\r\n-\tSelectValue,\r\n-\tSelectContent,\r\n-\tSelectTrigger,\r\n-} from '@/components/ui/select';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n-import { Checkbox } from '@/components/ui/checkbox';\r\n-import { Control, Form } from 'react-hook-form';\r\n-import Image from 'next/image';\r\n-import 'react-phone-number-input/style.css';\r\n-import PhoneInput, { type Value } from 'react-phone-number-input';\r\n-import { es } from 'date-fns/locale/es';\r\n-import { PasswordInput } from '@/components/PasswordInput';\r\n-registerLocale('es', es);\r\n-\r\n-export enum FormFieldType {\r\n-\tINPUT = 'input',\r\n-\tTEXTAREA = 'textarea',\r\n-\tPHONE = 'phoneInput',\r\n-\tCHECKBOX = 'checkbox',\r\n-\tDATEPICKER = 'datePicker',\r\n-\tSELECT = 'select',\r\n-\tSKELETON = 'skeleton',\r\n-\tPASSWORD = 'password',\r\n-}\r\n-\r\n-interface Props {\r\n-\tcontrol: Control<any>;\r\n-\tfieldType: FormFieldType;\r\n-\tname: string;\r\n-\tlabel?: string;\r\n-\ticonSrc?: string;\r\n-\ticonAlt?: string;\r\n-\tdisabled?: boolean;\r\n-\tdateFormat?: string;\r\n-\tshowTimeSelect?: boolean;\r\n-\tchildren?: React.ReactNode;\r\n-\tplaceholder?: string;\r\n-\trenderSkeleton?: (field: any) => React.ReactNode;\r\n-}\r\n-\r\n-const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n-\tconst {\r\n-\t\tfieldType,\r\n-\t\ticonSrc,\r\n-\t\ticonAlt,\r\n-\t\tplaceholder,\r\n-\t\tshowTimeSelect,\r\n-\t\tdateFormat,\r\n-\t\trenderSkeleton,\r\n-\t\tname,\r\n-\t\tlabel,\r\n-\t} = props;\r\n-\tswitch (fieldType) {\r\n-\t\tcase FormFieldType.INPUT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t{iconSrc && (\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\tsrc={iconSrc}\r\n-\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n-\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.PHONE:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Input\r\n-\t\t\t\t\t\tmaxLength={9}\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t\t\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.DATEPICKER:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\talt=\"calendar\"\r\n-\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<DatePicker\r\n-\t\t\t\t\t\t\tlocale=\"es\"\r\n-\t\t\t\t\t\t\tselected={field.value}\r\n-\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n-\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n-\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n-\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n-\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.TEXTAREA:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Textarea\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n-\t\t\t\t\t\tdisabled={props.disabled}\r\n-\t\t\t\t\t></Textarea>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SELECT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n-\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n-\t\t\t\t\t\t</SelectTrigger>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n-\t\t\t\t\t\t{props.children}\r\n-\t\t\t\t\t</SelectContent>\r\n-\t\t\t\t</Select>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.CHECKBOX:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n-\t\t\t\t\t\t<Checkbox\r\n-\t\t\t\t\t\t\tid={name}\r\n-\t\t\t\t\t\t\tchecked={field.value}\r\n-\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n-\t\t\t\t\t\t></Checkbox>\r\n-\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n-\t\t\t\t\t\t\t{label}\r\n-\t\t\t\t\t\t</label>\r\n-\t\t\t\t\t</div>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SKELETON:\r\n-\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n-\t\tcase FormFieldType.PASSWORD:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<PasswordInput placeholder={placeholder} value={field.value} onChange={field.onChange} />\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tdefault:\r\n-\t\t\tbreak;\r\n-\t}\r\n-\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n-};\r\n-\r\n-function CustomFormField(props: Props) {\r\n-\tconst { control, fieldType, name, label } = props;\r\n-\treturn (\r\n-\t\t<FormField\r\n-\t\t\tcontrol={control}\r\n-\t\t\tname={name}\r\n-\t\t\trender={({ field }) => (\r\n-\t\t\t\t<FormItem className=\"flex-1\">\r\n-\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n-\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n-\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n-\t\t\t\t</FormItem>\r\n-\t\t\t)}\r\n-\t\t/>\r\n-\t);\r\n-}\r\n-\r\n-export default CustomFormField;\r\n-'use client';\r\n-import React from 'react';\r\n-import DatePicker from 'react-datepicker';\r\n-import { registerLocale } from 'react-datepicker';\r\n-\r\n-import 'react-datepicker/dist/react-datepicker.css';\r\n-import {\r\n-\tFormControl,\r\n-\tFormField,\r\n-\tFormItem,\r\n-\tFormLabel,\r\n-\tFormMessage,\r\n-} from '@/components/ui/form';\r\n-import {\r\n-\tSelect,\r\n-\tSelectValue,\r\n-\tSelectContent,\r\n-\tSelectTrigger,\r\n-} from '@/components/ui/select';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n-import { Checkbox } from '@/components/ui/checkbox';\r\n-import { Control, Form } from 'react-hook-form';\r\n-import Image from 'next/image';\r\n-import 'react-phone-number-input/style.css';\r\n-import PhoneInput, { type Value } from 'react-phone-number-input';\r\n-import { es } from 'date-fns/locale/es';\r\n-import { PasswordInput } from '@/components/PasswordInput';\r\n-registerLocale('es', es);\r\n-\r\n-export enum FormFieldType {\r\n-\tINPUT = 'input',\r\n-\tTEXTAREA = 'textarea',\r\n-\tPHONE = 'phoneInput',\r\n-\tCHECKBOX = 'checkbox',\r\n-\tDATEPICKER = 'datePicker',\r\n-\tSELECT = 'select',\r\n-\tSKELETON = 'skeleton',\r\n-\tPASSWORD = 'password',\r\n-}\r\n-\r\n-interface Props {\r\n-\tcontrol: Control<any>;\r\n-\tfieldType: FormFieldType;\r\n-\tname: string;\r\n-\tlabel?: string;\r\n-\ticonSrc?: string;\r\n-\ticonAlt?: string;\r\n-\tdisabled?: boolean;\r\n-\tdateFormat?: string;\r\n-\tshowTimeSelect?: boolean;\r\n-\tchildren?: React.ReactNode;\r\n-\tplaceholder?: string;\r\n-\trenderSkeleton?: (field: any) => React.ReactNode;\r\n-}\r\n-\r\n-const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n-\tconst {\r\n-\t\tfieldType,\r\n-\t\ticonSrc,\r\n-\t\ticonAlt,\r\n-\t\tplaceholder,\r\n-\t\tshowTimeSelect,\r\n-\t\tdateFormat,\r\n-\t\trenderSkeleton,\r\n-\t\tname,\r\n-\t\tlabel,\r\n-\t} = props;\r\n-\tswitch (fieldType) {\r\n-\t\tcase FormFieldType.INPUT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t{iconSrc && (\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\tsrc={iconSrc}\r\n-\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n-\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.PHONE:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PhoneInput\r\n-\t\t\t\t\t\tlimitMaxLength={true}\r\n-\t\t\t\t\t\tmaxLength={9}\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\tsmartCaret={true}\r\n-\t\t\t\t\t\tinternational={false}\r\n-\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.DATEPICKER:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\talt=\"calendar\"\r\n-\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<DatePicker\r\n-\t\t\t\t\t\t\tlocale=\"es\"\r\n-\t\t\t\t\t\t\tselected={field.value}\r\n-\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n-\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n-\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n-\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n-\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.TEXTAREA:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Textarea\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n-\t\t\t\t\t\tdisabled={props.disabled}\r\n-\t\t\t\t\t></Textarea>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SELECT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n-\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n-\t\t\t\t\t\t</SelectTrigger>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n-\t\t\t\t\t\t{props.children}\r\n-\t\t\t\t\t</SelectContent>\r\n-\t\t\t\t</Select>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.CHECKBOX:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n-\t\t\t\t\t\t<Checkbox\r\n-\t\t\t\t\t\t\tid={name}\r\n-\t\t\t\t\t\t\tchecked={field.value}\r\n-\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n-\t\t\t\t\t\t></Checkbox>\r\n-\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n-\t\t\t\t\t\t\t{label}\r\n-\t\t\t\t\t\t</label>\r\n-\t\t\t\t\t</div>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SKELETON:\r\n-\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n-\t\tcase FormFieldType.PASSWORD:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<PasswordInput placeholder={placeholder} value={field.value} onChange={field.onChange} />\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tdefault:\r\n-\t\t\tbreak;\r\n-\t}\r\n-\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n-};\r\n-\r\n-function CustomFormField(props: Props) {\r\n-\tconst { control, fieldType, name, label } = props;\r\n-\treturn (\r\n-\t\t<FormField\r\n-\t\t\tcontrol={control}\r\n-\t\t\tname={name}\r\n-\t\t\trender={({ field }) => (\r\n-\t\t\t\t<FormItem className=\"flex-1\">\r\n-\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n-\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n-\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n-\t\t\t\t</FormItem>\r\n-\t\t\t)}\r\n-\t\t/>\r\n-\t);\r\n-}\r\n-\r\n-export default CustomFormField;\r\n"
                },
                {
                    "date": 1727138855017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<PhoneInput\r\n \t\t\t\t\t\tcountryCallingCodeEditable={false}\r\n \t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tmaxLength={11}\r\n+\t\t\t\t\t\tmaxLength={9}\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n \t\t\t\t\t\tclassName=\"input-phone\"\r\n"
                },
                {
                    "date": 1727138894267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<PhoneInput\r\n \t\t\t\t\t\tcountryCallingCodeEditable={false}\r\n \t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tmaxLength={9}\r\n+\t\t\t\t\t\tmaxLength={11}\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n \t\t\t\t\t\tclassName=\"input-phone\"\r\n"
                },
                {
                    "date": 1727138937148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<PhoneInput\r\n \t\t\t\t\t\tcountryCallingCodeEditable={false}\r\n \t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tmaxLength={11}\r\n+\t\t\t\t\t\tmaxLength={9}\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n \t\t\t\t\t\tclassName=\"input-phone\"\r\n"
                },
                {
                    "date": 1727138947305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,207 @@\n+'use client';\r\n+import React from 'react';\r\n+import DatePicker from 'react-datepicker';\r\n+import { registerLocale } from 'react-datepicker';\r\n+\r\n+import 'react-datepicker/dist/react-datepicker.css';\r\n+import {\r\n+\tFormControl,\r\n+\tFormField,\r\n+\tFormItem,\r\n+\tFormLabel,\r\n+\tFormMessage,\r\n+} from '@/components/ui/form';\r\n+import {\r\n+\tSelect,\r\n+\tSelectValue,\r\n+\tSelectContent,\r\n+\tSelectTrigger,\r\n+} from '@/components/ui/select';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Textarea } from '@/components/ui/textarea';\r\n+import { Checkbox } from '@/components/ui/checkbox';\r\n+import { Control, Form } from 'react-hook-form';\r\n+import Image from 'next/image';\r\n+import 'react-phone-number-input/style.css';\r\n+import PhoneInput, { type Value } from 'react-phone-number-input';\r\n+import { es } from 'date-fns/locale/es';\r\n+import { PasswordInput } from '@/components/PasswordInput';\r\n+registerLocale('es', es);\r\n+\r\n+export enum FormFieldType {\r\n+\tINPUT = 'input',\r\n+\tTEXTAREA = 'textarea',\r\n+\tPHONE = 'phoneInput',\r\n+\tCHECKBOX = 'checkbox',\r\n+\tDATEPICKER = 'datePicker',\r\n+\tSELECT = 'select',\r\n+\tSKELETON = 'skeleton',\r\n+\tPASSWORD = 'password',\r\n+}\r\n+\r\n+interface Props {\r\n+\tcontrol: Control<any>;\r\n+\tfieldType: FormFieldType;\r\n+\tname: string;\r\n+\tlabel?: string;\r\n+\ticonSrc?: string;\r\n+\ticonAlt?: string;\r\n+\tdisabled?: boolean;\r\n+\tdateFormat?: string;\r\n+\tshowTimeSelect?: boolean;\r\n+\tchildren?: React.ReactNode;\r\n+\tplaceholder?: string;\r\n+\trenderSkeleton?: (field: any) => React.ReactNode;\r\n+}\r\n+\r\n+const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n+\tconst {\r\n+\t\tfieldType,\r\n+\t\ticonSrc,\r\n+\t\ticonAlt,\r\n+\t\tplaceholder,\r\n+\t\tshowTimeSelect,\r\n+\t\tdateFormat,\r\n+\t\trenderSkeleton,\r\n+\t\tname,\r\n+\t\tlabel,\r\n+\t} = props;\r\n+\tswitch (fieldType) {\r\n+\t\tcase FormFieldType.INPUT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t{iconSrc && (\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\tsrc={iconSrc}\r\n+\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n+\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.PHONE:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<PhoneInput\r\n+\t\t\t\t\t\tcountryCallingCodeEditable={false}\r\n+\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n+\t\t\t\t\t\tcountries={['PE']}\r\n+\t\t\t\t\t\tmaxLength={9}\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.DATEPICKER:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\talt=\"calendar\"\r\n+\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<DatePicker\r\n+\t\t\t\t\t\t\tlocale=\"es\"\r\n+\t\t\t\t\t\t\tselected={field.value}\r\n+\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n+\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n+\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n+\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n+\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.TEXTAREA:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Textarea\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n+\t\t\t\t\t\tdisabled={props.disabled}\r\n+\t\t\t\t\t></Textarea>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SELECT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n+\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n+\t\t\t\t\t\t</SelectTrigger>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n+\t\t\t\t\t\t{props.children}\r\n+\t\t\t\t\t</SelectContent>\r\n+\t\t\t\t</Select>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.CHECKBOX:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n+\t\t\t\t\t\t<Checkbox\r\n+\t\t\t\t\t\t\tid={name}\r\n+\t\t\t\t\t\t\tchecked={field.value}\r\n+\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n+\t\t\t\t\t\t></Checkbox>\r\n+\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n+\t\t\t\t\t\t\t{label}\r\n+\t\t\t\t\t\t</label>\r\n+\t\t\t\t\t</div>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SKELETON:\r\n+\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n+\t\tcase FormFieldType.PASSWORD:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<PasswordInput\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\tvalue={field.value}\r\n+\t\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tdefault:\r\n+\t\t\tbreak;\r\n+\t}\r\n+\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n+};\r\n+\r\n+function CustomFormField(props: Props) {\r\n+\tconst { control, fieldType, name, label } = props;\r\n+\treturn (\r\n+\t\t<FormField\r\n+\t\t\tcontrol={control}\r\n+\t\t\tname={name}\r\n+\t\t\trender={({ field }) => (\r\n+\t\t\t\t<FormItem className=\"flex-1\">\r\n+\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n+\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n+\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n+\t\t\t\t</FormItem>\r\n+\t\t\t)}\r\n+\t\t/>\r\n+\t);\r\n+}\r\n+\r\n+export default CustomFormField;\r\n"
                },
                {
                    "date": 1727138969821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -204,210 +204,4 @@\n \t);\r\n }\r\n \r\n export default CustomFormField;\r\n-'use client';\r\n-import React from 'react';\r\n-import DatePicker from 'react-datepicker';\r\n-import { registerLocale } from 'react-datepicker';\r\n-\r\n-import 'react-datepicker/dist/react-datepicker.css';\r\n-import {\r\n-\tFormControl,\r\n-\tFormField,\r\n-\tFormItem,\r\n-\tFormLabel,\r\n-\tFormMessage,\r\n-} from '@/components/ui/form';\r\n-import {\r\n-\tSelect,\r\n-\tSelectValue,\r\n-\tSelectContent,\r\n-\tSelectTrigger,\r\n-} from '@/components/ui/select';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n-import { Checkbox } from '@/components/ui/checkbox';\r\n-import { Control, Form } from 'react-hook-form';\r\n-import Image from 'next/image';\r\n-import 'react-phone-number-input/style.css';\r\n-import PhoneInput, { type Value } from 'react-phone-number-input';\r\n-import { es } from 'date-fns/locale/es';\r\n-import { PasswordInput } from '@/components/PasswordInput';\r\n-registerLocale('es', es);\r\n-\r\n-export enum FormFieldType {\r\n-\tINPUT = 'input',\r\n-\tTEXTAREA = 'textarea',\r\n-\tPHONE = 'phoneInput',\r\n-\tCHECKBOX = 'checkbox',\r\n-\tDATEPICKER = 'datePicker',\r\n-\tSELECT = 'select',\r\n-\tSKELETON = 'skeleton',\r\n-\tPASSWORD = 'password',\r\n-}\r\n-\r\n-interface Props {\r\n-\tcontrol: Control<any>;\r\n-\tfieldType: FormFieldType;\r\n-\tname: string;\r\n-\tlabel?: string;\r\n-\ticonSrc?: string;\r\n-\ticonAlt?: string;\r\n-\tdisabled?: boolean;\r\n-\tdateFormat?: string;\r\n-\tshowTimeSelect?: boolean;\r\n-\tchildren?: React.ReactNode;\r\n-\tplaceholder?: string;\r\n-\trenderSkeleton?: (field: any) => React.ReactNode;\r\n-}\r\n-\r\n-const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n-\tconst {\r\n-\t\tfieldType,\r\n-\t\ticonSrc,\r\n-\t\ticonAlt,\r\n-\t\tplaceholder,\r\n-\t\tshowTimeSelect,\r\n-\t\tdateFormat,\r\n-\t\trenderSkeleton,\r\n-\t\tname,\r\n-\t\tlabel,\r\n-\t} = props;\r\n-\tswitch (fieldType) {\r\n-\t\tcase FormFieldType.INPUT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t{iconSrc && (\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\tsrc={iconSrc}\r\n-\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n-\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.PHONE:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PhoneInput\r\n-\t\t\t\t\t\tcountryCallingCodeEditable={false}\r\n-\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tmaxLength={9}\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.DATEPICKER:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\talt=\"calendar\"\r\n-\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<DatePicker\r\n-\t\t\t\t\t\t\tlocale=\"es\"\r\n-\t\t\t\t\t\t\tselected={field.value}\r\n-\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n-\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n-\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n-\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n-\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.TEXTAREA:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Textarea\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n-\t\t\t\t\t\tdisabled={props.disabled}\r\n-\t\t\t\t\t></Textarea>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SELECT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n-\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n-\t\t\t\t\t\t</SelectTrigger>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n-\t\t\t\t\t\t{props.children}\r\n-\t\t\t\t\t</SelectContent>\r\n-\t\t\t\t</Select>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.CHECKBOX:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n-\t\t\t\t\t\t<Checkbox\r\n-\t\t\t\t\t\t\tid={name}\r\n-\t\t\t\t\t\t\tchecked={field.value}\r\n-\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n-\t\t\t\t\t\t></Checkbox>\r\n-\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n-\t\t\t\t\t\t\t{label}\r\n-\t\t\t\t\t\t</label>\r\n-\t\t\t\t\t</div>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SKELETON:\r\n-\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n-\t\tcase FormFieldType.PASSWORD:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<PasswordInput\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\tvalue={field.value}\r\n-\t\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tdefault:\r\n-\t\t\tbreak;\r\n-\t}\r\n-\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n-};\r\n-\r\n-function CustomFormField(props: Props) {\r\n-\tconst { control, fieldType, name, label } = props;\r\n-\treturn (\r\n-\t\t<FormField\r\n-\t\t\tcontrol={control}\r\n-\t\t\tname={name}\r\n-\t\t\trender={({ field }) => (\r\n-\t\t\t\t<FormItem className=\"flex-1\">\r\n-\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n-\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n-\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n-\t\t\t\t</FormItem>\r\n-\t\t\t)}\r\n-\t\t/>\r\n-\t);\r\n-}\r\n-\r\n-export default CustomFormField;\r\n"
                },
                {
                    "date": 1727139213759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,207 @@\n+'use client';\r\n+import React from 'react';\r\n+import DatePicker from 'react-datepicker';\r\n+import { registerLocale } from 'react-datepicker';\r\n+\r\n+import 'react-datepicker/dist/react-datepicker.css';\r\n+import {\r\n+\tFormControl,\r\n+\tFormField,\r\n+\tFormItem,\r\n+\tFormLabel,\r\n+\tFormMessage,\r\n+} from '@/components/ui/form';\r\n+import {\r\n+\tSelect,\r\n+\tSelectValue,\r\n+\tSelectContent,\r\n+\tSelectTrigger,\r\n+} from '@/components/ui/select';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Textarea } from '@/components/ui/textarea';\r\n+import { Checkbox } from '@/components/ui/checkbox';\r\n+import { Control, Form } from 'react-hook-form';\r\n+import Image from 'next/image';\r\n+import 'react-phone-number-input/style.css';\r\n+import PhoneInput, { type Value } from 'react-phone-number-input';\r\n+import { es } from 'date-fns/locale/es';\r\n+import { PasswordInput } from '@/components/PasswordInput';\r\n+registerLocale('es', es);\r\n+\r\n+export enum FormFieldType {\r\n+\tINPUT = 'input',\r\n+\tTEXTAREA = 'textarea',\r\n+\tPHONE = 'phoneInput',\r\n+\tCHECKBOX = 'checkbox',\r\n+\tDATEPICKER = 'datePicker',\r\n+\tSELECT = 'select',\r\n+\tSKELETON = 'skeleton',\r\n+\tPASSWORD = 'password',\r\n+}\r\n+\r\n+interface Props {\r\n+\tcontrol: Control<any>;\r\n+\tfieldType: FormFieldType;\r\n+\tname: string;\r\n+\tlabel?: string;\r\n+\ticonSrc?: string;\r\n+\ticonAlt?: string;\r\n+\tdisabled?: boolean;\r\n+\tdateFormat?: string;\r\n+\tshowTimeSelect?: boolean;\r\n+\tchildren?: React.ReactNode;\r\n+\tplaceholder?: string;\r\n+\trenderSkeleton?: (field: any) => React.ReactNode;\r\n+}\r\n+\r\n+const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n+\tconst {\r\n+\t\tfieldType,\r\n+\t\ticonSrc,\r\n+\t\ticonAlt,\r\n+\t\tplaceholder,\r\n+\t\tshowTimeSelect,\r\n+\t\tdateFormat,\r\n+\t\trenderSkeleton,\r\n+\t\tname,\r\n+\t\tlabel,\r\n+\t} = props;\r\n+\tswitch (fieldType) {\r\n+\t\tcase FormFieldType.INPUT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t{iconSrc && (\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\tsrc={iconSrc}\r\n+\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n+\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.PHONE:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Input\r\n+\t\t\t\t\t\tcountryCallingCodeEditable={false}\r\n+\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n+\t\t\t\t\t\tcountries={['PE']}\r\n+\t\t\t\t\t\tmaxLength={11}\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n+\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.DATEPICKER:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\talt=\"calendar\"\r\n+\t\t\t\t\t\tclassName=\"ml-2\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<DatePicker\r\n+\t\t\t\t\t\t\tlocale=\"es\"\r\n+\t\t\t\t\t\t\tselected={field.value}\r\n+\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n+\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n+\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n+\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n+\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.TEXTAREA:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<Textarea\r\n+\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n+\t\t\t\t\t\tdisabled={props.disabled}\r\n+\t\t\t\t\t></Textarea>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SELECT:\r\n+\t\t\treturn (\r\n+\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n+\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n+\t\t\t\t\t\t</SelectTrigger>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n+\t\t\t\t\t\t{props.children}\r\n+\t\t\t\t\t</SelectContent>\r\n+\t\t\t\t</Select>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.CHECKBOX:\r\n+\t\t\treturn (\r\n+\t\t\t\t<FormControl>\r\n+\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n+\t\t\t\t\t\t<Checkbox\r\n+\t\t\t\t\t\t\tid={name}\r\n+\t\t\t\t\t\t\tchecked={field.value}\r\n+\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n+\t\t\t\t\t\t></Checkbox>\r\n+\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n+\t\t\t\t\t\t\t{label}\r\n+\t\t\t\t\t\t</label>\r\n+\t\t\t\t\t</div>\r\n+\t\t\t\t</FormControl>\r\n+\t\t\t);\r\n+\t\tcase FormFieldType.SKELETON:\r\n+\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n+\t\tcase FormFieldType.PASSWORD:\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n+\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t<PasswordInput\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\tvalue={field.value}\r\n+\t\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</FormControl>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\tdefault:\r\n+\t\t\tbreak;\r\n+\t}\r\n+\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n+};\r\n+\r\n+function CustomFormField(props: Props) {\r\n+\tconst { control, fieldType, name, label } = props;\r\n+\treturn (\r\n+\t\t<FormField\r\n+\t\t\tcontrol={control}\r\n+\t\t\tname={name}\r\n+\t\t\trender={({ field }) => (\r\n+\t\t\t\t<FormItem className=\"flex-1\">\r\n+\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n+\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n+\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n+\t\t\t\t</FormItem>\r\n+\t\t\t)}\r\n+\t\t/>\r\n+\t);\r\n+}\r\n+\r\n+export default CustomFormField;\r\n"
                },
                {
                    "date": 1727139272115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,11 +91,9 @@\n \t\tcase FormFieldType.PHONE:\r\n \t\t\treturn (\r\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<Input\r\n-\t\t\t\t\t\tcountryCallingCodeEditable={false}\r\n-\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tcountries={['PE']}\r\n+\t\t\t\t\t\ttype=\"number\"\r\n \t\t\t\t\t\tmaxLength={11}\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n@@ -204,211 +202,4 @@\n \t);\r\n }\r\n \r\n export default CustomFormField;\r\n-'use client';\r\n-import React from 'react';\r\n-import DatePicker from 'react-datepicker';\r\n-import { registerLocale } from 'react-datepicker';\r\n-\r\n-import 'react-datepicker/dist/react-datepicker.css';\r\n-import {\r\n-\tFormControl,\r\n-\tFormField,\r\n-\tFormItem,\r\n-\tFormLabel,\r\n-\tFormMessage,\r\n-} from '@/components/ui/form';\r\n-import {\r\n-\tSelect,\r\n-\tSelectValue,\r\n-\tSelectContent,\r\n-\tSelectTrigger,\r\n-} from '@/components/ui/select';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n-import { Checkbox } from '@/components/ui/checkbox';\r\n-import { Control, Form } from 'react-hook-form';\r\n-import Image from 'next/image';\r\n-import 'react-phone-number-input/style.css';\r\n-import PhoneInput, { type Value } from 'react-phone-number-input';\r\n-import { es } from 'date-fns/locale/es';\r\n-import { PasswordInput } from '@/components/PasswordInput';\r\n-registerLocale('es', es);\r\n-\r\n-export enum FormFieldType {\r\n-\tINPUT = 'input',\r\n-\tTEXTAREA = 'textarea',\r\n-\tPHONE = 'phoneInput',\r\n-\tCHECKBOX = 'checkbox',\r\n-\tDATEPICKER = 'datePicker',\r\n-\tSELECT = 'select',\r\n-\tSKELETON = 'skeleton',\r\n-\tPASSWORD = 'password',\r\n-}\r\n-\r\n-interface Props {\r\n-\tcontrol: Control<any>;\r\n-\tfieldType: FormFieldType;\r\n-\tname: string;\r\n-\tlabel?: string;\r\n-\ticonSrc?: string;\r\n-\ticonAlt?: string;\r\n-\tdisabled?: boolean;\r\n-\tdateFormat?: string;\r\n-\tshowTimeSelect?: boolean;\r\n-\tchildren?: React.ReactNode;\r\n-\tplaceholder?: string;\r\n-\trenderSkeleton?: (field: any) => React.ReactNode;\r\n-}\r\n-\r\n-const RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n-\tconst {\r\n-\t\tfieldType,\r\n-\t\ticonSrc,\r\n-\t\ticonAlt,\r\n-\t\tplaceholder,\r\n-\t\tshowTimeSelect,\r\n-\t\tdateFormat,\r\n-\t\trenderSkeleton,\r\n-\t\tname,\r\n-\t\tlabel,\r\n-\t} = props;\r\n-\tswitch (fieldType) {\r\n-\t\tcase FormFieldType.INPUT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t{iconSrc && (\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\tsrc={iconSrc}\r\n-\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n-\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.PHONE:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<PhoneInput\r\n-\t\t\t\t\t\tcountryCallingCodeEditable={false}\r\n-\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n-\t\t\t\t\t\tcountries={['PE']}\r\n-\t\t\t\t\t\tmaxLength={9}\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.DATEPICKER:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\talt=\"calendar\"\r\n-\t\t\t\t\t\tclassName=\"ml-2\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<DatePicker\r\n-\t\t\t\t\t\t\tlocale=\"es\"\r\n-\t\t\t\t\t\t\tselected={field.value}\r\n-\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n-\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n-\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n-\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n-\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.TEXTAREA:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Textarea\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n-\t\t\t\t\t\tdisabled={props.disabled}\r\n-\t\t\t\t\t></Textarea>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SELECT:\r\n-\t\t\treturn (\r\n-\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n-\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n-\t\t\t\t\t\t</SelectTrigger>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n-\t\t\t\t\t\t{props.children}\r\n-\t\t\t\t\t</SelectContent>\r\n-\t\t\t\t</Select>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.CHECKBOX:\r\n-\t\t\treturn (\r\n-\t\t\t\t<FormControl>\r\n-\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n-\t\t\t\t\t\t<Checkbox\r\n-\t\t\t\t\t\t\tid={name}\r\n-\t\t\t\t\t\t\tchecked={field.value}\r\n-\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n-\t\t\t\t\t\t></Checkbox>\r\n-\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n-\t\t\t\t\t\t\t{label}\r\n-\t\t\t\t\t\t</label>\r\n-\t\t\t\t\t</div>\r\n-\t\t\t\t</FormControl>\r\n-\t\t\t);\r\n-\t\tcase FormFieldType.SKELETON:\r\n-\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n-\t\tcase FormFieldType.PASSWORD:\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"rounded-md border border-dark-500 bg-dark-400\">\r\n-\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t<PasswordInput\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\tvalue={field.value}\r\n-\t\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</FormControl>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\tdefault:\r\n-\t\t\tbreak;\r\n-\t}\r\n-\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n-};\r\n-\r\n-function CustomFormField(props: Props) {\r\n-\tconst { control, fieldType, name, label } = props;\r\n-\treturn (\r\n-\t\t<FormField\r\n-\t\t\tcontrol={control}\r\n-\t\t\tname={name}\r\n-\t\t\trender={({ field }) => (\r\n-\t\t\t\t<FormItem className=\"flex-1\">\r\n-\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n-\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n-\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n-\t\t\t\t</FormItem>\r\n-\t\t\t)}\r\n-\t\t/>\r\n-\t);\r\n-}\r\n-\r\n-export default CustomFormField;\r\n"
                },
                {
                    "date": 1727139294021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,10 +91,9 @@\n \t\tcase FormFieldType.PHONE:\r\n \t\t\treturn (\r\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<Input\r\n-\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\tmaxLength={11}\r\n+\t\t\t\t\t\tmaxLength={9}\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n \t\t\t\t\t\tclassName=\"input-phone\"\r\n"
                },
                {
                    "date": 1727139455223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n \tSelectContent,\r\n \tSelectTrigger,\r\n } from '@/components/ui/select';\r\n import { Input } from '@/components/ui/input';\r\n+import {default as TextInput} from 'react-phone-number-input/input'\r\n import { Textarea } from '@/components/ui/textarea';\r\n import { Checkbox } from '@/components/ui/checkbox';\r\n import { Control, Form } from 'react-hook-form';\r\n import Image from 'next/image';\r\n@@ -90,9 +91,9 @@\n \t\t\t);\r\n \t\tcase FormFieldType.PHONE:\r\n \t\t\treturn (\r\n \t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Input\r\n+\t\t\t\t\t<TextInput\r\n \t\t\t\t\t\tmaxLength={9}\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n"
                },
                {
                    "date": 1727139503606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,8 +92,9 @@\n \t\tcase FormFieldType.PHONE:\r\n \t\t\treturn (\r\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<TextInput\r\n+\t\t\t\t\tcountry=\"PE\"\r\n \t\t\t\t\t\tmaxLength={9}\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n"
                },
                {
                    "date": 1727139575190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,8 +93,9 @@\n \t\t\treturn (\r\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<TextInput\r\n \t\t\t\t\tcountry=\"PE\"\r\n+\t\t\t\t\twithCountryCallingCode={false}\r\n \t\t\t\t\t\tmaxLength={9}\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n"
                },
                {
                    "date": 1727139610522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,8 @@\n \tSelectContent,\r\n \tSelectTrigger,\r\n } from '@/components/ui/select';\r\n import { Input } from '@/components/ui/input';\r\n-import {default as TextInput} from 'react-phone-number-input/input'\r\n import { Textarea } from '@/components/ui/textarea';\r\n import { Checkbox } from '@/components/ui/checkbox';\r\n import { Control, Form } from 'react-hook-form';\r\n import Image from 'next/image';\r\n@@ -91,11 +90,9 @@\n \t\t\t);\r\n \t\tcase FormFieldType.PHONE:\r\n \t\t\treturn (\r\n \t\t\t\t<FormControl>\r\n-\t\t\t\t\t<TextInput\r\n-\t\t\t\t\tcountry=\"PE\"\r\n-\t\t\t\t\twithCountryCallingCode={false}\r\n+\t\t\t\t\t<Input\r\n \t\t\t\t\t\tmaxLength={9}\r\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n"
                },
                {
                    "date": 1727139811903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,20 @@\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n \t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t/>\r\n+\t\t\t\t\t>\r\n+\t\t\t\t\t\t<div\r\n+\t\t\t\t\t\t\taria-hidden=\"true\"\r\n+\t\t\t\t\t\t\tclassName=\"PhoneInputCountryIcon PhoneInputCountryIcon--border\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\tclassName=\"PhoneInputCountryIconImg\"\r\n+\t\t\t\t\t\t\t\talt=\"Russia\"\r\n+\t\t\t\t\t\t\t\tsrc=\"https://purecatamphetamine.github.io/country-flag-icons/3x2/RU.svg\"\r\n+\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</Input>\r\n \t\t\t\t</FormControl>\r\n \t\t\t);\r\n \t\tcase FormFieldType.DATEPICKER:\r\n \t\t\treturn (\r\n"
                },
                {
                    "date": 1727139860713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,8 +104,9 @@\n \t\t\t\t\t\t>\r\n \t\t\t\t\t\t\t<Image\r\n \t\t\t\t\t\t\t\tclassName=\"PhoneInputCountryIconImg\"\r\n \t\t\t\t\t\t\t\talt=\"Russia\"\r\n+\t\t\t\t\t\t\t\twidth={24}\r\n \t\t\t\t\t\t\t\tsrc=\"https://purecatamphetamine.github.io/country-flag-icons/3x2/RU.svg\"\r\n \t\t\t\t\t\t\t/>\r\n \t\t\t\t\t\t</div>\r\n \t\t\t\t\t</Input>\r\n"
                },
                {
                    "date": 1727139871496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,8 +105,9 @@\n \t\t\t\t\t\t\t<Image\r\n \t\t\t\t\t\t\t\tclassName=\"PhoneInputCountryIconImg\"\r\n \t\t\t\t\t\t\t\talt=\"Russia\"\r\n \t\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\t\theight={24}\r\n \t\t\t\t\t\t\t\tsrc=\"https://purecatamphetamine.github.io/country-flag-icons/3x2/RU.svg\"\r\n \t\t\t\t\t\t\t/>\r\n \t\t\t\t\t\t</div>\r\n \t\t\t\t\t</Input>\r\n"
                },
                {
                    "date": 1727139935989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,22 +96,21 @@\n \t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\tonChange={field.onChange}\r\n \t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t></Input>\r\n+\t\t\t\t\t<div\r\n+\t\t\t\t\t\taria-hidden=\"true\"\r\n+\t\t\t\t\t\tclassName=\"PhoneInputCountryIcon PhoneInputCountryIcon--border\"\r\n \t\t\t\t\t>\r\n-\t\t\t\t\t\t<div\r\n-\t\t\t\t\t\t\taria-hidden=\"true\"\r\n-\t\t\t\t\t\t\tclassName=\"PhoneInputCountryIcon PhoneInputCountryIcon--border\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\tclassName=\"PhoneInputCountryIconImg\"\r\n-\t\t\t\t\t\t\t\talt=\"Russia\"\r\n-\t\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\t\tsrc=\"https://purecatamphetamine.github.io/country-flag-icons/3x2/RU.svg\"\r\n-\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</Input>\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\tclassName=\"PhoneInputCountryIconImg\"\r\n+\t\t\t\t\t\t\talt=\"Russia\"\r\n+\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\tsrc=\"https://purecatamphetamine.github.io/country-flag-icons/3x2/RU.svg\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t</div>\r\n \t\t\t\t</FormControl>\r\n \t\t\t);\r\n \t\tcase FormFieldType.DATEPICKER:\r\n \t\t\treturn (\r\n"
                },
                {
                    "date": 1727139957652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,27 +90,29 @@\n \t\t\t);\r\n \t\tcase FormFieldType.PHONE:\r\n \t\t\treturn (\r\n \t\t\t\t<FormControl>\r\n-\t\t\t\t\t<Input\r\n-\t\t\t\t\t\tmaxLength={9}\r\n-\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n-\t\t\t\t\t\tonChange={field.onChange}\r\n-\t\t\t\t\t\tclassName=\"input-phone\"\r\n-\t\t\t\t\t></Input>\r\n-\t\t\t\t\t<div\r\n-\t\t\t\t\t\taria-hidden=\"true\"\r\n-\t\t\t\t\t\tclassName=\"PhoneInputCountryIcon PhoneInputCountryIcon--border\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\tclassName=\"PhoneInputCountryIconImg\"\r\n-\t\t\t\t\t\t\talt=\"Russia\"\r\n-\t\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\tsrc=\"https://purecatamphetamine.github.io/country-flag-icons/3x2/RU.svg\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t</div>\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\tmaxLength={9}\r\n+\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n+\t\t\t\t\t\t\tonChange={field.onChange}\r\n+\t\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t\t<div\r\n+\t\t\t\t\t\t\taria-hidden=\"true\"\r\n+\t\t\t\t\t\t\tclassName=\"PhoneInputCountryIcon PhoneInputCountryIcon--border\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\tclassName=\"PhoneInputCountryIconImg\"\r\n+\t\t\t\t\t\t\t\talt=\"Russia\"\r\n+\t\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\t\tsrc=\"https://purecatamphetamine.github.io/country-flag-icons/3x2/RU.svg\"\r\n+\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n \t\t\t\t</FormControl>\r\n \t\t\t);\r\n \t\tcase FormFieldType.DATEPICKER:\r\n \t\t\treturn (\r\n"
                },
                {
                    "date": 1727139990161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n \t\t\t\t\t\t\t\tclassName=\"PhoneInputCountryIconImg\"\r\n \t\t\t\t\t\t\t\talt=\"Russia\"\r\n \t\t\t\t\t\t\t\twidth={24}\r\n \t\t\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\t\t\tsrc=\"https://purecatamphetamine.github.io/country-flag-icons/3x2/RU.svg\"\r\n+\t\t\t\t\t\t\t\tsrc=\"https://purecatamphetamine.github.io/country-flag-icons/3x2/PE.svg\"\r\n \t\t\t\t\t\t\t/>\r\n \t\t\t\t\t\t</div>\r\n \t\t\t\t\t</>\r\n \t\t\t\t</FormControl>\r\n"
                },
                {
                    "date": 1727140071532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n \t\t\t);\r\n \t\tcase FormFieldType.PHONE:\r\n \t\t\treturn (\r\n \t\t\t\t<FormControl>\r\n-\t\t\t\t\t<>\r\n+\t\t\t\t\t<div className='container-phone'>\r\n \t\t\t\t\t\t<Input\r\n \t\t\t\t\t\t\tmaxLength={9}\r\n \t\t\t\t\t\t\tplaceholder={placeholder}\r\n \t\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n@@ -110,9 +110,9 @@\n \t\t\t\t\t\t\t\theight={24}\r\n \t\t\t\t\t\t\t\tsrc=\"https://purecatamphetamine.github.io/country-flag-icons/3x2/PE.svg\"\r\n \t\t\t\t\t\t\t/>\r\n \t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n+\t\t\t\t\t</div>\r\n \t\t\t\t</FormControl>\r\n \t\t\t);\r\n \t\tcase FormFieldType.DATEPICKER:\r\n \t\t\treturn (\r\n"
                },
                {
                    "date": 1727140224603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n \t\t\t\t\t\t>\r\n \t\t\t\t\t\t\t<Image\r\n \t\t\t\t\t\t\t\tclassName=\"PhoneInputCountryIconImg\"\r\n \t\t\t\t\t\t\t\talt=\"Russia\"\r\n-\t\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\t\twidth={18}\r\n \t\t\t\t\t\t\t\theight={24}\r\n \t\t\t\t\t\t\t\tsrc=\"https://purecatamphetamine.github.io/country-flag-icons/3x2/PE.svg\"\r\n \t\t\t\t\t\t\t/>\r\n \t\t\t\t\t\t</div>\r\n"
                },
                {
                    "date": 1727140249718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,10 +105,10 @@\n \t\t\t\t\t\t>\r\n \t\t\t\t\t\t\t<Image\r\n \t\t\t\t\t\t\t\tclassName=\"PhoneInputCountryIconImg\"\r\n \t\t\t\t\t\t\t\talt=\"Russia\"\r\n-\t\t\t\t\t\t\t\twidth={18}\r\n-\t\t\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\t\t\theight={16}\r\n \t\t\t\t\t\t\t\tsrc=\"https://purecatamphetamine.github.io/country-flag-icons/3x2/PE.svg\"\r\n \t\t\t\t\t\t\t/>\r\n \t\t\t\t\t\t</div>\r\n \t\t\t\t\t</div>\r\n"
                },
                {
                    "date": 1727140404148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,12 +93,13 @@\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<div className='container-phone'>\r\n \t\t\t\t\t\t<Input\r\n \t\t\t\t\t\t\tmaxLength={9}\r\n-\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\tplaceholder={'955061182'}\r\n \t\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\t\tonChange={field.onChange}\r\n \t\t\t\t\t\t\tclassName=\"input-phone\"\r\n+\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t></Input>\r\n \t\t\t\t\t\t<div\r\n \t\t\t\t\t\t\taria-hidden=\"true\"\r\n \t\t\t\t\t\t\tclassName=\"PhoneInputCountryIcon PhoneInputCountryIcon--border\"\r\n"
                },
                {
                    "date": 1727140416019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<div className='container-phone'>\r\n \t\t\t\t\t\t<Input\r\n \t\t\t\t\t\t\tmaxLength={9}\r\n-\t\t\t\t\t\t\tplaceholder={'955061182'}\r\n+\t\t\t\t\t\t\tplaceholder={'Ej. 955061182'}\r\n \t\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\t\tonChange={field.onChange}\r\n \t\t\t\t\t\t\tclassName=\"input-phone\"\r\n \t\t\t\t\t\t\t\r\n"
                },
                {
                    "date": 1727140426694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n \t\t\t\t<FormControl>\r\n \t\t\t\t\t<div className='container-phone'>\r\n \t\t\t\t\t\t<Input\r\n \t\t\t\t\t\t\tmaxLength={9}\r\n-\t\t\t\t\t\t\tplaceholder={'Ej. 955061182'}\r\n+\t\t\t\t\t\t\tplaceholder={'Ej. 999999999'}\r\n \t\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n \t\t\t\t\t\t\tonChange={field.onChange}\r\n \t\t\t\t\t\t\tclassName=\"input-phone\"\r\n \t\t\t\t\t\t\t\r\n"
                }
            ],
            "date": 1723501032243,
            "name": "Commit-0",
            "content": "'use client';\r\nimport React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { registerLocale } from 'react-datepicker';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport {\r\n\tFormControl,\r\n\tFormDescription,\r\n\tFormField,\r\n\tFormItem,\r\n\tFormLabel,\r\n\tFormMessage,\r\n} from '@/components/ui/form';\r\nimport {\r\n\tSelect,\r\n\tSelectValue,\r\n\tSelectContent,\r\n\tSelectTrigger,\r\n} from '@/components/ui/select';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Control, Form } from 'react-hook-form';\r\nimport Image from 'next/image';\r\nimport 'react-phone-number-input/style.css';\r\nimport PhoneInput, { type Value } from 'react-phone-number-input';\r\nimport { es } from 'date-fns/locale/es';\r\nregisterLocale('es', es);\r\n\r\nexport enum FormFieldType {\r\n\tINPUT = 'input',\r\n\tTEXTAREA = 'textarea',\r\n\tPHONE = 'phoneInput',\r\n\tCHECKBOX = 'checkbox',\r\n\tDATEPICKER = 'datePicker',\r\n\tSELECT = 'select',\r\n\tSKELETON = 'skeleton',\r\n\tPASSWORD = 'password',\r\n}\r\n\r\ninterface Props {\r\n\tcontrol: Control<any>;\r\n\tfieldType: FormFieldType;\r\n\tname: string;\r\n\tlabel?: string;\r\n\ticonSrc?: string;\r\n\ticonAlt?: string;\r\n\tdisabled?: boolean;\r\n\tdateFormat?: string;\r\n\tshowTimeSelect?: boolean;\r\n\tchildren?: React.ReactNode;\r\n\tplaceholder?: string;\r\n\trenderSkeleton?: (field: any) => React.ReactNode;\r\n}\r\n\r\nconst RenderField = ({ field, props }: { field: any; props: Props }) => {\r\n\tconst {\r\n\t\tfieldType,\r\n\t\ticonSrc,\r\n\t\ticonAlt,\r\n\t\tplaceholder,\r\n\t\tshowTimeSelect,\r\n\t\tdateFormat,\r\n\t\trenderSkeleton,\r\n\t\tname,\r\n\t\tlabel,\r\n\t} = props;\r\n\tswitch (fieldType) {\r\n\t\tcase FormFieldType.INPUT:\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n\t\t\t\t\t{iconSrc && (\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tsrc={iconSrc}\r\n\t\t\t\t\t\t\theight={24}\r\n\t\t\t\t\t\t\talt={iconAlt || 'icon'}\r\n\t\t\t\t\t\t\twidth={24}\r\n\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n\t\t\t\t\t\t></Input>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\tcase FormFieldType.PHONE:\r\n\t\t\treturn (\r\n\t\t\t\t<FormControl>\r\n\t\t\t\t\t<PhoneInput\r\n\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\tdefaultCountry=\"PE\"\r\n\t\t\t\t\t\tinternational\r\n\t\t\t\t\t\twithCountryCallingCode\r\n\t\t\t\t\t\tvalue={field.value as Value | undefined}\r\n\t\t\t\t\t\tonChange={field.onChange}\r\n\t\t\t\t\t\tclassName=\"input-phone\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormControl>\r\n\t\t\t);\r\n\t\tcase FormFieldType.DATEPICKER:\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tsrc=\"/assets/icons/calendar.svg\"\r\n\t\t\t\t\t\theight={24}\r\n\t\t\t\t\t\twidth={24}\r\n\t\t\t\t\t\talt=\"calendar\"\r\n\t\t\t\t\t\tclassName=\"ml-2\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\tlocale=\"es\"\r\n\t\t\t\t\t\t\tselected={field.value}\r\n\t\t\t\t\t\t\tonChange={(date) => field.onChange(date)}\r\n\t\t\t\t\t\t\tdateFormat={dateFormat ?? 'MM/dd/yyyy'}\r\n\t\t\t\t\t\t\tshowTimeSelect={showTimeSelect ?? false}\r\n\t\t\t\t\t\t\ttimeInputLabel=\"Time:\"\r\n\t\t\t\t\t\t\twrapperClassName=\"date-picker\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\tcase FormFieldType.TEXTAREA:\r\n\t\t\treturn (\r\n\t\t\t\t<FormControl>\r\n\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\tclassName=\"shad-textArea\"\r\n\t\t\t\t\t\tdisabled={props.disabled}\r\n\t\t\t\t\t></Textarea>\r\n\t\t\t\t</FormControl>\r\n\t\t\t);\r\n\t\tcase FormFieldType.SELECT:\r\n\t\t\treturn (\r\n\t\t\t\t<Select onValueChange={field.onChange} defaultValue={field.value}>\r\n\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t<SelectTrigger className=\"shad-select-trigger\">\r\n\t\t\t\t\t\t\t<SelectValue placeholder={placeholder} />\r\n\t\t\t\t\t\t</SelectTrigger>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t<SelectContent className=\"shad-select-content\">\r\n\t\t\t\t\t\t{props.children}\r\n\t\t\t\t\t</SelectContent>\r\n\t\t\t\t</Select>\r\n\t\t\t);\r\n\t\tcase FormFieldType.CHECKBOX:\r\n\t\t\treturn (\r\n\t\t\t\t<FormControl>\r\n\t\t\t\t\t<div className=\"flex items-center gap-4\">\r\n\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\tid={name}\r\n\t\t\t\t\t\t\tchecked={field.value}\r\n\t\t\t\t\t\t\tonCheckedChange={field.onChange}\r\n\t\t\t\t\t\t></Checkbox>\r\n\t\t\t\t\t\t<label htmlFor={props.name} className=\"checkbox-label\">\r\n\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</FormControl>\r\n\t\t\t);\r\n\t\tcase FormFieldType.SKELETON:\r\n\t\t\treturn renderSkeleton ? renderSkeleton(field) : null;\r\n\t\tcase FormFieldType.CHECKBOX:\r\n\t\t\treturn (\r\n\t\t\t\t<FormControl>\r\n\t\t\t\t\t<div className=\"relative\">\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\ttype={passwordVisibility ? 'text' : 'password'}\r\n\t\t\t\t\t\t\tautoComplete=\"on\"\r\n\t\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\t\tclassName={`pr-12 ${\r\n\t\t\t\t\t\t\t\tgetFieldState(name).error && 'text-destructive'\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"absolute inset-y-0 right-0 flex cursor-pointer items-center p-3 text-muted-foreground\"\r\n\t\t\t\t\t\t\tonClick={() => setPasswordVisibility(!passwordVisibility)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{createElement(passwordVisibility ? EyeOffIcon : EyeIcon, {\r\n\t\t\t\t\t\t\t\tclassName: 'h-6 w-6',\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</FormControl>\r\n\t\t\t);\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\treturn <Input type=\"text\" placeholder=\"Ej. Juan PÃ©rez\" />;\r\n};\r\n\r\nfunction CustomFormField(props: Props) {\r\n\tconst { control, fieldType, name, label } = props;\r\n\treturn (\r\n\t\t<FormField\r\n\t\t\tcontrol={control}\r\n\t\t\tname={name}\r\n\t\t\trender={({ field }) => (\r\n\t\t\t\t<FormItem className=\"flex-1\">\r\n\t\t\t\t\t{fieldType !== FormFieldType.CHECKBOX && label && (\r\n\t\t\t\t\t\t<FormLabel htmlFor={name}>{label}</FormLabel>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<RenderField field={field} props={props}></RenderField>\r\n\t\t\t\t\t<FormMessage className=\"shad-error\" />\r\n\t\t\t\t</FormItem>\r\n\t\t\t)}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default CustomFormField;\r\n"
        }
    ]
}