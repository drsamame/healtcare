{
    "sourceFile": "components/forms/RegisterForm.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 86,
            "patches": [
                {
                    "date": 1723492840837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723492884498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n \t\t\t\t\tplaceholder=\"955061182\"\r\n \t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n \t\t\t\t\ticonAlt=\"email\"\r\n \t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Empezar</SubmitButton>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n \t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n \t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n \t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n \t\t\t\t\t</p>\r\n"
                },
                {
                    "date": 1723500185819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,11 @@\n import { useState } from 'react';\r\n import { userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/patient.actions';\r\n+import {\r\n+\tFormControl\r\n+} from '@/components/ui/form';\r\n \r\n const PatientForm = () => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n@@ -35,9 +38,9 @@\n \r\n \t\t\tif (!res?.error) {\r\n \t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n \t\t\t} else {\r\n-\t\t\t\tconsole.log(res)\r\n+\t\t\t\tconsole.log(res);\r\n \t\t\t\tform.setError('root.serverError', {\r\n \t\t\t\t\tmessage:\r\n \t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n \t\t\t\t\ttype: '400',\r\n@@ -51,9 +54,8 @@\n \t}\r\n \treturn (\r\n \t\t<Form {...form}>\r\n \t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t\r\n \t\t\t\t<CustomFormField\r\n \t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n \t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\tname=\"name\"\r\n@@ -79,8 +81,29 @@\n \t\t\t\t\tplaceholder=\"955061182\"\r\n \t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n \t\t\t\t\ticonAlt=\"email\"\r\n \t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\trenderSkeleton={(field) => (\r\n+\t\t\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\r\n+\t\t\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\t\t\tplaceholder={placeholder}\r\n+\t\t\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t></CustomFormField>\r\n \t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n \t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n \t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n \t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n"
                },
                {
                    "date": 1723500201799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n import { createUser } from '@/lib/actions/patient.actions';\r\n import {\r\n \tFormControl\r\n } from '@/components/ui/form';\r\n+import { Input } from '@/components/ui/input';\r\n \r\n const PatientForm = () => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n"
                },
                {
                    "date": 1723500233934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+import {\r\n+\tFormControl\r\n+} from '@/components/ui/form';\r\n+import { Input } from '@/components/ui/input';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tphone: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tphone,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\trenderSkeleton={(field) => (\r\n+\t\t\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\r\n+\t\t\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\t\t\tplaceholder='Nueva contraseña'\r\n+\t\t\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t></CustomFormField>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723500245361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+import {\r\n+\tFormControl\r\n+} from '@/components/ui/form';\r\n+import { Input } from '@/components/ui/input';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tphone: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tphone,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\trenderSkeleton={(field) => (\r\n+\t\t\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n+\r\n+\t\t\t\t\t\t\t<FormControl>\r\n+\t\t\t\t\t\t\t\t<Input\r\n+\t\t\t\t\t\t\t\t\tplaceholder='Nueva contraseña'\r\n+\t\t\t\t\t\t\t\t\t{...field}\r\n+\t\t\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n+\t\t\t\t\t\t\t\t></Input>\r\n+\t\t\t\t\t\t\t</FormControl>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t></CustomFormField>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723500407500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,12 +8,9 @@\n import { useState } from 'react';\r\n import { userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/patient.actions';\r\n-import {\r\n-\tFormControl\r\n-} from '@/components/ui/form';\r\n-import { Input } from '@/components/ui/input';\r\n+import { PasswordInput } from '../PasswordInput';\r\n \r\n const PatientForm = () => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n@@ -23,19 +20,21 @@\n \t\tdefaultValues: {\r\n \t\t\tname: '',\r\n \t\t\temail: '',\r\n \t\t\tphone: '',\r\n+\t\t\tpassword: '',\r\n \t\t},\r\n \t});\r\n \r\n \tasync function onSubmit({\r\n \t\tname,\r\n \t\temail,\r\n \t\tphone,\r\n+\t\tpassword,\r\n \t}: z.infer<typeof userFormValidation>) {\r\n \t\tsetIsLoading(true);\r\n \t\ttry {\r\n-\t\t\tconst userData = { name, email, phone };\r\n+\t\t\tconst userData = { name, email, phone, password };\r\n \t\t\tconst res = await createUser(userData);\r\n \r\n \t\t\tif (!res?.error) {\r\n \t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n@@ -85,24 +84,20 @@\n \t\t\t\t/>\r\n \t\t\t\t<CustomFormField\r\n \t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n \t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tname=\"password\"\r\n \t\t\t\t\tlabel=\"Contraseña\"\r\n \t\t\t\t\tplaceholder=\"955061182\"\r\n \t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n \t\t\t\t\ticonAlt=\"email\"\r\n \t\t\t\t\trenderSkeleton={(field) => (\r\n-\t\t\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\r\n-\t\t\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\t\t\tplaceholder='Nueva contraseña'\r\n-\t\t\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t<PasswordInput\r\n+\t\t\t\t\t\t\tid=\"current_password\"\r\n+\t\t\t\t\t\t\tvalue={currentPassword}\r\n+\t\t\t\t\t\t\tonChange={(e) => setCurrentPassword(e.target.value)}\r\n+\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n+\t\t\t\t\t\t/>\r\n \t\t\t\t\t)}\r\n \t\t\t\t></CustomFormField>\r\n \t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n \t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n@@ -115,240 +110,4 @@\n \t);\r\n };\r\n \r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-import {\r\n-\tFormControl\r\n-} from '@/components/ui/form';\r\n-import { Input } from '@/components/ui/input';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\trenderSkeleton={(field) => (\r\n-\t\t\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\r\n-\t\t\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\t\t\tplaceholder='Nueva contraseña'\r\n-\t\t\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t></CustomFormField>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-import {\r\n-\tFormControl\r\n-} from '@/components/ui/form';\r\n-import { Input } from '@/components/ui/input';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\trenderSkeleton={(field) => (\r\n-\t\t\t\t\t\t<div className=\"flex rounded-md border border-dark-500 bg-dark-400\">\r\n-\r\n-\t\t\t\t\t\t\t<FormControl>\r\n-\t\t\t\t\t\t\t\t<Input\r\n-\t\t\t\t\t\t\t\t\tplaceholder={placeholder}\r\n-\t\t\t\t\t\t\t\t\t{...field}\r\n-\t\t\t\t\t\t\t\t\tclassName=\"shad-input border-0\"\r\n-\t\t\t\t\t\t\t\t></Input>\r\n-\t\t\t\t\t\t\t</FormControl>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t></CustomFormField>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1723500633046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,10 +92,8 @@\n \t\t\t\t\ticonAlt=\"email\"\r\n \t\t\t\t\trenderSkeleton={(field) => (\r\n \t\t\t\t\t\t<PasswordInput\r\n \t\t\t\t\t\t\tid=\"current_password\"\r\n-\t\t\t\t\t\t\tvalue={currentPassword}\r\n-\t\t\t\t\t\t\tonChange={(e) => setCurrentPassword(e.target.value)}\r\n \t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n \t\t\t\t\t\t/>\r\n \t\t\t\t\t)}\r\n \t\t\t\t></CustomFormField>\r\n"
                },
                {
                    "date": 1723500785228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,111 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+import PasswordInput from '../PasswordInput';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tphone: '',\r\n+\t\t\tpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tphone,\r\n+\t\tpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone, password };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\trenderSkeleton={(field) => (\r\n+\t\t\t\t\t\t<PasswordInput\r\n+\t\t\t\t\t\t\tid=\"current_password\"\r\n+\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t></CustomFormField>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723500792653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n import { useState } from 'react';\r\n import { userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/patient.actions';\r\n-import PasswordInput from '../PasswordInput';\r\n+import PasswordField from '../PasswordInput';\r\n \r\n const PatientForm = () => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n@@ -108,115 +108,4 @@\n \t);\r\n };\r\n \r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-import { PasswordInput } from '../PasswordInput';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n-\t\t\tpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t\tpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone, password };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\trenderSkeleton={(field) => (\r\n-\t\t\t\t\t\t<PasswordInput\r\n-\t\t\t\t\t\t\tid=\"current_password\"\r\n-\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t></CustomFormField>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1723500803412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,111 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+import PasswordField from '../PasswordInput';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tphone: '',\r\n+\t\t\tpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tphone,\r\n+\t\tpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone, password };\r\n+\t\t\t// const res = await createUser(userData);\r\n+\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\trenderSkeleton={(field) => (\r\n+\t\t\t\t\t\t<PasswordInput\r\n+\t\t\t\t\t\t\tid=\"current_password\"\r\n+\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t></CustomFormField>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723500848561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,119 +33,8 @@\n \t}: z.infer<typeof userFormValidation>) {\r\n \t\tsetIsLoading(true);\r\n \t\ttry {\r\n \t\t\tconst userData = { name, email, phone, password };\r\n-\t\t\t// const res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\trenderSkeleton={(field) => (\r\n-\t\t\t\t\t\t<PasswordInput\r\n-\t\t\t\t\t\t\tid=\"current_password\"\r\n-\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t></CustomFormField>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-import PasswordField from '../PasswordInput';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n-\t\t\tpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t\tpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone, password };\r\n \t\t\tconst res = await createUser(userData);\r\n \r\n \t\t\tif (!res?.error) {\r\n \t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n"
                },
                {
                    "date": 1723500904087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,111 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+import PasswordInput from '../PasswordInput';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tphone: '',\r\n+\t\t\tpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tphone,\r\n+\t\tpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone, password };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\trenderSkeleton={(field) => (\r\n+\t\t\t\t\t\t<PasswordInput\r\n+\t\t\t\t\t\t\tid=\"current_password\"\r\n+\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t></CustomFormField>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723500927898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,111 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+import { PasswordInput } from '../PasswordInput';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tphone: '',\r\n+\t\t\tpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tphone,\r\n+\t\tpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone, password };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\trenderSkeleton={(field) => (\r\n+\t\t\t\t\t\t<PasswordInput\r\n+\t\t\t\t\t\t\tid=\"current_password\"\r\n+\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t></CustomFormField>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723501021898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,8 @@\n import { useState } from 'react';\r\n import { userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/patient.actions';\r\n-import { PasswordInput } from '../PasswordInput';\r\n \r\n const PatientForm = () => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n@@ -82,21 +81,15 @@\n \t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n \t\t\t\t\ticonAlt=\"email\"\r\n \t\t\t\t/>\r\n \t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n \t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\tname=\"password\"\r\n \t\t\t\t\tlabel=\"Contraseña\"\r\n \t\t\t\t\tplaceholder=\"955061182\"\r\n \t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n \t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\trenderSkeleton={(field) => (\r\n-\t\t\t\t\t\t<PasswordInput\r\n-\t\t\t\t\t\t\tid=\"current_password\"\r\n-\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n \t\t\t\t></CustomFormField>\r\n \t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n \t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n \t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n@@ -108,226 +101,4 @@\n \t);\r\n };\r\n \r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-import PasswordInput from '../PasswordInput';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n-\t\t\tpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t\tpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone, password };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\trenderSkeleton={(field) => (\r\n-\t\t\t\t\t\t<PasswordInput\r\n-\t\t\t\t\t\t\tid=\"current_password\"\r\n-\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t></CustomFormField>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-import PasswordField from '../PasswordInput';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n-\t\t\tpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t\tpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone, password };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.SKELETON}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\trenderSkeleton={(field) => (\r\n-\t\t\t\t\t\t<PasswordInput\r\n-\t\t\t\t\t\t\tid=\"current_password\"\r\n-\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t></CustomFormField>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1723501041758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n \t\t\t\t\tlabel=\"Contraseña\"\r\n \t\t\t\t\tplaceholder=\"955061182\"\r\n \t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n \t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t></CustomFormField>\r\n+\t\t\t\t/>\r\n \t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n \t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n \t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n \t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n"
                },
                {
                    "date": 1723503773138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tphone: '',\r\n+\t\t\tpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tphone,\r\n+\t\tpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone, password };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723505052611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,13 +84,22 @@\n \t\t\t\t<CustomFormField\r\n \t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n \t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Contraseña\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n \t\t\t\t\tplaceholder=\"955061182\"\r\n \t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n \t\t\t\t\ticonAlt=\"email\"\r\n \t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n \t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n \t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n \t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n \t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n"
                },
                {
                    "date": 1723507900290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,108 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tphone: '',\r\n+\t\t\tpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tphone,\r\n+\t\tpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone, password };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723507906779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,222 +105,4 @@\n \t);\r\n };\r\n \r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n-\t\t\tpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t\tpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone, password };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n-\t\t\tpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t\tpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone, password };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1723507913697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,8 +92,9 @@\n \t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n \t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\tname=\"repeatpassword\"\r\n \t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n \t\t\t\t/>\r\n \t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n \t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n \t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n"
                },
                {
                    "date": 1723507920151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n \t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n \t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\tname=\"repeatpassword\"\r\n \t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n \t\t\t\t/>\r\n \t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n \t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n \t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n"
                },
                {
                    "date": 1723508879817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,111 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tphone: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tphone,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone, password };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723508885815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n \t\tname,\r\n \t\temail,\r\n \t\tphone,\r\n \t\tpassword,\r\n-\t\trepeatpassword,\r\n+\t\trepeatpassword\r\n \t}: z.infer<typeof userFormValidation>) {\r\n \t\tsetIsLoading(true);\r\n \t\ttry {\r\n \t\t\tconst userData = { name, email, phone, password };\r\n@@ -108,113 +108,4 @@\n \t);\r\n };\r\n \r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n-\t\t\tpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t\tpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone, password };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1723536236708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,111 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tphone: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tphone,\r\n+\t\tpassword,\r\n+\t\trepeatpassword\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone, password };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tconsole.log(res)\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723536324061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n \t\t\tconst userData = { name, email, phone, password };\r\n \t\t\tconst res = await createUser(userData);\r\n \t\t\tconsole.log(res)\r\n \t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n \t\t\t} else {\r\n \t\t\t\tconsole.log(res);\r\n \t\t\t\tform.setError('root.serverError', {\r\n \t\t\t\t\tmessage:\r\n@@ -108,115 +108,4 @@\n \t);\r\n };\r\n \r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t\tpassword,\r\n-\t\trepeatpassword\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone, password };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1723940190145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import SubmitButton from '../SubmitButton';\r\n import { useState } from 'react';\r\n import { userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n+import { createUser } from '@/lib/actions/auth-action';\r\n \r\n const PatientForm = () => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n@@ -18,24 +18,22 @@\n \t\tresolver: zodResolver(userFormValidation),\r\n \t\tdefaultValues: {\r\n \t\t\tname: '',\r\n \t\t\temail: '',\r\n-\t\t\tphone: '',\r\n \t\t\tpassword: '',\r\n \t\t\trepeatpassword: '',\r\n \t\t},\r\n \t});\r\n \r\n \tasync function onSubmit({\r\n \t\tname,\r\n \t\temail,\r\n-\t\tphone,\r\n \t\tpassword,\r\n \t\trepeatpassword\r\n \t}: z.infer<typeof userFormValidation>) {\r\n \t\tsetIsLoading(true);\r\n \t\ttry {\r\n-\t\t\tconst userData = { name, email, phone, password };\r\n+\t\t\tconst userData = { name, email,password };\r\n \t\t\tconst res = await createUser(userData);\r\n \t\t\tconsole.log(res)\r\n \t\t\tif (!res?.error) {\r\n \t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n"
                },
                {
                    "date": 1723940542940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,15 +4,16 @@\n import { z } from 'zod';\r\n import { Form } from '@/components/ui/form';\r\n import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n+import { useState, useTransition } from 'react';\r\n import { userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/auth-action';\r\n \r\n const PatientForm = () => {\r\n \tconst router = useRouter();\r\n+\tconst [isPending, setIsPending] = useTransition();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n \r\n \tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n \t\tresolver: zodResolver(userFormValidation),\r\n@@ -33,18 +34,18 @@\n \t\tsetIsLoading(true);\r\n \t\ttry {\r\n \t\t\tconst userData = { name, email,password };\r\n \t\t\tconst res = await createUser(userData);\r\n-\t\t\tconsole.log(res)\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res);\r\n+\t\t\tif (res.error) {\r\n \t\t\t\tform.setError('root.serverError', {\r\n \t\t\t\t\tmessage:\r\n \t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n \t\t\t\t\ttype: '400',\r\n \t\t\t\t});\r\n+\t\t\t\t\r\n+\t\t\t} else {\r\n+\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t\t\r\n \t\t\t}\r\n \t\t} catch (e: any) {\r\n \t\t\tconsole.log(e);\r\n \t\t} finally {\r\n@@ -94,9 +95,9 @@\n \t\t\t\t\tname=\"repeatpassword\"\r\n \t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n \t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n \t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n \t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n \t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n \t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n \t\t\t\t\t</p>\r\n"
                },
                {
                    "date": 1723940575599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState, useTransition } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth-action';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isPending, setIsPending] = useTransition();\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email,password };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t\t\r\n+\t\t\t} else {\r\n+\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t\tconsole.log('ingresaste!')\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723940836010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState, useTransition } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth-action';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isPending, setIsPending] = useTransition();\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email,password };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t\t\r\n+\t\t\t} else {\r\n+\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t\tconsole.log('ingresaste!')\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723940852904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState, useTransition } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth-action';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isPending, setIsPending] = useTransition();\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email,password };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t\t\r\n+\t\t\t} else {\r\n+\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t\tconsole.log('ingresaste!')\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723940872821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,399 +27,81 @@\n \tasync function onSubmit({\r\n \t\tname,\r\n \t\temail,\r\n \t\tpassword,\r\n-\t\trepeatpassword\r\n+\t\trepeatpassword,\r\n \t}: z.infer<typeof userFormValidation>) {\r\n \t\ttry {\r\n-\t\t\tconst userData = { name, email,password };\r\n+\t\t\tconst userData = { name, email, password };\r\n \t\t\tconst res = await createUser(userData);\r\n \t\t\tif (res.error) {\r\n \t\t\t\tform.setError('root.serverError', {\r\n \t\t\t\t\tmessage:\r\n \t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n \t\t\t\t\ttype: '400',\r\n \t\t\t\t});\r\n-\t\t\t\t\r\n \t\t\t} else {\r\n \t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t\tconsole.log('ingresaste!')\r\n+\t\t\t\tconsole.log('ingresaste!');\r\n \t\t\t}\r\n \t\t} catch (e: any) {\r\n \t\t\tconsole.log(e);\r\n \t\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState, useTransition } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth-action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isPending, setIsPending] = useTransition();\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email,password };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t\t\r\n-\t\t\t} else {\r\n-\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t\tconsole.log('ingresaste!')\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState, useTransition } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth-action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isPending, setIsPending] = useTransition();\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email,password };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t\t\r\n-\t\t\t} else {\r\n-\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t\tconsole.log('ingresaste!')\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState, useTransition } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth-action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isPending, setIsPending] = useTransition();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email,password };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t\t\r\n-\t\t\t} else {\r\n-\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t\t\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n+\t\treturn (\r\n+\t\t\t<Form {...form}>\r\n+\t\t\t\t<form\r\n+\t\t\t\t\tonSubmit={form.handleSubmit(onSubmit)}\r\n+\t\t\t\t\tclassName=\"space-y-6 flex-1\"\r\n+\t\t\t\t>\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n+\t\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t\t</p>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t</form>\r\n+\t\t\t</Form>\r\n+\t\t);\r\n \t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n };\r\n-\r\n export default PatientForm;\r\n"
                },
                {
                    "date": 1723940887147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { z } from 'zod';\r\n import { Form } from '@/components/ui/form';\r\n import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n import SubmitButton from '../SubmitButton';\r\n-import { useState, useTransition } from 'react';\r\n+import { useTransition } from 'react';\r\n import { userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/auth-action';\r\n \r\n"
                },
                {
                    "date": 1723940950929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,63 +45,60 @@\n \t\t\t}\r\n \t\t} catch (e: any) {\r\n \t\t\tconsole.log(e);\r\n \t\t}\r\n-\t\treturn (\r\n-\t\t\t<Form {...form}>\r\n-\t\t\t\t<form\r\n-\t\t\t\t\tonSubmit={form.handleSubmit(onSubmit)}\r\n-\t\t\t\t\tclassName=\"space-y-6 flex-1\"\r\n-\t\t\t\t>\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t\t</p>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t</form>\r\n-\t\t\t</Form>\r\n-\t\t);\r\n \t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n };\r\n export default PatientForm;\r\n"
                },
                {
                    "date": 1723940958195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,17 +59,8 @@\n \t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n \t\t\t\t\ticonAlt=\"user\"\r\n \t\t\t\t/>\r\n \t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n \t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n \t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\tname=\"email\"\r\n \t\t\t\t\tlabel=\"Correo\"\r\n"
                },
                {
                    "date": 1723941232246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useTransition } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth-action';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isPending, setIsPending] = useTransition();\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t\tconsole.log('ingresaste!');\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723941250762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,8 @@\n \tasync function onSubmit({\r\n \t\tname,\r\n \t\temail,\r\n \t\tpassword,\r\n-\t\trepeatpassword,\r\n \t}: z.infer<typeof userFormValidation>) {\r\n \t\ttry {\r\n \t\t\tconst userData = { name, email, password };\r\n \t\t\tconst res = await createUser(userData);\r\n@@ -92,99 +91,4 @@\n \t\t</Form>\r\n \t);\r\n };\r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useTransition } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth-action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isPending, setIsPending] = useTransition();\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t} else {\r\n-\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t\tconsole.log('ingresaste!');\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1723941260514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \r\n \tasync function onSubmit({\r\n \t\tname,\r\n \t\temail,\r\n-\t\tpassword,\r\n+\t\tpassword\r\n \t}: z.infer<typeof userFormValidation>) {\r\n \t\ttry {\r\n \t\t\tconst userData = { name, email, password };\r\n \t\t\tconst res = await createUser(userData);\r\n"
                },
                {
                    "date": 1723941270151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useTransition } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth-action';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isPending, setIsPending] = useTransition();\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t\tconsole.log('ingresaste!');\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723941407526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useTransition } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth-action';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isPending, setIsPending] = useTransition();\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tconsole.log(res)\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\t// router.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t\tconsole.log('ingresaste!');\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723941499815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,115 +26,21 @@\n \r\n \tasync function onSubmit({\r\n \t\tname,\r\n \t\temail,\r\n-\t\tpassword\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n \t}: z.infer<typeof userFormValidation>) {\r\n \t\ttry {\r\n-\t\t\tconst userData = { name, email, password };\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n \t\t\tconst res = await createUser(userData);\r\n-\t\t\tconsole.log(res)\r\n \t\t\tif (res.error) {\r\n \t\t\t\tform.setError('root.serverError', {\r\n \t\t\t\t\tmessage:\r\n \t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n \t\t\t\t\ttype: '400',\r\n \t\t\t\t});\r\n \t\t\t} else {\r\n-\t\t\t\t// router.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t\tconsole.log('ingresaste!');\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useTransition } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth-action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isPending, setIsPending] = useTransition();\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t} else {\r\n \t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n \t\t\t\tconsole.log('ingresaste!');\r\n \t\t\t}\r\n \t\t} catch (e: any) {\r\n@@ -153,104 +59,19 @@\n \t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n \t\t\t\t\ticonAlt=\"user\"\r\n \t\t\t\t/>\r\n \t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n \t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n \t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n \t\t\t\t\ticonAlt=\"email\"\r\n \t\t\t\t/>\r\n \t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useTransition } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth-action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isPending, setIsPending] = useTransition();\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t} else {\r\n-\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t\tconsole.log('ingresaste!');\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n \t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n \t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\tname=\"email\"\r\n \t\t\t\t\tlabel=\"Correo\"\r\n \t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n \t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n"
                },
                {
                    "date": 1723941525022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useTransition } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth-action';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isPending, setIsPending] = useTransition();\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t\tconsole.log('ingresaste!');\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723943565178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useTransition } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth-action';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isPending, setIsPending] = useTransition();\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res)\r\n+\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t\tconsole.log('ingresaste!');\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723943681690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useTransition } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth-action';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isPending, setIsPending] = useTransition();\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res)\r\n+\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t\tconsole.log('ingresaste!');\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723943746472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,11 +39,9 @@\n \t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n \t\t\t\t\ttype: '400',\r\n \t\t\t\t});\r\n \t\t\t} else {\r\n-\t\t\t\tconsole.log(res)\r\n \t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t\tconsole.log('ingresaste!');\r\n \t\t\t}\r\n \t\t} catch (e: any) {\r\n \t\t\tconsole.log(e);\r\n \t\t}\r\n@@ -93,299 +91,4 @@\n \t\t</Form>\r\n \t);\r\n };\r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useTransition } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth-action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isPending, setIsPending] = useTransition();\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res)\r\n-\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t\tconsole.log('ingresaste!');\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useTransition } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth-action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isPending, setIsPending] = useTransition();\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t} else {\r\n-\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t\tconsole.log('ingresaste!');\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useTransition } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth-action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isPending, setIsPending] = useTransition();\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t} else {\r\n-\t\t\t\t//router.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t\tconsole.log('ingresaste!');\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1723943797074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { z } from 'zod';\r\n import { Form } from '@/components/ui/form';\r\n import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n import SubmitButton from '../SubmitButton';\r\n-import { useTransition } from 'react';\r\n+import { startTransition, useTransition } from 'react';\r\n import { userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/auth-action';\r\n \r\n@@ -31,18 +31,20 @@\n \t\trepeatpassword,\r\n \t}: z.infer<typeof userFormValidation>) {\r\n \t\ttry {\r\n \t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t} else {\r\n-\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t}\r\n+\t\t\tstartTransition(async () => {\r\n+\t\t\t\tconst res = await createUser(userData);\r\n+\t\t\t\tif (res.error) {\r\n+\t\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\t\ttype: '400',\r\n+\t\t\t\t\t});\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t\t}\r\n+\t\t\t});\r\n \t\t} catch (e: any) {\r\n \t\t\tconsole.log(e);\r\n \t\t}\r\n \t}\r\n"
                },
                {
                    "date": 1723943832316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { startTransition, useTransition } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth-action';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isPending, setIsPending] = useTransition();\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n+\t\t\tstartTransition(async () => {\r\n+\t\t\t\tconst res = await createUser(userData);\r\n+\t\t\t\tif (res.error) {\r\n+\t\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t\t'Ya existe un usuario con el correo electrónico registrado',\r\n+\t\t\t\t\t\ttype: '400',\r\n+\t\t\t\t\t});\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t\t}\r\n+\t\t\t});\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723943847427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n \t\t\t\tconst res = await createUser(userData);\r\n \t\t\t\tif (res.error) {\r\n \t\t\t\t\tform.setError('root.serverError', {\r\n \t\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t\t'Ya existe un usuario con el correo electrónico registrado',\r\n+\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n \t\t\t\t\t\ttype: '400',\r\n \t\t\t\t\t});\r\n \t\t\t\t} else {\r\n \t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n@@ -93,100 +93,4 @@\n \t\t</Form>\r\n \t);\r\n };\r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { startTransition, useTransition } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth-action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isPending, setIsPending] = useTransition();\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\t\t\tstartTransition(async () => {\r\n-\t\t\t\tconst res = await createUser(userData);\r\n-\t\t\t\tif (res.error) {\r\n-\t\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\t\ttype: '400',\r\n-\t\t\t\t\t});\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t\t}\r\n-\t\t\t});\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1723943856793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { startTransition, useTransition } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth-action';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isPending, setIsPending] = useTransition();\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n+\t\t\tstartTransition(async () => {\r\n+\t\t\t\tconst res = await createUser(userData);\r\n+\t\t\t\tif (res.error) {\r\n+\t\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\t\ttype: '400',\r\n+\t\t\t\t\t});\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t\t}\r\n+\t\t\t});\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723944868125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { startTransition, useTransition } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth-action';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isPending, setIsPending] = useTransition();\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n+\t\t\tstartTransition(async () => {\r\n+\t\t\t\tconst res = await createUser(userData);\r\n+\t\t\t\tif (res.error) {\r\n+\t\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\t\ttype: '400',\r\n+\t\t\t\t\t});\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\t//router.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t\t}\r\n+\t\t\t});\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723944873405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,9 @@\n \t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n \t\t\t\t\t\ttype: '400',\r\n \t\t\t\t\t});\r\n \t\t\t\t} else {\r\n+\t\t\t\t\tconsole.log(res)\r\n \t\t\t\t\t//router.push(`/patients/${res.createdId}/register`);\r\n \t\t\t\t}\r\n \t\t\t});\r\n \t\t} catch (e: any) {\r\n@@ -93,196 +94,4 @@\n \t\t</Form>\r\n \t);\r\n };\r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { startTransition, useTransition } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth-action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isPending, setIsPending] = useTransition();\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\t\t\tstartTransition(async () => {\r\n-\t\t\t\tconst res = await createUser(userData);\r\n-\t\t\t\tif (res.error) {\r\n-\t\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\t\ttype: '400',\r\n-\t\t\t\t\t});\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t\t}\r\n-\t\t\t});\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { startTransition, useTransition } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth-action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isPending, setIsPending] = useTransition();\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\t\t\tstartTransition(async () => {\r\n-\t\t\t\tconst res = await createUser(userData);\r\n-\t\t\t\tif (res.error) {\r\n-\t\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\t\ttype: '400',\r\n-\t\t\t\t\t});\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t\t}\r\n-\t\t\t});\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1723945096440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,16 +4,16 @@\n import { z } from 'zod';\r\n import { Form } from '@/components/ui/form';\r\n import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n import SubmitButton from '../SubmitButton';\r\n-import { startTransition, useTransition } from 'react';\r\n+import { useState } from 'react';\r\n import { userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/auth-action';\r\n \r\n const PatientForm = () => {\r\n \tconst router = useRouter();\r\n-\tconst [isPending, setIsPending] = useTransition();\r\n+\tconst [isLoading, setIsLoading] = useState();\r\n \r\n \tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n \t\tresolver: zodResolver(userFormValidation),\r\n \t\tdefaultValues: {\r\n@@ -31,9 +31,9 @@\n \t\trepeatpassword,\r\n \t}: z.infer<typeof userFormValidation>) {\r\n \t\ttry {\r\n \t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\t\t\tstartTransition(async () => {\r\n+\r\n \t\t\t\tconst res = await createUser(userData);\r\n \t\t\t\tif (res.error) {\r\n \t\t\t\t\tform.setError('root.serverError', {\r\n \t\t\t\t\t\tmessage:\r\n@@ -43,9 +43,8 @@\n \t\t\t\t} else {\r\n \t\t\t\t\tconsole.log(res)\r\n \t\t\t\t\t//router.push(`/patients/${res.createdId}/register`);\r\n \t\t\t\t}\r\n-\t\t\t});\r\n \t\t} catch (e: any) {\r\n \t\t\tconsole.log(e);\r\n \t\t}\r\n \t}\r\n"
                },
                {
                    "date": 1723945190407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth-action';\r\n+import { set } from 'date-fns';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n+\r\n+\t\t\t\tconst res = await createUser(userData);\r\n+\t\t\t\tif (res.error) {\r\n+\t\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\t\ttype: '400',\r\n+\t\t\t\t\t});\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\tconsole.log(res)\r\n+\t\t\t\t\t//router.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}finally{\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1723945195821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,100 +97,4 @@\n \t\t</Form>\r\n \t);\r\n };\r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth-action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState();\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\r\n-\t\t\t\tconst res = await createUser(userData);\r\n-\t\t\t\tif (res.error) {\r\n-\t\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\t\ttype: '400',\r\n-\t\t\t\t\t});\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tconsole.log(res)\r\n-\t\t\t\t\t//router.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isPending}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1723945210138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n \t\t\t\t\t\ttype: '400',\r\n \t\t\t\t\t});\r\n \t\t\t\t} else {\r\n \t\t\t\t\tconsole.log(res)\r\n-\t\t\t\t\t//router.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n \t\t\t\t}\r\n \t\t} catch (e: any) {\r\n \t\t\tconsole.log(e);\r\n \t\t}finally{\r\n"
                },
                {
                    "date": 1723968179179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import SubmitButton from '../SubmitButton';\r\n import { useState } from 'react';\r\n import { userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth-action';\r\n+import { createUser } from '@/lib/actions/auth.action';\r\n import { set } from 'date-fns';\r\n \r\n const PatientForm = () => {\r\n \tconst router = useRouter();\r\n"
                },
                {
                    "date": 1724088545926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n \t\t\t\t\t\ttype: '400',\r\n \t\t\t\t\t});\r\n \t\t\t\t} else {\r\n \t\t\t\t\tconsole.log(res)\r\n-\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t\t\trouter.push(`/patients/${res.createdId}/new-appointment`);\r\n \t\t\t\t}\r\n \t\t} catch (e: any) {\r\n \t\t\tconsole.log(e);\r\n \t\t}finally{\r\n"
                },
                {
                    "date": 1724088594150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth.action';\r\n+import { set } from 'date-fns';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n+\r\n+\t\t\t\tconst res = await createUser(userData);\r\n+\t\t\t\tif (res.error) {\r\n+\t\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\t\ttype: '400',\r\n+\t\t\t\t\t});\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\tconsole.log(res)\r\n+\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}finally{\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1724104621395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,8 @@\n \t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n \t\t\t\t\t\ttype: '400',\r\n \t\t\t\t\t});\r\n \t\t\t\t} else {\r\n-\t\t\t\t\tconsole.log(res)\r\n \t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n \t\t\t\t}\r\n \t\t} catch (e: any) {\r\n \t\t\tconsole.log(e);\r\n@@ -97,104 +96,4 @@\n \t\t</Form>\r\n \t);\r\n };\r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth.action';\r\n-import { set } from 'date-fns';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\r\n-\t\t\t\tconst res = await createUser(userData);\r\n-\t\t\t\tif (res.error) {\r\n-\t\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\t\ttype: '400',\r\n-\t\t\t\t\t});\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tconsole.log(res)\r\n-\t\t\t\t\trouter.push(`/patients/${res.createdId}/new-appointment`);\r\n-\t\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}finally{\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1724513707716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth.action';\r\n+import { set } from 'date-fns';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n+\r\n+\t\t\t\tconst res = await createUser(userData);\r\n+\t\t\t\tif (res.error) {\r\n+\t\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\t\ttype: '400',\r\n+\t\t\t\t\t});\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}finally{\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre Ccompleto\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1724513737044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n \t\t\t\t<CustomFormField\r\n \t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n \t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre Ccompleto\"\r\n+\t\t\t\t\tlabel=\"Nombre Completo\"\r\n \t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n \t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n \t\t\t\t\ticonAlt=\"user\"\r\n \t\t\t\t/>\r\n@@ -96,103 +96,4 @@\n \t\t</Form>\r\n \t);\r\n };\r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth.action';\r\n-import { set } from 'date-fns';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\r\n-\t\t\t\tconst res = await createUser(userData);\r\n-\t\t\t\tif (res.error) {\r\n-\t\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\t\ttype: '400',\r\n-\t\t\t\t\t});\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}finally{\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1724513866676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth.action';\r\n+import { set } from 'date-fns';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n+\r\n+\t\t\t\tconst res = await createUser(userData);\r\n+\t\t\t\tif (res.error) {\r\n+\t\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\t\ttype: '400',\r\n+\t\t\t\t\t});\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}finally{\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre Completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>REGISTRARME</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1724513900139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,107 +85,8 @@\n \t\t\t\t\tname=\"repeatpassword\"\r\n \t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n \t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n \t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>REGISTRARME</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth.action';\r\n-import { set } from 'date-fns';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\r\n-\t\t\t\tconst res = await createUser(userData);\r\n-\t\t\t\tif (res.error) {\r\n-\t\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\t\ttype: '400',\r\n-\t\t\t\t\t});\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}finally{\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre Completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n \t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n \t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n \t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n \t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n"
                },
                {
                    "date": 1724787669951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,8 @@\n import { useState } from 'react';\r\n import { userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/auth.action';\r\n-import { set } from 'date-fns';\r\n \r\n const PatientForm = () => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n"
                },
                {
                    "date": 1724789708702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth.action';\r\n+\r\n+const PatientForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n+\r\n+\t\t\t\tconst res = await createUser(userData);\r\n+\t\t\t\tif (res.error) {\r\n+\t\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\t\ttype: '400',\r\n+\t\t\t\t\t});\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t}finally{\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre Completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1724805181240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,21 +33,21 @@\n \t\tsetIsLoading(true);\r\n \t\ttry {\r\n \t\t\tconst userData = { name, email, password, repeatpassword };\r\n \r\n-\t\t\t\tconst res = await createUser(userData);\r\n-\t\t\t\tif (res.error) {\r\n-\t\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\t\ttype: '400',\r\n-\t\t\t\t\t});\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t\t}\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t}\r\n \t\t} catch (e: any) {\r\n \t\t\tconsole.log(e);\r\n-\t\t}finally{\r\n+\t\t} finally {\r\n \t\t\tsetIsLoading(false);\r\n \t\t}\r\n \t}\r\n \treturn (\r\n@@ -71,102 +71,12 @@\n \t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n \t\t\t\t\ticonAlt=\"email\"\r\n \t\t\t\t/>\r\n \t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n \t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth.action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\r\n-\t\t\t\tconst res = await createUser(userData);\r\n-\t\t\t\tif (res.error) {\r\n-\t\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\t\ttype: '400',\r\n-\t\t\t\t\t});\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t}finally{\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre Completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n \t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n \t\t\t\t\ticonAlt=\"email\"\r\n \t\t\t\t/>\r\n \t\t\t\t<CustomFormField\r\n"
                },
                {
                    "date": 1724805524868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth.action';\r\n+\r\n+const PatientForm = ({ campaign = false }) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n+\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre Completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t{campaign ? (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t) : (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1724805531091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,110 +107,4 @@\n \t\t</Form>\r\n \t);\r\n };\r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth.action';\r\n-\r\n-const PatientForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t} else {\r\n-\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre Completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1724805567570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,12 +9,12 @@\n import { userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/auth.action';\r\n \r\n-const PatientForm = ({ campaign = false }) => {\r\n+const PatientForm = (params) => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n+\tconsole.log(params)\r\n \tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n \t\tresolver: zodResolver(userFormValidation),\r\n \t\tdefaultValues: {\r\n \t\t\tname: '',\r\n"
                },
                {
                    "date": 1724805579982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n \t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n \t\t\t\t\ticonAlt=\"user\"\r\n \t\t\t\t/>\r\n-\t\t\t\t{campaign ? (\r\n+\t\t\t\t{/* {campaign ? (\r\n \t\t\t\t\t<CustomFormField\r\n \t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n \t\t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\t\tname=\"phone\"\r\n@@ -80,9 +80,9 @@\n \t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n \t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n \t\t\t\t\t\ticonAlt=\"email\"\r\n \t\t\t\t\t/>\r\n-\t\t\t\t)}\r\n+\t\t\t\t)} */}\r\n \r\n \t\t\t\t<CustomFormField\r\n \t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n \t\t\t\t\tcontrol={form.control}\r\n"
                },
                {
                    "date": 1724805645467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,12 +9,12 @@\n import { userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/auth.action';\r\n \r\n-const PatientForm = (params) => {\r\n+const PatientForm = ({ campaign = false }) => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n-\tconsole.log(params)\r\n+\r\n \tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n \t\tresolver: zodResolver(userFormValidation),\r\n \t\tdefaultValues: {\r\n \t\t\tname: '',\r\n@@ -61,29 +61,26 @@\n \t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n \t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n \t\t\t\t\ticonAlt=\"user\"\r\n \t\t\t\t/>\r\n-\t\t\t\t{/* {campaign ? (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t) : (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t)} */}\r\n+\t\t\t\t{campaign ? (\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>): (\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>)}\r\n \r\n+\t\r\n \t\t\t\t<CustomFormField\r\n \t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n \t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\tname=\"password\"\r\n"
                },
                {
                    "date": 1724880681078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,18 @@\n import { Form } from '@/components/ui/form';\r\n import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n import SubmitButton from '../SubmitButton';\r\n import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n+import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/auth.action';\r\n \r\n const PatientForm = ({ campaign = false }) => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n+\tconst userSchema = getRegisterUser('campaign');\r\n \r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\tconst form = useForm<z.infer<typeof userSchema>>({\r\n \t\tresolver: zodResolver(userFormValidation),\r\n \t\tdefaultValues: {\r\n \t\t\tname: '',\r\n \t\t\temail: '',\r\n@@ -61,26 +62,29 @@\n \t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n \t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n \t\t\t\t\ticonAlt=\"user\"\r\n \t\t\t\t/>\r\n-\t\t\t\t{campaign ? (\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>): (\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>)}\r\n+\t\t\t\t{campaign ? (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t) : (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t)}\r\n \r\n-\t\r\n \t\t\t\t<CustomFormField\r\n \t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n \t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\tname=\"password\"\r\n"
                },
                {
                    "date": 1724880872274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,112 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth.action';\r\n+\r\n+const PatientForm = ({ campaign = false }) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\tconst userSchema = getRegisterUser('campaign');\r\n+\r\n+\tconst form = useForm<z.infer<typeof userSchema>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t\tphone: ''\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n+\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre Completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t{campaign ? (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t) : (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1724880888086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,115 +109,4 @@\n \t\t</Form>\r\n \t);\r\n };\r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth.action';\r\n-\r\n-const PatientForm = ({ campaign = false }) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\tconst userSchema = getRegisterUser('campaign');\r\n-\r\n-\tconst form = useForm<z.infer<typeof userSchema>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t} else {\r\n-\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre Completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t{campaign ? (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t) : (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1724880929789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,112 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth.action';\r\n+\r\n+const PatientForm = ({ campaign = false }) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\tconst userSchema = getRegisterUser('campaign');\r\n+\r\n+\tconst form = useForm<z.infer<typeof userSchema>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t\tphone: ''\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword };\r\n+\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre Completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t{campaign ? (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t) : (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1724882606451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,10 @@\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n \tconst userSchema = getRegisterUser('campaign');\r\n \r\n-\tconst form = useForm<z.infer<typeof userSchema>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n+\tconst form = useForm<CreateUserParams>({\r\n+\t\tresolver: zodResolver(userSchema),\r\n \t\tdefaultValues: {\r\n \t\t\tname: '',\r\n \t\t\temail: '',\r\n \t\t\tpassword: '',\r\n@@ -109,116 +109,4 @@\n \t\t</Form>\r\n \t);\r\n };\r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth.action';\r\n-\r\n-const PatientForm = ({ campaign = false }) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\tconst userSchema = getRegisterUser('campaign');\r\n-\r\n-\tconst form = useForm<z.infer<typeof userSchema>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t\tphone: ''\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t} else {\r\n-\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre Completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t{campaign ? (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t) : (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1724882849707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/auth.action';\r\n \r\n-const PatientForm = ({ campaign = false }) => {\r\n+const PatientForm = ({ campaign = true }) => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n \tconst userSchema = getRegisterUser('campaign');\r\n \r\n"
                },
                {
                    "date": 1724882856037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/auth.action';\r\n \r\n-const PatientForm = ({ campaign = true }) => {\r\n+const PatientForm = ({ campaign = false }) => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n \tconst userSchema = getRegisterUser('campaign');\r\n \r\n"
                },
                {
                    "date": 1724882954334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth.action';\r\n+\r\n+const PatientForm = ({ campaign = false }) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\tconst userSchema = getRegisterUser('campaign');\r\n+\r\n+\tconst form = useForm<CreateUserParams>({\r\n+\t\tresolver: zodResolver(userSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t\tphone: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t\tphone\r\n+\t}: CreateUserParams) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword, phone };\r\n+\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre Completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t{campaign ? (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t) : (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1724883001350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth.action';\r\n+\r\n+const PatientForm = ({ campaign = false }) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\tconst userSchema = campaign ? getRegisterUser('campaign'): getRegisterUser('normal');\r\n+\r\n+\tconst form = useForm<CreateUserParams>({\r\n+\t\tresolver: zodResolver(userSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t\tphone: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tpassword,\r\n+\t\trepeatpassword,\r\n+\t\tphone\r\n+\t}: CreateUserParams) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, password, repeatpassword, phone };\r\n+\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre Completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t{campaign ? (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t) : (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1724887170150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,11 @@\n \r\n const PatientForm = ({ campaign = false }) => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n-\tconst userSchema = campaign ? getRegisterUser('campaign'): getRegisterUser('normal');\r\n+\tconst userSchema = campaign\r\n+\t\t? getRegisterUser('campaign')\r\n+\t\t: getRegisterUser('normal');\r\n \r\n \tconst form = useForm<CreateUserParams>({\r\n \t\tresolver: zodResolver(userSchema),\r\n \t\tdefaultValues: {\r\n@@ -30,24 +32,24 @@\n \t\tname,\r\n \t\temail,\r\n \t\tpassword,\r\n \t\trepeatpassword,\r\n-\t\tphone\r\n+\t\tphone,\r\n \t}: CreateUserParams) {\r\n \t\tsetIsLoading(true);\r\n \t\ttry {\r\n \t\t\tconst userData = { name, email, password, repeatpassword, phone };\r\n-\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t} else {\r\n-\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t}\r\n+\t\t\tconsole.log(userData)\r\n+\t\t\t//const res = await createUser(userData);\r\n+\t\t\t// if (res.error) {\r\n+\t\t\t// \tform.setError('root.serverError', {\r\n+\t\t\t// \t\tmessage:\r\n+\t\t\t// \t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t// \t\ttype: '400',\r\n+\t\t\t// \t});\r\n+\t\t\t// } else {\r\n+\t\t\t// \trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t// }\r\n \t\t} catch (e: any) {\r\n \t\t\tconsole.log(e);\r\n \t\t} finally {\r\n \t\t\tsetIsLoading(false);\r\n@@ -110,229 +112,4 @@\n \t\t</Form>\r\n \t);\r\n };\r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth.action';\r\n-\r\n-const PatientForm = ({ campaign = false }) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\tconst userSchema = getRegisterUser('campaign');\r\n-\r\n-\tconst form = useForm<CreateUserParams>({\r\n-\t\tresolver: zodResolver(userSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t\tphone: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t\tphone\r\n-\t}: CreateUserParams) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword, phone };\r\n-\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t} else {\r\n-\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre Completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t{campaign ? (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t) : (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth.action';\r\n-\r\n-const PatientForm = ({ campaign = false }) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\tconst userSchema = getRegisterUser('campaign');\r\n-\r\n-\tconst form = useForm<CreateUserParams>({\r\n-\t\tresolver: zodResolver(userSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t\tphone: ''\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword };\r\n-\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t} else {\r\n-\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre Completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t{campaign ? (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t) : (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1724887935786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth.action';\r\n+\r\n+const PatientForm = ({ campaign = false }) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\tconst userSchema = campaign\r\n+\t\t? getRegisterUser('campaign')\r\n+\t\t: getRegisterUser('normal');\r\n+\r\n+\tconst form = useForm<CreateUserParams>({\r\n+\t\tresolver: zodResolver(userSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t\tphone: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: CreateUserParams) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = values;\r\n+\t\t\tif (!values.email) {\r\n+\t\t\t\tuserData.email = `${crypto.randomUUID()}@yopmail.com`;\r\n+\t\t\t}\r\n+\t\t\t\r\n+\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre Completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t{campaign ? (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t) : (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1724888599016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,16 +4,17 @@\n import { z } from 'zod';\r\n import { Form } from '@/components/ui/form';\r\n import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n+import { useId, useState } from 'react';\r\n import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/auth.action';\r\n \r\n const PatientForm = ({ campaign = false }) => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n+\tconst emailId = useId();\r\n \tconst userSchema = campaign\r\n \t\t? getRegisterUser('campaign')\r\n \t\t: getRegisterUser('normal');\r\n \r\n@@ -32,11 +33,12 @@\n \t\tsetIsLoading(true);\r\n \t\ttry {\r\n \t\t\tconst userData = values;\r\n \t\t\tif (!values.email) {\r\n-\t\t\t\tuserData.email = `${crypto.randomUUID()}@yopmail.com`;\r\n+\t\t\t\tuserData.email = `${Math.random()\r\n+\t\t\t\t\t.toString(36)\r\n+\t\t\t\t\t.slice(2, 7)}@yopmail.com`;\r\n \t\t\t}\r\n-\t\t\t\r\n \r\n \t\t\tconst res = await createUser(userData);\r\n \t\t\tif (res.error) {\r\n \t\t\t\tform.setError('root.serverError', {\r\n@@ -110,119 +112,4 @@\n \t\t</Form>\r\n \t);\r\n };\r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth.action';\r\n-\r\n-const PatientForm = ({ campaign = false }) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\tconst userSchema = campaign\r\n-\t\t? getRegisterUser('campaign')\r\n-\t\t: getRegisterUser('normal');\r\n-\r\n-\tconst form = useForm<CreateUserParams>({\r\n-\t\tresolver: zodResolver(userSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t\tphone: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tpassword,\r\n-\t\trepeatpassword,\r\n-\t\tphone,\r\n-\t}: CreateUserParams) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, password, repeatpassword, phone };\r\n-\t\t\tconsole.log(userData)\r\n-\t\t\t//const res = await createUser(userData);\r\n-\t\t\t// if (res.error) {\r\n-\t\t\t// \tform.setError('root.serverError', {\r\n-\t\t\t// \t\tmessage:\r\n-\t\t\t// \t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t// \t\ttype: '400',\r\n-\t\t\t// \t});\r\n-\t\t\t// } else {\r\n-\t\t\t// \trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t// }\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre Completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t{campaign ? (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t) : (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1724888611087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,115 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useId, useState } from 'react';\r\n+import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth.action';\r\n+\r\n+const PatientForm = ({ campaign = false }) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\tconst emailId = useId();\r\n+\tconst userSchema = campaign\r\n+\t\t? getRegisterUser('campaign')\r\n+\t\t: getRegisterUser('normal');\r\n+\r\n+\tconst form = useForm<CreateUserParams>({\r\n+\t\tresolver: zodResolver(userSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t\tphone: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: CreateUserParams) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = values;\r\n+\t\t\tif (!values.email) {\r\n+\t\t\t\tuserData.email = `${Math.random()\r\n+\t\t\t\t\t.toString(36)\r\n+\t\t\t\t\t.slice(2, 7)}@yopmail.com`;\r\n+\t\t\t}\r\n+\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre Completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t{campaign ? (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t) : (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                },
                {
                    "date": 1724892029607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,17 +4,16 @@\n import { z } from 'zod';\r\n import { Form } from '@/components/ui/form';\r\n import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n import SubmitButton from '../SubmitButton';\r\n-import { useId, useState } from 'react';\r\n-import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n+import { useState } from 'react';\r\n+import { getRegisterUser } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/auth.action';\r\n \r\n const PatientForm = ({ campaign = false }) => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n-\tconst emailId = useId();\r\n \tconst userSchema = campaign\r\n \t\t? getRegisterUser('campaign')\r\n \t\t: getRegisterUser('normal');\r\n \r\n@@ -112,119 +111,4 @@\n \t\t</Form>\r\n \t);\r\n };\r\n export default PatientForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useId, useState } from 'react';\r\n-import { getRegisterUser, userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/auth.action';\r\n-\r\n-const PatientForm = ({ campaign = false }) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\tconst emailId = useId();\r\n-\tconst userSchema = campaign\r\n-\t\t? getRegisterUser('campaign')\r\n-\t\t: getRegisterUser('normal');\r\n-\r\n-\tconst form = useForm<CreateUserParams>({\r\n-\t\tresolver: zodResolver(userSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tpassword: '',\r\n-\t\t\trepeatpassword: '',\r\n-\t\t\tphone: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: CreateUserParams) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = values;\r\n-\t\t\tif (!values.email) {\r\n-\t\t\t\tuserData.email = `${Math.random()\r\n-\t\t\t\t\t.toString(36)\r\n-\t\t\t\t\t.slice(2, 7)}@yopmail.com`;\r\n-\t\t\t}\r\n-\r\n-\t\t\tconst res = await createUser(userData);\r\n-\t\t\tif (res.error) {\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t} else {\r\n-\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre Completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t{campaign ? (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t) : (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n-\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"password\"\r\n-\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"repeatpassword\"\r\n-\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n-\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-export default PatientForm;\r\n"
                },
                {
                    "date": 1724892148741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n \tconst userSchema = campaign\r\n \t\t? getRegisterUser('campaign')\r\n-\t\t: getRegisterUser('normal');\r\n+\t\t: getRegisterUser();\r\n \r\n \tconst form = useForm<CreateUserParams>({\r\n \t\tresolver: zodResolver(userSchema),\r\n \t\tdefaultValues: {\r\n"
                },
                {
                    "date": 1724892244793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,114 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getRegisterUser } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/auth.action';\r\n+\r\n+const PatientForm = ({ campaign = false }) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\tconst userSchema = campaign\r\n+\t\t? getRegisterUser('campaign')\r\n+\t\t: getRegisterUser();\r\n+\r\n+\tconst form = useForm<CreateUserParams>({\r\n+\t\tresolver: zodResolver(userSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tpassword: '',\r\n+\t\t\trepeatpassword: '',\r\n+\t\t\tphone: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: CreateUserParams) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = values;\r\n+\t\t\tif (!values.email) {\r\n+\t\t\t\tuserData.email = `${Math.random()\r\n+\t\t\t\t\t.toString(36)\r\n+\t\t\t\t\t.slice(2, 7)}@yopmail.com`;\r\n+\t\t\t}\r\n+\r\n+\t\t\tconst res = await createUser(userData);\r\n+\t\t\tif (res.error) {\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Correo ya registrado, por favor inicia sesión o intenta con otro correo',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t} else {\r\n+\t\t\t\trouter.push(`/patients/${res.createdId}/register`);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre Completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t{campaign ? (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t) : (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\t\tplaceholder=\"Ingresa tu correo electrónico\"\r\n+\t\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"password\"\r\n+\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Ingrese una nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PASSWORD}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"repeatpassword\"\r\n+\t\t\t\t\tlabel=\"Repetir Contraseña\"\r\n+\t\t\t\t\tplaceholder=\"Repita la nueva contraseña\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Registrarme</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+export default PatientForm;\r\n"
                }
            ],
            "date": 1723492840837,
            "name": "Commit-0",
            "content": "'use client';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { useForm } from 'react-hook-form';\r\nimport { z } from 'zod';\r\nimport { Form } from '@/components/ui/form';\r\nimport CustomFormField, { FormFieldType } from '../CustomFormField';\r\nimport SubmitButton from '../SubmitButton';\r\nimport { useState } from 'react';\r\nimport { userFormValidation } from '@/lib/validation';\r\nimport { useRouter } from 'next/navigation';\r\nimport { createUser } from '@/lib/actions/patient.actions';\r\n\r\nconst PatientForm = () => {\r\n\tconst router = useRouter();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n\t\tresolver: zodResolver(userFormValidation),\r\n\t\tdefaultValues: {\r\n\t\t\tname: '',\r\n\t\t\temail: '',\r\n\t\t\tphone: '',\r\n\t\t},\r\n\t});\r\n\r\n\tasync function onSubmit({\r\n\t\tname,\r\n\t\temail,\r\n\t\tphone,\r\n\t}: z.infer<typeof userFormValidation>) {\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst userData = { name, email, phone };\r\n\t\t\tconst res = await createUser(userData);\r\n\r\n\t\t\tif (!res?.error) {\r\n\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t\tform.setError('root.serverError', {\r\n\t\t\t\t\tmessage:\r\n\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n\t\t\t\t\ttype: '400',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (e: any) {\r\n\t\t\tconsole.log(e);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<Form {...form}>\r\n\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n\t\t\t\t\r\n\t\t\t\t<CustomFormField\r\n\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n\t\t\t\t\tcontrol={form.control}\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\tlabel=\"Nombre completo\"\r\n\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n\t\t\t\t\ticonAlt=\"user\"\r\n\t\t\t\t/>\r\n\t\t\t\t<CustomFormField\r\n\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n\t\t\t\t\tcontrol={form.control}\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tlabel=\"Correo\"\r\n\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n\t\t\t\t\ticonAlt=\"email\"\r\n\t\t\t\t/>\r\n\t\t\t\t<CustomFormField\r\n\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n\t\t\t\t\tcontrol={form.control}\r\n\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\tlabel=\"Celular\"\r\n\t\t\t\t\tplaceholder=\"955061182\"\r\n\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n\t\t\t\t\ticonAlt=\"email\"\r\n\t\t\t\t/>\r\n\t\t\t\t<SubmitButton isLoading={isLoading}>Empezar</SubmitButton>\r\n\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\t\t\t</form>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default PatientForm;\r\n"
        }
    ]
}