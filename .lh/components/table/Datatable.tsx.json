{
    "sourceFile": "components/table/Datatable.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1724285673230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1724288269822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,116 @@\n+'use client';\r\n+\r\n+import {\r\n+\tgetPaginationRowModel,\r\n+\tColumnDef,\r\n+\tflexRender,\r\n+\tgetCoreRowModel,\r\n+\tuseReactTable,\r\n+} from '@tanstack/react-table';\r\n+import Image from 'next/image';\r\n+\r\n+import { Button } from '@/components/ui/button';\r\n+import {\r\n+\tTable,\r\n+\tTableBody,\r\n+\tTableCell,\r\n+\tTableHead,\r\n+\tTableHeader,\r\n+\tTableRow,\r\n+} from '@/components/ui/table';\r\n+\r\n+interface DataTableProps<TData, TValue> {\r\n+\tcolumns: ColumnDef<TData, TValue>[];\r\n+\tdata: TData[];\r\n+}\r\n+\r\n+export function DataTable<TData, TValue>({\r\n+\tcolumns,\r\n+\tdata,\r\n+}: DataTableProps<TData, TValue>) {\r\n+\tconst table = useReactTable({\r\n+\t\tdata,\r\n+\t\tcolumns,\r\n+\t\tgetCoreRowModel: getCoreRowModel(),\r\n+\t\tgetPaginationRowModel: getPaginationRowModel(),\r\n+\t});\r\n+\r\n+\treturn (\r\n+\t\t<div className=\"data-table\">\r\n+\t\t\t<Table className=\"shad-table\">\r\n+\t\t\t\t<TableHeader className=\" bg-dark-200\">\r\n+\t\t\t\t\t{table.getHeaderGroups().map((headerGroup) => (\r\n+\t\t\t\t\t\t<TableRow key={headerGroup.id} className=\"shad-table-row-header\">\r\n+\t\t\t\t\t\t\t{headerGroup.headers.map((header) => {\r\n+\t\t\t\t\t\t\t\treturn (\r\n+\t\t\t\t\t\t\t\t\t<TableHead key={header.id}>\r\n+\t\t\t\t\t\t\t\t\t\t{header.isPlaceholder\r\n+\t\t\t\t\t\t\t\t\t\t\t? null\r\n+\t\t\t\t\t\t\t\t\t\t\t: flexRender(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\theader.column.columnDef.header,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\theader.getContext()\r\n+\t\t\t\t\t\t\t\t\t\t\t  )}\r\n+\t\t\t\t\t\t\t\t\t</TableHead>\r\n+\t\t\t\t\t\t\t\t);\r\n+\t\t\t\t\t\t\t})}\r\n+\t\t\t\t\t\t</TableRow>\r\n+\t\t\t\t\t))}\r\n+\t\t\t\t</TableHeader>\r\n+\t\t\t\t<TableBody>\r\n+\t\t\t\t\t{table.getRowModel().rows?.length ? (\r\n+\t\t\t\t\t\ttable.getRowModel().rows.map((row) => (\r\n+\t\t\t\t\t\t\t<TableRow\r\n+\t\t\t\t\t\t\t\tkey={row.id}\r\n+\t\t\t\t\t\t\t\tdata-state={row.getIsSelected() && 'selected'}\r\n+\t\t\t\t\t\t\t\tclassName=\"shad-table-row\"\r\n+\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t{row.getVisibleCells().map((cell) => (\r\n+\t\t\t\t\t\t\t\t\t<TableCell key={cell.id}>\r\n+\t\t\t\t\t\t\t\t\t\t{flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n+\t\t\t\t\t\t\t\t\t</TableCell>\r\n+\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t</TableRow>\r\n+\t\t\t\t\t\t))\r\n+\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t<TableRow>\r\n+\t\t\t\t\t\t\t<TableCell colSpan={columns.length} className=\"h-24 text-center\">\r\n+\t\t\t\t\t\t\t\tNo results.\r\n+\t\t\t\t\t\t\t</TableCell>\r\n+\t\t\t\t\t\t</TableRow>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t</TableBody>\r\n+\t\t\t</Table>\r\n+\t\t\t<div className=\"table-actions\">\r\n+\t\t\t\t<Button\r\n+\t\t\t\t\tvariant=\"outline\"\r\n+\t\t\t\t\tsize=\"sm\"\r\n+\t\t\t\t\tonClick={() => table.previousPage()}\r\n+\t\t\t\t\tdisabled={!table.getCanPreviousPage()}\r\n+\t\t\t\t\tclassName=\"shad-gray-btn\"\r\n+\t\t\t\t>\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/arrow.svg\"\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\talt=\"arrow\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</Button>\r\n+\t\t\t\t<Button\r\n+\t\t\t\t\tvariant=\"outline\"\r\n+\t\t\t\t\tsize=\"sm\"\r\n+\t\t\t\t\tonClick={() => table.nextPage()}\r\n+\t\t\t\t\tdisabled={!table.getCanNextPage()}\r\n+\t\t\t\t\tclassName=\"shad-gray-btn\"\r\n+\t\t\t\t>\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/arrow.svg\"\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\talt=\"arrow \"\r\n+\t\t\t\t\t\tclassName=\"rotate-180\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</Button>\r\n+\t\t\t</div>\r\n+\t\t</div>\r\n+\t);\r\n+}\r\n"
                },
                {
                    "date": 1724288302022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n \t\t\t\t\t\t))\r\n \t\t\t\t\t) : (\r\n \t\t\t\t\t\t<TableRow>\r\n \t\t\t\t\t\t\t<TableCell colSpan={columns.length} className=\"h-24 text-center\">\r\n-\t\t\t\t\t\t\t\tNo results.\r\n+\t\t\t\t\t\t\t\tSin resultados.\r\n \t\t\t\t\t\t\t</TableCell>\r\n \t\t\t\t\t\t</TableRow>\r\n \t\t\t\t\t)}\r\n \t\t\t\t</TableBody>\r\n@@ -113,122 +113,4 @@\n \t\t\t</div>\r\n \t\t</div>\r\n \t);\r\n }\r\n-'use client';\r\n-\r\n-import {\r\n-\tgetPaginationRowModel,\r\n-\tColumnDef,\r\n-\tflexRender,\r\n-\tgetCoreRowModel,\r\n-\tuseReactTable,\r\n-} from '@tanstack/react-table';\r\n-import Image from 'next/image';\r\n-import { redirect } from 'next/navigation';\r\n-import { useEffect } from 'react';\r\n-\r\n-import { Button } from '@/components/ui/button';\r\n-import {\r\n-\tTable,\r\n-\tTableBody,\r\n-\tTableCell,\r\n-\tTableHead,\r\n-\tTableHeader,\r\n-\tTableRow,\r\n-} from '@/components/ui/table';\r\n-\r\n-interface DataTableProps<TData, TValue> {\r\n-\tcolumns: ColumnDef<TData, TValue>[];\r\n-\tdata: TData[];\r\n-}\r\n-\r\n-export function DataTable<TData, TValue>({\r\n-\tcolumns,\r\n-\tdata,\r\n-}: DataTableProps<TData, TValue>) {\r\n-\tconst table = useReactTable({\r\n-\t\tdata,\r\n-\t\tcolumns,\r\n-\t\tgetCoreRowModel: getCoreRowModel(),\r\n-\t\tgetPaginationRowModel: getPaginationRowModel(),\r\n-\t});\r\n-\r\n-\treturn (\r\n-\t\t<div className=\"data-table\">\r\n-\t\t\t<Table className=\"shad-table\">\r\n-\t\t\t\t<TableHeader className=\" bg-dark-200\">\r\n-\t\t\t\t\t{table.getHeaderGroups().map((headerGroup) => (\r\n-\t\t\t\t\t\t<TableRow key={headerGroup.id} className=\"shad-table-row-header\">\r\n-\t\t\t\t\t\t\t{headerGroup.headers.map((header) => {\r\n-\t\t\t\t\t\t\t\treturn (\r\n-\t\t\t\t\t\t\t\t\t<TableHead key={header.id}>\r\n-\t\t\t\t\t\t\t\t\t\t{header.isPlaceholder\r\n-\t\t\t\t\t\t\t\t\t\t\t? null\r\n-\t\t\t\t\t\t\t\t\t\t\t: flexRender(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\theader.column.columnDef.header,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\theader.getContext()\r\n-\t\t\t\t\t\t\t\t\t\t\t  )}\r\n-\t\t\t\t\t\t\t\t\t</TableHead>\r\n-\t\t\t\t\t\t\t\t);\r\n-\t\t\t\t\t\t\t})}\r\n-\t\t\t\t\t\t</TableRow>\r\n-\t\t\t\t\t))}\r\n-\t\t\t\t</TableHeader>\r\n-\t\t\t\t<TableBody>\r\n-\t\t\t\t\t{table.getRowModel().rows?.length ? (\r\n-\t\t\t\t\t\ttable.getRowModel().rows.map((row) => (\r\n-\t\t\t\t\t\t\t<TableRow\r\n-\t\t\t\t\t\t\t\tkey={row.id}\r\n-\t\t\t\t\t\t\t\tdata-state={row.getIsSelected() && 'selected'}\r\n-\t\t\t\t\t\t\t\tclassName=\"shad-table-row\"\r\n-\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t{row.getVisibleCells().map((cell) => (\r\n-\t\t\t\t\t\t\t\t\t<TableCell key={cell.id}>\r\n-\t\t\t\t\t\t\t\t\t\t{flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n-\t\t\t\t\t\t\t\t\t</TableCell>\r\n-\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t</TableRow>\r\n-\t\t\t\t\t\t))\r\n-\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t<TableRow>\r\n-\t\t\t\t\t\t\t<TableCell colSpan={columns.length} className=\"h-24 text-center\">\r\n-\t\t\t\t\t\t\t\tNo results.\r\n-\t\t\t\t\t\t\t</TableCell>\r\n-\t\t\t\t\t\t</TableRow>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t</TableBody>\r\n-\t\t\t</Table>\r\n-\t\t\t<div className=\"table-actions\">\r\n-\t\t\t\t<Button\r\n-\t\t\t\t\tvariant=\"outline\"\r\n-\t\t\t\t\tsize=\"sm\"\r\n-\t\t\t\t\tonClick={() => table.previousPage()}\r\n-\t\t\t\t\tdisabled={!table.getCanPreviousPage()}\r\n-\t\t\t\t\tclassName=\"shad-gray-btn\"\r\n-\t\t\t\t>\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/arrow.svg\"\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\talt=\"arrow\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</Button>\r\n-\t\t\t\t<Button\r\n-\t\t\t\t\tvariant=\"outline\"\r\n-\t\t\t\t\tsize=\"sm\"\r\n-\t\t\t\t\tonClick={() => table.nextPage()}\r\n-\t\t\t\t\tdisabled={!table.getCanNextPage()}\r\n-\t\t\t\t\tclassName=\"shad-gray-btn\"\r\n-\t\t\t\t>\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/arrow.svg\"\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\talt=\"arrow \"\r\n-\t\t\t\t\t\tclassName=\"rotate-180\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</Button>\r\n-\t\t\t</div>\r\n-\t\t</div>\r\n-\t);\r\n-}\r\n"
                },
                {
                    "date": 1724288310536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n \t\t\t\t\t\t))\r\n \t\t\t\t\t) : (\r\n \t\t\t\t\t\t<TableRow>\r\n \t\t\t\t\t\t\t<TableCell colSpan={columns.length} className=\"h-24 text-center\">\r\n-\t\t\t\t\t\t\t\tSin resultados.\r\n+\t\t\t\t\t\t\t\tNo hay resultados.\r\n \t\t\t\t\t\t\t</TableCell>\r\n \t\t\t\t\t\t</TableRow>\r\n \t\t\t\t\t)}\r\n \t\t\t\t</TableBody>\r\n"
                },
                {
                    "date": 1724365375335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,116 @@\n+'use client';\r\n+\r\n+import {\r\n+\tgetPaginationRowModel,\r\n+\tColumnDef,\r\n+\tflexRender,\r\n+\tgetCoreRowModel,\r\n+\tuseReactTable,\r\n+} from '@tanstack/react-table';\r\n+import Image from 'next/image';\r\n+\r\n+import { Button } from '@/components/ui/button';\r\n+import {\r\n+\tTable,\r\n+\tTableBody,\r\n+\tTableCell,\r\n+\tTableHead,\r\n+\tTableHeader,\r\n+\tTableRow,\r\n+} from '@/components/ui/table';\r\n+\r\n+interface DataTableProps<TData, TValue> {\r\n+\tcolumns: ColumnDef<TData, TValue>[];\r\n+\tdata: TData[];\r\n+}\r\n+\r\n+export function DataTable<TData, TValue>({\r\n+\tcolumns,\r\n+\tdata,\r\n+}: DataTableProps<TData, TValue>) {\r\n+\tconst table = useReactTable({\r\n+\t\tdata,\r\n+\t\tcolumns,\r\n+\t\tgetCoreRowModel: getCoreRowModel(),\r\n+\t\tgetPaginationRowModel: getPaginationRowModel(),\r\n+\t});\r\n+\tconsole.log(table.setPageSize(2));\r\n+\treturn (\r\n+\t\t<div className=\"data-table\">\r\n+\t\t\t<Table className=\"shad-table\">\r\n+\t\t\t\t<TableHeader className=\" bg-dark-200\">\r\n+\t\t\t\t\t{table.getHeaderGroups().map((headerGroup) => (\r\n+\t\t\t\t\t\t<TableRow key={headerGroup.id} className=\"shad-table-row-header\">\r\n+\t\t\t\t\t\t\t{headerGroup.headers.map((header) => {\r\n+\t\t\t\t\t\t\t\treturn (\r\n+\t\t\t\t\t\t\t\t\t<TableHead key={header.id}>\r\n+\t\t\t\t\t\t\t\t\t\t{header.isPlaceholder\r\n+\t\t\t\t\t\t\t\t\t\t\t? null\r\n+\t\t\t\t\t\t\t\t\t\t\t: flexRender(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\theader.column.columnDef.header,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\theader.getContext()\r\n+\t\t\t\t\t\t\t\t\t\t\t  )}\r\n+\t\t\t\t\t\t\t\t\t</TableHead>\r\n+\t\t\t\t\t\t\t\t);\r\n+\t\t\t\t\t\t\t})}\r\n+\t\t\t\t\t\t</TableRow>\r\n+\t\t\t\t\t))}\r\n+\t\t\t\t</TableHeader>\r\n+\t\t\t\t<TableBody>\r\n+\t\t\t\t\t{table.getRowModel().rows?.length ? (\r\n+\t\t\t\t\t\ttable.getRowModel().rows.map((row) => (\r\n+\t\t\t\t\t\t\t<TableRow\r\n+\t\t\t\t\t\t\t\tkey={row.id}\r\n+\t\t\t\t\t\t\t\tdata-state={row.getIsSelected() && 'selected'}\r\n+\t\t\t\t\t\t\t\tclassName=\"shad-table-row\"\r\n+\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t{row.getVisibleCells().map((cell) => (\r\n+\t\t\t\t\t\t\t\t\t<TableCell key={cell.id}>\r\n+\t\t\t\t\t\t\t\t\t\t{flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n+\t\t\t\t\t\t\t\t\t</TableCell>\r\n+\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t</TableRow>\r\n+\t\t\t\t\t\t))\r\n+\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t<TableRow>\r\n+\t\t\t\t\t\t\t<TableCell colSpan={columns.length} className=\"h-24 text-center\">\r\n+\t\t\t\t\t\t\t\tNo hay resultados.\r\n+\t\t\t\t\t\t\t</TableCell>\r\n+\t\t\t\t\t\t</TableRow>\r\n+\t\t\t\t\t)}\r\n+\t\t\t\t</TableBody>\r\n+\t\t\t</Table>\r\n+\t\t\t<div className=\"table-actions\">\r\n+\t\t\t\t<Button\r\n+\t\t\t\t\tvariant=\"outline\"\r\n+\t\t\t\t\tsize=\"sm\"\r\n+\t\t\t\t\tonClick={() => table.previousPage()}\r\n+\t\t\t\t\tdisabled={!table.getCanPreviousPage()}\r\n+\t\t\t\t\tclassName=\"shad-gray-btn\"\r\n+\t\t\t\t>\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/arrow.svg\"\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\talt=\"arrow\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</Button>\r\n+\t\t\t\t<Button\r\n+\t\t\t\t\tvariant=\"outline\"\r\n+\t\t\t\t\tsize=\"sm\"\r\n+\t\t\t\t\tonClick={() => table.nextPage()}\r\n+\t\t\t\t\tdisabled={!table.getCanNextPage()}\r\n+\t\t\t\t\tclassName=\"shad-gray-btn\"\r\n+\t\t\t\t>\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/arrow.svg\"\r\n+\t\t\t\t\t\twidth={24}\r\n+\t\t\t\t\t\theight={24}\r\n+\t\t\t\t\t\talt=\"arrow \"\r\n+\t\t\t\t\t\tclassName=\"rotate-180\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</Button>\r\n+\t\t\t</div>\r\n+\t\t</div>\r\n+\t);\r\n+}\r\n"
                },
                {
                    "date": 1724365635809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n \t\tcolumns,\r\n \t\tgetCoreRowModel: getCoreRowModel(),\r\n \t\tgetPaginationRowModel: getPaginationRowModel(),\r\n \t});\r\n-\tconsole.log(table.setPageSize(2));\r\n+\t\r\n \treturn (\r\n \t\t<div className=\"data-table\">\r\n \t\t\t<Table className=\"shad-table\">\r\n \t\t\t\t<TableHeader className=\" bg-dark-200\">\r\n@@ -113,120 +113,4 @@\n \t\t\t</div>\r\n \t\t</div>\r\n \t);\r\n }\r\n-'use client';\r\n-\r\n-import {\r\n-\tgetPaginationRowModel,\r\n-\tColumnDef,\r\n-\tflexRender,\r\n-\tgetCoreRowModel,\r\n-\tuseReactTable,\r\n-} from '@tanstack/react-table';\r\n-import Image from 'next/image';\r\n-\r\n-import { Button } from '@/components/ui/button';\r\n-import {\r\n-\tTable,\r\n-\tTableBody,\r\n-\tTableCell,\r\n-\tTableHead,\r\n-\tTableHeader,\r\n-\tTableRow,\r\n-} from '@/components/ui/table';\r\n-\r\n-interface DataTableProps<TData, TValue> {\r\n-\tcolumns: ColumnDef<TData, TValue>[];\r\n-\tdata: TData[];\r\n-}\r\n-\r\n-export function DataTable<TData, TValue>({\r\n-\tcolumns,\r\n-\tdata,\r\n-}: DataTableProps<TData, TValue>) {\r\n-\tconst table = useReactTable({\r\n-\t\tdata,\r\n-\t\tcolumns,\r\n-\t\tgetCoreRowModel: getCoreRowModel(),\r\n-\t\tgetPaginationRowModel: getPaginationRowModel(),\r\n-\t});\r\n-\r\n-\treturn (\r\n-\t\t<div className=\"data-table\">\r\n-\t\t\t<Table className=\"shad-table\">\r\n-\t\t\t\t<TableHeader className=\" bg-dark-200\">\r\n-\t\t\t\t\t{table.getHeaderGroups().map((headerGroup) => (\r\n-\t\t\t\t\t\t<TableRow key={headerGroup.id} className=\"shad-table-row-header\">\r\n-\t\t\t\t\t\t\t{headerGroup.headers.map((header) => {\r\n-\t\t\t\t\t\t\t\treturn (\r\n-\t\t\t\t\t\t\t\t\t<TableHead key={header.id}>\r\n-\t\t\t\t\t\t\t\t\t\t{header.isPlaceholder\r\n-\t\t\t\t\t\t\t\t\t\t\t? null\r\n-\t\t\t\t\t\t\t\t\t\t\t: flexRender(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\theader.column.columnDef.header,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\theader.getContext()\r\n-\t\t\t\t\t\t\t\t\t\t\t  )}\r\n-\t\t\t\t\t\t\t\t\t</TableHead>\r\n-\t\t\t\t\t\t\t\t);\r\n-\t\t\t\t\t\t\t})}\r\n-\t\t\t\t\t\t</TableRow>\r\n-\t\t\t\t\t))}\r\n-\t\t\t\t</TableHeader>\r\n-\t\t\t\t<TableBody>\r\n-\t\t\t\t\t{table.getRowModel().rows?.length ? (\r\n-\t\t\t\t\t\ttable.getRowModel().rows.map((row) => (\r\n-\t\t\t\t\t\t\t<TableRow\r\n-\t\t\t\t\t\t\t\tkey={row.id}\r\n-\t\t\t\t\t\t\t\tdata-state={row.getIsSelected() && 'selected'}\r\n-\t\t\t\t\t\t\t\tclassName=\"shad-table-row\"\r\n-\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t{row.getVisibleCells().map((cell) => (\r\n-\t\t\t\t\t\t\t\t\t<TableCell key={cell.id}>\r\n-\t\t\t\t\t\t\t\t\t\t{flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n-\t\t\t\t\t\t\t\t\t</TableCell>\r\n-\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t</TableRow>\r\n-\t\t\t\t\t\t))\r\n-\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t<TableRow>\r\n-\t\t\t\t\t\t\t<TableCell colSpan={columns.length} className=\"h-24 text-center\">\r\n-\t\t\t\t\t\t\t\tNo hay resultados.\r\n-\t\t\t\t\t\t\t</TableCell>\r\n-\t\t\t\t\t\t</TableRow>\r\n-\t\t\t\t\t)}\r\n-\t\t\t\t</TableBody>\r\n-\t\t\t</Table>\r\n-\t\t\t<div className=\"table-actions\">\r\n-\t\t\t\t<Button\r\n-\t\t\t\t\tvariant=\"outline\"\r\n-\t\t\t\t\tsize=\"sm\"\r\n-\t\t\t\t\tonClick={() => table.previousPage()}\r\n-\t\t\t\t\tdisabled={!table.getCanPreviousPage()}\r\n-\t\t\t\t\tclassName=\"shad-gray-btn\"\r\n-\t\t\t\t>\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/arrow.svg\"\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\talt=\"arrow\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</Button>\r\n-\t\t\t\t<Button\r\n-\t\t\t\t\tvariant=\"outline\"\r\n-\t\t\t\t\tsize=\"sm\"\r\n-\t\t\t\t\tonClick={() => table.nextPage()}\r\n-\t\t\t\t\tdisabled={!table.getCanNextPage()}\r\n-\t\t\t\t\tclassName=\"shad-gray-btn\"\r\n-\t\t\t\t>\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/arrow.svg\"\r\n-\t\t\t\t\t\twidth={24}\r\n-\t\t\t\t\t\theight={24}\r\n-\t\t\t\t\t\talt=\"arrow \"\r\n-\t\t\t\t\t\tclassName=\"rotate-180\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</Button>\r\n-\t\t\t</div>\r\n-\t\t</div>\r\n-\t);\r\n-}\r\n"
                },
                {
                    "date": 1724365688875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,10 +32,16 @@\n \t\tdata,\r\n \t\tcolumns,\r\n \t\tgetCoreRowModel: getCoreRowModel(),\r\n \t\tgetPaginationRowModel: getPaginationRowModel(),\r\n+\t\tinitialState: {\r\n+\t\t\tpagination: {\r\n+\t\t\t\tpageIndex: 0, //custom initial page index\r\n+\t\t\t\tpageSize: 2, //custom default page size\r\n+\t\t\t},\r\n+\t\t},\r\n \t});\r\n-\t\r\n+\r\n \treturn (\r\n \t\t<div className=\"data-table\">\r\n \t\t\t<Table className=\"shad-table\">\r\n \t\t\t\t<TableHeader className=\" bg-dark-200\">\r\n"
                },
                {
                    "date": 1724365701870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n \t\tgetPaginationRowModel: getPaginationRowModel(),\r\n \t\tinitialState: {\r\n \t\t\tpagination: {\r\n \t\t\t\tpageIndex: 0, //custom initial page index\r\n-\t\t\t\tpageSize: 2, //custom default page size\r\n+\t\t\t\tpageSize: 10, //custom default page size\r\n \t\t\t},\r\n \t\t},\r\n \t});\r\n \r\n"
                },
                {
                    "date": 1724488049609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,14 +34,13 @@\n \t\tgetCoreRowModel: getCoreRowModel(),\r\n \t\tgetPaginationRowModel: getPaginationRowModel(),\r\n \t\tinitialState: {\r\n \t\t\tpagination: {\r\n-\t\t\t\tpageIndex: 0, //custom initial page index\r\n-\t\t\t\tpageSize: 10, //custom default page size\r\n+\t\t\t\tpageIndex: 0,\r\n+\t\t\t\tpageSize: 10,\r\n \t\t\t},\r\n \t\t},\r\n \t});\r\n-\r\n \treturn (\r\n \t\t<div className=\"data-table\">\r\n \t\t\t<Table className=\"shad-table\">\r\n \t\t\t\t<TableHeader className=\" bg-dark-200\">\r\n"
                }
            ],
            "date": 1724285673230,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport {\r\n\tgetPaginationRowModel,\r\n\tColumnDef,\r\n\tflexRender,\r\n\tgetCoreRowModel,\r\n\tuseReactTable,\r\n} from '@tanstack/react-table';\r\nimport Image from 'next/image';\r\nimport { redirect } from 'next/navigation';\r\nimport { useEffect } from 'react';\r\n\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableHead,\r\n\tTableHeader,\r\n\tTableRow,\r\n} from '@/components/ui/table';\r\n\r\ninterface DataTableProps<TData, TValue> {\r\n\tcolumns: ColumnDef<TData, TValue>[];\r\n\tdata: TData[];\r\n}\r\n\r\nexport function DataTable<TData, TValue>({\r\n\tcolumns,\r\n\tdata,\r\n}: DataTableProps<TData, TValue>) {\r\n\tconst table = useReactTable({\r\n\t\tdata,\r\n\t\tcolumns,\r\n\t\tgetCoreRowModel: getCoreRowModel(),\r\n\t\tgetPaginationRowModel: getPaginationRowModel(),\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"data-table\">\r\n\t\t\t<Table className=\"shad-table\">\r\n\t\t\t\t<TableHeader className=\" bg-dark-200\">\r\n\t\t\t\t\t{table.getHeaderGroups().map((headerGroup) => (\r\n\t\t\t\t\t\t<TableRow key={headerGroup.id} className=\"shad-table-row-header\">\r\n\t\t\t\t\t\t\t{headerGroup.headers.map((header) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<TableHead key={header.id}>\r\n\t\t\t\t\t\t\t\t\t\t{header.isPlaceholder\r\n\t\t\t\t\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t\t\t\t\t: flexRender(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theader.column.columnDef.header,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theader.getContext()\r\n\t\t\t\t\t\t\t\t\t\t\t  )}\r\n\t\t\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TableHeader>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{table.getRowModel().rows?.length ? (\r\n\t\t\t\t\t\ttable.getRowModel().rows.map((row) => (\r\n\t\t\t\t\t\t\t<TableRow\r\n\t\t\t\t\t\t\t\tkey={row.id}\r\n\t\t\t\t\t\t\t\tdata-state={row.getIsSelected() && 'selected'}\r\n\t\t\t\t\t\t\t\tclassName=\"shad-table-row\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{row.getVisibleCells().map((cell) => (\r\n\t\t\t\t\t\t\t\t\t<TableCell key={cell.id}>\r\n\t\t\t\t\t\t\t\t\t\t{flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell colSpan={columns.length} className=\"h-24 text-center\">\r\n\t\t\t\t\t\t\t\tNo results.\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t\t<div className=\"table-actions\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"outline\"\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tonClick={() => table.previousPage()}\r\n\t\t\t\t\tdisabled={!table.getCanPreviousPage()}\r\n\t\t\t\t\tclassName=\"shad-gray-btn\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tsrc=\"/assets/icons/arrow.svg\"\r\n\t\t\t\t\t\twidth={24}\r\n\t\t\t\t\t\theight={24}\r\n\t\t\t\t\t\talt=\"arrow\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"outline\"\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tonClick={() => table.nextPage()}\r\n\t\t\t\t\tdisabled={!table.getCanNextPage()}\r\n\t\t\t\t\tclassName=\"shad-gray-btn\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tsrc=\"/assets/icons/arrow.svg\"\r\n\t\t\t\t\t\twidth={24}\r\n\t\t\t\t\t\theight={24}\r\n\t\t\t\t\t\talt=\"arrow \"\r\n\t\t\t\t\t\tclassName=\"rotate-180\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n"
        }
    ]
}