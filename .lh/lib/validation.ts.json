{
    "sourceFile": "lib/validation.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1721338793155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1721338874569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+import { z } from 'zod';\r\n+\r\n+export const userFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n+\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n+\temail: z.string().email('Debe ser un correo válido.'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido.'\r\n+\t\t),\r\n+});\r\n+\r\n+export const PatientFormValidation = z.object({\r\n+\tname: z\r\n+\t  .string()\r\n+\t  .min(2, \"Nombre debe tener al menos 2 caracteres\")\r\n+\t  .max(50, \"Nombre debe tener menos de 50 caracteres\"),\r\n+\temail: z.string().email(\"Ingrese un correo válido\"),\r\n+\tphone: z\r\n+\t  .string()\r\n+\t  .refine((phone) => /^\\+\\d{10,15}$/.test(phone), \"Número de teléfono inválido\"),\r\n+\tbirthDate: z.coerce.date(),\r\n+\tgender: z.enum([\"Male\", \"Female\", \"Other\"]),\r\n+\taddress: z\r\n+\t  .string()\r\n+\t  .min(5, \"Dirección debe tener al menos 5 caracteres\")\r\n+\t  .max(500, \"Dirección debe tener menos de 500 caracteres\"),\r\n+\toccupation: z\r\n+\t  .string()\r\n+\t  .min(2, \"Ocupación debe tener al menos 2 caracteres\")\r\n+\t  .max(500, \"Ocupación debe tener menos de 500 caracteres\"),\r\n+\temergencyContactName: z\r\n+\t  .string()\r\n+\t  .min(2, \"Contacto de emergencia debe tener al menos 2 caracteres\")\r\n+\t  .max(50, \"Contacto de emergencia debe tener menos de 50 caracteres\"),\r\n+\temergencyContactNumber: z\r\n+\t  .string()\r\n+\t  .refine(\r\n+\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n+\t\t\"Número de teléfono de contacto de emergencia inválido\"\r\n+\t  ),\r\n+\tprimaryPhysician: z.string().min(2, \"Seleccione un médico\"),\r\n+\tinsuranceProvider: z\r\n+\t  .string()\r\n+\t  .min(2, \"Nombre de la aseguradora debe tener al menos 2 caracteres\")\r\n+\t  .max(50, \"Nombre de la aseguradora debe tener menos de 50 caracteres\"),\r\n+\tinsurancePolicyNumber: z\r\n+\t  .string()\r\n+\t  .min(2, \"Numbero de póliza debe tener al menos 2 caracteres\")\r\n+\t  .max(50, \"Numbero de póliza debe tener menos de 50 caracteres\"),\r\n+\tallergies: z.string().optional(),\r\n+\tcurrentMedication: z.string().optional(),\r\n+\tfamilyMedicalHistory: z.string().optional(),\r\n+\tpastMedicalHistory: z.string().optional(),\r\n+\tidentificationType: z.string().optional(),\r\n+\tidentificationNumber: z.string().optional(),\r\n+\tidentificationDocument: z.custom<File[]>().optional(),\r\n+\ttreatmentConsent: z\r\n+\t  .boolean()\r\n+\t  .default(false)\r\n+\t  .refine((value) => value === true, {\r\n+\t\tmessage: \"Debe dar su consentimiento al tratamiento para continuar\",\r\n+\t  }),\r\n+\tdisclosureConsent: z\r\n+\t  .boolean()\r\n+\t  .default(false)\r\n+\t  .refine((value) => value === true, {\r\n+\t\tmessage: \"Debe dar su consentimiento a la divulgación para continuar\",\r\n+\t  }),\r\n+\tprivacyConsent: z\r\n+\t  .boolean()\r\n+\t  .default(false)\r\n+\t  .refine((value) => value === true, {\r\n+\t\tmessage: \"Debe dar su consentimiento a la privacidad para continuar\",\r\n+\t  }),\r\n+  });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721339060582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+import { z } from 'zod';\r\n+\r\n+export const userFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n+\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n+\temail: z.string().email('Debe ser un correo válido.'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido.'\r\n+\t\t),\r\n+});\r\n+\r\n+export const PatientFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n+\temail: z.string().email('Ingrese un correo válido'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido'\r\n+\t\t),\r\n+\tbirthDate: z.coerce.date(),\r\n+\tgender: z.enum(['Male', 'Female', 'Other']),\r\n+\taddress: z\r\n+\t\t.string()\r\n+\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n+\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n+\toccupation: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n+\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n+\temergencyContactName: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n+\temergencyContactNumber: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n+\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n+\t\t),\r\n+\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n+\tinsuranceProvider: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Nombre de la aseguradora debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Nombre de la aseguradora debe tener menos de 50 caracteres')\r\n+\t\t.optional(),\r\n+\tinsurancePolicyNumber: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres'),\r\n+\tallergies: z.string().optional(),\r\n+\tcurrentMedication: z.string().optional(),\r\n+\tfamilyMedicalHistory: z.string().optional(),\r\n+\tpastMedicalHistory: z.string().optional(),\r\n+\tidentificationType: z.string().optional(),\r\n+\tidentificationNumber: z.string().optional(),\r\n+\tidentificationDocument: z.custom<File[]>().optional(),\r\n+\ttreatmentConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n+\t\t}),\r\n+\tdisclosureConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n+\t\t}),\r\n+\tprivacyConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n+\t\t}),\r\n+});\r\n"
                },
                {
                    "date": 1721339068819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,10 @@\n \t\t.optional(),\r\n \tinsurancePolicyNumber: z\r\n \t\t.string()\r\n \t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres'),\r\n+\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n+\t\t.optional(),\r\n \tallergies: z.string().optional(),\r\n \tcurrentMedication: z.string().optional(),\r\n \tfamilyMedicalHistory: z.string().optional(),\r\n \tpastMedicalHistory: z.string().optional(),\r\n@@ -81,164 +82,4 @@\n \t\t.refine((value) => value === true, {\r\n \t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n \t\t}),\r\n });\r\n-import { z } from 'zod';\r\n-\r\n-export const userFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n-\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n-\temail: z.string().email('Debe ser un correo válido.'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido.'\r\n-\t\t),\r\n-});\r\n-\r\n-export const PatientFormValidation = z.object({\r\n-\tname: z\r\n-\t  .string()\r\n-\t  .min(2, \"Nombre debe tener al menos 2 caracteres\")\r\n-\t  .max(50, \"Nombre debe tener menos de 50 caracteres\"),\r\n-\temail: z.string().email(\"Ingrese un correo válido\"),\r\n-\tphone: z\r\n-\t  .string()\r\n-\t  .refine((phone) => /^\\+\\d{10,15}$/.test(phone), \"Número de teléfono inválido\"),\r\n-\tbirthDate: z.coerce.date(),\r\n-\tgender: z.enum([\"Male\", \"Female\", \"Other\"]),\r\n-\taddress: z\r\n-\t  .string()\r\n-\t  .min(5, \"Dirección debe tener al menos 5 caracteres\")\r\n-\t  .max(500, \"Dirección debe tener menos de 500 caracteres\"),\r\n-\toccupation: z\r\n-\t  .string()\r\n-\t  .min(2, \"Ocupación debe tener al menos 2 caracteres\")\r\n-\t  .max(500, \"Ocupación debe tener menos de 500 caracteres\"),\r\n-\temergencyContactName: z\r\n-\t  .string()\r\n-\t  .min(2, \"Contacto de emergencia debe tener al menos 2 caracteres\")\r\n-\t  .max(50, \"Contacto de emergencia debe tener menos de 50 caracteres\"),\r\n-\temergencyContactNumber: z\r\n-\t  .string()\r\n-\t  .refine(\r\n-\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n-\t\t\"Número de teléfono de contacto de emergencia inválido\"\r\n-\t  ),\r\n-\tprimaryPhysician: z.string().min(2, \"Seleccione un médico\"),\r\n-\tinsuranceProvider: z\r\n-\t  .string()\r\n-\t  .min(2, \"Nombre de la aseguradora debe tener al menos 2 caracteres\")\r\n-\t  .max(50, \"Nombre de la aseguradora debe tener menos de 50 caracteres\"),\r\n-\tinsurancePolicyNumber: z\r\n-\t  .string()\r\n-\t  .min(2, \"Numbero de póliza debe tener al menos 2 caracteres\")\r\n-\t  .max(50, \"Numbero de póliza debe tener menos de 50 caracteres\"),\r\n-\tallergies: z.string().optional(),\r\n-\tcurrentMedication: z.string().optional(),\r\n-\tfamilyMedicalHistory: z.string().optional(),\r\n-\tpastMedicalHistory: z.string().optional(),\r\n-\tidentificationType: z.string().optional(),\r\n-\tidentificationNumber: z.string().optional(),\r\n-\tidentificationDocument: z.custom<File[]>().optional(),\r\n-\ttreatmentConsent: z\r\n-\t  .boolean()\r\n-\t  .default(false)\r\n-\t  .refine((value) => value === true, {\r\n-\t\tmessage: \"Debe dar su consentimiento al tratamiento para continuar\",\r\n-\t  }),\r\n-\tdisclosureConsent: z\r\n-\t  .boolean()\r\n-\t  .default(false)\r\n-\t  .refine((value) => value === true, {\r\n-\t\tmessage: \"Debe dar su consentimiento a la divulgación para continuar\",\r\n-\t  }),\r\n-\tprivacyConsent: z\r\n-\t  .boolean()\r\n-\t  .default(false)\r\n-\t  .refine((value) => value === true, {\r\n-\t\tmessage: \"Debe dar su consentimiento a la privacidad para continuar\",\r\n-\t  }),\r\n-  });\n-import { z } from 'zod';\r\n-\r\n-export const userFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n-\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n-\temail: z.string().email('Debe ser un correo válido.'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido.'\r\n-\t\t),\r\n-});\r\n-\r\n-export const PatientFormValidation = z.object({\r\n-\tname: z\r\n-\t  .string()\r\n-\t  .min(2, \"Nombre debe tener al menos 2 caracteres\")\r\n-\t  .max(50, \"Nombre debe tener menos de 50 caracteres\"),\r\n-\temail: z.string().email(\"Ingrese un correo válido\"),\r\n-\tphone: z\r\n-\t  .string()\r\n-\t  .refine((phone) => /^\\+\\d{10,15}$/.test(phone), \"Número de teléfono inválido\"),\r\n-\tbirthDate: z.coerce.date(),\r\n-\tgender: z.enum([\"Male\", \"Female\", \"Other\"]),\r\n-\taddress: z\r\n-\t  .string()\r\n-\t  .min(5, \"Dirección debe tener al menos 5 caracteres\")\r\n-\t  .max(500, \"Dirección debe tener menos de 500 caracteres\"),\r\n-\toccupation: z\r\n-\t  .string()\r\n-\t  .min(2, \"Ocupación debe tener al menos 2 caracteres\")\r\n-\t  .max(500, \"Ocupación debe tener menos de 500 caracteres\"),\r\n-\temergencyContactName: z\r\n-\t  .string()\r\n-\t  .min(2, \"Contacto de emergencia debe tener al menos 2 caracteres\")\r\n-\t  .max(50, \"Contacto de emergencia debe tener menos de 50 caracteres\"),\r\n-\temergencyContactNumber: z\r\n-\t  .string()\r\n-\t  .refine(\r\n-\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n-\t\t\"Número de teléfono de contacto de emergencia inválido\"\r\n-\t  ),\r\n-\tprimaryPhysician: z.string().min(2, \"Seleccione un médico\"),\r\n-\tinsuranceProvider: z\r\n-\t  .string()\r\n-\t  .min(2, \"Nombre de la aseguradora debe tener al menos 2 caracteres\")\r\n-\t  .max(50, \"Nombre de la aseguradora debe tener menos de 50 caracteres\"),\r\n-\tinsurancePolicyNumber: z\r\n-\t  .string()\r\n-\t  .min(2, \"Numbero de póliza debe tener al menos 2 caracteres\")\r\n-\t  .max(50, \"Numbero de póliza debe tener menos de 50 caracteres\"),\r\n-\tallergies: z.string().optional(),\r\n-\tcurrentMedication: z.string().optional(),\r\n-\tfamilyMedicalHistory: z.string().optional(),\r\n-\tpastMedicalHistory: z.string().optional(),\r\n-\tidentificationType: z.string().optional(),\r\n-\tidentificationNumber: z.string().optional(),\r\n-\tidentificationDocument: z.custom<File[]>().optional(),\r\n-\ttreatmentConsent: z\r\n-\t  .boolean()\r\n-\t  .default(false)\r\n-\t  .refine((value) => value === true, {\r\n-\t\tmessage: \"You must consent to treatment in order to proceed\",\r\n-\t  }),\r\n-\tdisclosureConsent: z\r\n-\t  .boolean()\r\n-\t  .default(false)\r\n-\t  .refine((value) => value === true, {\r\n-\t\tmessage: \"You must consent to disclosure in order to proceed\",\r\n-\t  }),\r\n-\tprivacyConsent: z\r\n-\t  .boolean()\r\n-\t  .default(false)\r\n-\t  .refine((value) => value === true, {\r\n-\t\tmessage: \"You must consent to privacy in order to proceed\",\r\n-\t  }),\r\n-  });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721339120520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+import { z } from 'zod';\r\n+\r\n+export const userFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n+\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n+\temail: z.string().email('Debe ser un correo válido.'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido.'\r\n+\t\t),\r\n+});\r\n+\r\n+export const PatientFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n+\temail: z.string().email('Ingrese un correo válido'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido'\r\n+\t\t),\r\n+\tbirthDate: z.coerce.date(),\r\n+\tgender: z.enum(['Male', 'Female', 'Other']),\r\n+\taddress: z\r\n+\t\t.string()\r\n+\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n+\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n+\toccupation: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n+\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n+\temergencyContactName: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n+\temergencyContactNumber: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n+\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n+\t\t),\r\n+\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n+\tinsuranceProvider: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Nombre de la aseguradora debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Nombre de la aseguradora debe tener menos de 50 caracteres')\r\n+\t\t.optional(),\r\n+\tinsurancePolicyNumber: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres').optional()\r\n+\t\t,\r\n+\tallergies: z.string().optional(),\r\n+\tcurrentMedication: z.string().optional(),\r\n+\tfamilyMedicalHistory: z.string().optional(),\r\n+\tpastMedicalHistory: z.string().optional(),\r\n+\tidentificationType: z.string().optional(),\r\n+\tidentificationNumber: z.string().optional(),\r\n+\tidentificationDocument: z.custom<File[]>().optional(),\r\n+\ttreatmentConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n+\t\t}),\r\n+\tdisclosureConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n+\t\t}),\r\n+\tprivacyConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n+\t\t}),\r\n+});\r\n"
                },
                {
                    "date": 1721340585849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+import { z } from 'zod';\r\n+\r\n+export const userFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n+\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n+\temail: z.string().email('Debe ser un correo válido.'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido.'\r\n+\t\t),\r\n+});\r\n+\r\n+export const PatientFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n+\temail: z.string().email('Ingrese un correo válido'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido'\r\n+\t\t),\r\n+\tbirthDate: z.coerce.date(),\r\n+\tgender: z.enum(['Male', 'Female', 'Other']),\r\n+\taddress: z\r\n+\t\t.string()\r\n+\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n+\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n+\toccupation: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n+\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n+\temergencyContactName: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n+\temergencyContactNumber: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n+\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n+\t\t),\r\n+\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n+\tinsuranceProvider: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Nombre de la aseguradora debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Nombre de la aseguradora debe tener menos de 50 caracteres')\r\n+\t\t.optional(),\r\n+\tinsurancePolicyNumber: z\r\n+\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n+\t\t,\r\n+\tallergies: z.string().optional(),\r\n+\tcurrentMedication: z.string().optional(),\r\n+\tfamilyMedicalHistory: z.string().optional(),\r\n+\tpastMedicalHistory: z.string().optional(),\r\n+\tidentificationType: z.string().optional(),\r\n+\tidentificationNumber: z.string().optional(),\r\n+\tidentificationDocument: z.custom<File[]>().optional(),\r\n+\ttreatmentConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n+\t\t}),\r\n+\tdisclosureConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n+\t\t}),\r\n+\tprivacyConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n+\t\t}),\r\n+});\r\n"
                },
                {
                    "date": 1721341516855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import { z } from 'zod';\r\n+\r\n+export const userFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n+\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n+\temail: z.string().email('Debe ser un correo válido.'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido.'\r\n+\t\t),\r\n+});\r\n+\r\n+export const PatientFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n+\temail: z.string().email('Ingrese un correo válido'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido'\r\n+\t\t),\r\n+\tbirthDate: z.coerce.date(),\r\n+\tgender: z.enum(['Male', 'Female', 'Other']),\r\n+\taddress: z\r\n+\t\t.string()\r\n+\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n+\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n+\toccupation: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n+\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n+\temergencyContactName: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n+\temergencyContactNumber: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n+\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n+\t\t),\r\n+\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n+\tinsuranceProvider: z\r\n+\t\t.string()\r\n+\t\t.optional()\r\n+\t\t.refine((val) => val === undefined || (val.length >= 2 && val.length <= 50), {\r\n+\t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n+\t\t}),\r\n+\tinsurancePolicyNumber: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n+\t\t,\r\n+\tallergies: z.string().optional(),\r\n+\tcurrentMedication: z.string().optional(),\r\n+\tfamilyMedicalHistory: z.string().optional(),\r\n+\tpastMedicalHistory: z.string().optional(),\r\n+\tidentificationType: z.string().optional(),\r\n+\tidentificationNumber: z.string().optional(),\r\n+\tidentificationDocument: z.custom<File[]>().optional(),\r\n+\ttreatmentConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n+\t\t}),\r\n+\tdisclosureConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n+\t\t}),\r\n+\tprivacyConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n+\t\t}),\r\n+});\r\n"
                },
                {
                    "date": 1721341697863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n \tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n \tinsuranceProvider: z\r\n \t\t.string()\r\n \t\t.optional()\r\n-\t\t.refine((val) => val === undefined || (val.length >= 2 && val.length <= 50), {\r\n+\t\t.refine((val) => val !== '' || (val.length >= 2 && val.length <= 50), {\r\n \t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n \t\t}),\r\n \tinsurancePolicyNumber: z\r\n \t\t.string()\r\n@@ -83,258 +83,4 @@\n \t\t.refine((value) => value === true, {\r\n \t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n \t\t}),\r\n });\r\n-import { z } from 'zod';\r\n-\r\n-export const userFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n-\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n-\temail: z.string().email('Debe ser un correo válido.'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido.'\r\n-\t\t),\r\n-});\r\n-\r\n-export const PatientFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n-\temail: z.string().email('Ingrese un correo válido'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido'\r\n-\t\t),\r\n-\tbirthDate: z.coerce.date(),\r\n-\tgender: z.enum(['Male', 'Female', 'Other']),\r\n-\taddress: z\r\n-\t\t.string()\r\n-\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n-\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n-\toccupation: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n-\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n-\temergencyContactName: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n-\temergencyContactNumber: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n-\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n-\t\t),\r\n-\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n-\tinsuranceProvider: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Nombre de la aseguradora debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Nombre de la aseguradora debe tener menos de 50 caracteres')\r\n-\t\t.optional(),\r\n-\tinsurancePolicyNumber: z\r\n-\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n-\t\t,\r\n-\tallergies: z.string().optional(),\r\n-\tcurrentMedication: z.string().optional(),\r\n-\tfamilyMedicalHistory: z.string().optional(),\r\n-\tpastMedicalHistory: z.string().optional(),\r\n-\tidentificationType: z.string().optional(),\r\n-\tidentificationNumber: z.string().optional(),\r\n-\tidentificationDocument: z.custom<File[]>().optional(),\r\n-\ttreatmentConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n-\t\t}),\r\n-\tdisclosureConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n-\t\t}),\r\n-\tprivacyConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n-\t\t}),\r\n-});\r\n-import { z } from 'zod';\r\n-\r\n-export const userFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n-\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n-\temail: z.string().email('Debe ser un correo válido.'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido.'\r\n-\t\t),\r\n-});\r\n-\r\n-export const PatientFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n-\temail: z.string().email('Ingrese un correo válido'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido'\r\n-\t\t),\r\n-\tbirthDate: z.coerce.date(),\r\n-\tgender: z.enum(['Male', 'Female', 'Other']),\r\n-\taddress: z\r\n-\t\t.string()\r\n-\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n-\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n-\toccupation: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n-\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n-\temergencyContactName: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n-\temergencyContactNumber: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n-\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n-\t\t),\r\n-\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n-\tinsuranceProvider: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Nombre de la aseguradora debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Nombre de la aseguradora debe tener menos de 50 caracteres')\r\n-\t\t.optional(),\r\n-\tinsurancePolicyNumber: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres').optional()\r\n-\t\t,\r\n-\tallergies: z.string().optional(),\r\n-\tcurrentMedication: z.string().optional(),\r\n-\tfamilyMedicalHistory: z.string().optional(),\r\n-\tpastMedicalHistory: z.string().optional(),\r\n-\tidentificationType: z.string().optional(),\r\n-\tidentificationNumber: z.string().optional(),\r\n-\tidentificationDocument: z.custom<File[]>().optional(),\r\n-\ttreatmentConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n-\t\t}),\r\n-\tdisclosureConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n-\t\t}),\r\n-\tprivacyConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n-\t\t}),\r\n-});\r\n-import { z } from 'zod';\r\n-\r\n-export const userFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n-\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n-\temail: z.string().email('Debe ser un correo válido.'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido.'\r\n-\t\t),\r\n-});\r\n-\r\n-export const PatientFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n-\temail: z.string().email('Ingrese un correo válido'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido'\r\n-\t\t),\r\n-\tbirthDate: z.coerce.date(),\r\n-\tgender: z.enum(['Male', 'Female', 'Other']),\r\n-\taddress: z\r\n-\t\t.string()\r\n-\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n-\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n-\toccupation: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n-\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n-\temergencyContactName: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n-\temergencyContactNumber: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n-\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n-\t\t),\r\n-\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n-\tinsuranceProvider: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Nombre de la aseguradora debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Nombre de la aseguradora debe tener menos de 50 caracteres')\r\n-\t\t.optional(),\r\n-\tinsurancePolicyNumber: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n-\t\t.optional(),\r\n-\tallergies: z.string().optional(),\r\n-\tcurrentMedication: z.string().optional(),\r\n-\tfamilyMedicalHistory: z.string().optional(),\r\n-\tpastMedicalHistory: z.string().optional(),\r\n-\tidentificationType: z.string().optional(),\r\n-\tidentificationNumber: z.string().optional(),\r\n-\tidentificationDocument: z.custom<File[]>().optional(),\r\n-\ttreatmentConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n-\t\t}),\r\n-\tdisclosureConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n-\t\t}),\r\n-\tprivacyConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n-\t\t}),\r\n-});\r\n"
                },
                {
                    "date": 1721341733123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n \tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n \tinsuranceProvider: z\r\n \t\t.string()\r\n \t\t.optional()\r\n-\t\t.refine((val) => val !== '' || (val.length >= 2 && val.length <= 50), {\r\n+\t\t.refine((val) => val == undefined || (val.length >= 2 && val.length <= 50), {\r\n \t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n \t\t}),\r\n \tinsurancePolicyNumber: z\r\n \t\t.string()\r\n"
                },
                {
                    "date": 1721341775162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n \tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n \tinsuranceProvider: z\r\n \t\t.string()\r\n \t\t.optional()\r\n-\t\t.refine((val) => val == undefined || (val.length >= 2 && val.length <= 50), {\r\n+\t\t.refine((val) => val !== undefined && (val.length >= 2 && val.length <= 50), {\r\n \t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n \t\t}),\r\n \tinsurancePolicyNumber: z\r\n \t\t.string()\r\n"
                },
                {
                    "date": 1721341791475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import { z } from 'zod';\r\n+\r\n+export const userFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n+\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n+\temail: z.string().email('Debe ser un correo válido.'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido.'\r\n+\t\t),\r\n+});\r\n+\r\n+export const PatientFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n+\temail: z.string().email('Ingrese un correo válido'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido'\r\n+\t\t),\r\n+\tbirthDate: z.coerce.date(),\r\n+\tgender: z.enum(['Male', 'Female', 'Other']),\r\n+\taddress: z\r\n+\t\t.string()\r\n+\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n+\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n+\toccupation: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n+\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n+\temergencyContactName: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n+\temergencyContactNumber: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n+\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n+\t\t),\r\n+\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n+\tinsuranceProvider: z\r\n+\t\t.string()\r\n+\t\t.optional()\r\n+\t\t.refine((val) => val !== undefined && (val.length <= 2 && val.length >= 50), {\r\n+\t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n+\t\t}),\r\n+\tinsurancePolicyNumber: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n+\t\t,\r\n+\tallergies: z.string().optional(),\r\n+\tcurrentMedication: z.string().optional(),\r\n+\tfamilyMedicalHistory: z.string().optional(),\r\n+\tpastMedicalHistory: z.string().optional(),\r\n+\tidentificationType: z.string().optional(),\r\n+\tidentificationNumber: z.string().optional(),\r\n+\tidentificationDocument: z.custom<File[]>().optional(),\r\n+\ttreatmentConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n+\t\t}),\r\n+\tdisclosureConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n+\t\t}),\r\n+\tprivacyConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n+\t\t}),\r\n+});\r\n"
                },
                {
                    "date": 1721341822436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import { z } from 'zod';\r\n+\r\n+export const userFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n+\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n+\temail: z.string().email('Debe ser un correo válido.'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido.'\r\n+\t\t),\r\n+});\r\n+\r\n+export const PatientFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n+\temail: z.string().email('Ingrese un correo válido'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido'\r\n+\t\t),\r\n+\tbirthDate: z.coerce.date(),\r\n+\tgender: z.enum(['Male', 'Female', 'Other']),\r\n+\taddress: z\r\n+\t\t.string()\r\n+\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n+\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n+\toccupation: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n+\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n+\temergencyContactName: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n+\temergencyContactNumber: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n+\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n+\t\t),\r\n+\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n+\tinsuranceProvider: z\r\n+\t\t.string()\r\n+\t\t.optional()\r\n+\t\t.refine((val) => {\r\n+\t\t\tconsole.log(val)\r\n+\t\t}, {\r\n+\t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n+\t\t}),\r\n+\tinsurancePolicyNumber: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n+\t\t,\r\n+\tallergies: z.string().optional(),\r\n+\tcurrentMedication: z.string().optional(),\r\n+\tfamilyMedicalHistory: z.string().optional(),\r\n+\tpastMedicalHistory: z.string().optional(),\r\n+\tidentificationType: z.string().optional(),\r\n+\tidentificationNumber: z.string().optional(),\r\n+\tidentificationDocument: z.custom<File[]>().optional(),\r\n+\ttreatmentConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n+\t\t}),\r\n+\tdisclosureConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n+\t\t}),\r\n+\tprivacyConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n+\t\t}),\r\n+});\r\n"
                },
                {
                    "date": 1721341888125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,89 @@\n+import { z } from 'zod';\r\n+\r\n+export const userFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n+\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n+\temail: z.string().email('Debe ser un correo válido.'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido.'\r\n+\t\t),\r\n+});\r\n+\r\n+export const PatientFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n+\temail: z.string().email('Ingrese un correo válido'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido'\r\n+\t\t),\r\n+\tbirthDate: z.coerce.date(),\r\n+\tgender: z.enum(['Male', 'Female', 'Other']),\r\n+\taddress: z\r\n+\t\t.string()\r\n+\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n+\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n+\toccupation: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n+\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n+\temergencyContactName: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n+\temergencyContactNumber: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n+\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n+\t\t),\r\n+\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n+\tinsuranceProvider: z\r\n+\t\t.string()\r\n+\t\t.optional()\r\n+\t\t.refine((val) => {\r\n+\t\t\tconsole.log(val)\r\n+\t\t\treturn val !== '' && (val.length <= 2 && val.length >= 50)\r\n+\t\t}, {\r\n+\t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n+\t\t}),\r\n+\tinsurancePolicyNumber: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n+\t\t,\r\n+\tallergies: z.string().optional(),\r\n+\tcurrentMedication: z.string().optional(),\r\n+\tfamilyMedicalHistory: z.string().optional(),\r\n+\tpastMedicalHistory: z.string().optional(),\r\n+\tidentificationType: z.string().optional(),\r\n+\tidentificationNumber: z.string().optional(),\r\n+\tidentificationDocument: z.custom<File[]>().optional(),\r\n+\ttreatmentConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n+\t\t}),\r\n+\tdisclosureConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n+\t\t}),\r\n+\tprivacyConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n+\t\t}),\r\n+});\r\n"
                },
                {
                    "date": 1721343036031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n \t\t.string()\r\n \t\t.optional()\r\n \t\t.refine((val) => {\r\n \t\t\tconsole.log(val)\r\n-\t\t\treturn val !== '' && (val.length <= 2 && val.length >= 50)\r\n+\t\t\treturn val !== '' && val !== undefined && val.length >= 2 && val.length <= 50\r\n \t\t}, {\r\n \t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n \t\t}),\r\n \tinsurancePolicyNumber: z\r\n"
                },
                {
                    "date": 1721343084640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n \t\t.string()\r\n \t\t.optional()\r\n \t\t.refine((val) => {\r\n \t\t\tconsole.log(val)\r\n-\t\t\treturn val !== '' && val !== undefined && val.length >= 2 && val.length <= 50\r\n+\t\t\treturn val !== undefined && (val.length <= 2 && val.length >= 50)\r\n \t\t}, {\r\n \t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n \t\t}),\r\n \tinsurancePolicyNumber: z\r\n@@ -86,264 +86,4 @@\n \t\t.refine((value) => value === true, {\r\n \t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n \t\t}),\r\n });\r\n-import { z } from 'zod';\r\n-\r\n-export const userFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n-\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n-\temail: z.string().email('Debe ser un correo válido.'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido.'\r\n-\t\t),\r\n-});\r\n-\r\n-export const PatientFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n-\temail: z.string().email('Ingrese un correo válido'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido'\r\n-\t\t),\r\n-\tbirthDate: z.coerce.date(),\r\n-\tgender: z.enum(['Male', 'Female', 'Other']),\r\n-\taddress: z\r\n-\t\t.string()\r\n-\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n-\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n-\toccupation: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n-\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n-\temergencyContactName: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n-\temergencyContactNumber: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n-\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n-\t\t),\r\n-\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n-\tinsuranceProvider: z\r\n-\t\t.string()\r\n-\t\t.optional()\r\n-\t\t.refine((val) => {\r\n-\t\t\tconsole.log(val)\r\n-\t\t}, {\r\n-\t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n-\t\t}),\r\n-\tinsurancePolicyNumber: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n-\t\t,\r\n-\tallergies: z.string().optional(),\r\n-\tcurrentMedication: z.string().optional(),\r\n-\tfamilyMedicalHistory: z.string().optional(),\r\n-\tpastMedicalHistory: z.string().optional(),\r\n-\tidentificationType: z.string().optional(),\r\n-\tidentificationNumber: z.string().optional(),\r\n-\tidentificationDocument: z.custom<File[]>().optional(),\r\n-\ttreatmentConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n-\t\t}),\r\n-\tdisclosureConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n-\t\t}),\r\n-\tprivacyConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n-\t\t}),\r\n-});\r\n-import { z } from 'zod';\r\n-\r\n-export const userFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n-\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n-\temail: z.string().email('Debe ser un correo válido.'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido.'\r\n-\t\t),\r\n-});\r\n-\r\n-export const PatientFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n-\temail: z.string().email('Ingrese un correo válido'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido'\r\n-\t\t),\r\n-\tbirthDate: z.coerce.date(),\r\n-\tgender: z.enum(['Male', 'Female', 'Other']),\r\n-\taddress: z\r\n-\t\t.string()\r\n-\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n-\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n-\toccupation: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n-\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n-\temergencyContactName: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n-\temergencyContactNumber: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n-\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n-\t\t),\r\n-\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n-\tinsuranceProvider: z\r\n-\t\t.string()\r\n-\t\t.optional()\r\n-\t\t.refine((val) => val !== undefined && (val.length <= 2 && val.length >= 50), {\r\n-\t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n-\t\t}),\r\n-\tinsurancePolicyNumber: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n-\t\t,\r\n-\tallergies: z.string().optional(),\r\n-\tcurrentMedication: z.string().optional(),\r\n-\tfamilyMedicalHistory: z.string().optional(),\r\n-\tpastMedicalHistory: z.string().optional(),\r\n-\tidentificationType: z.string().optional(),\r\n-\tidentificationNumber: z.string().optional(),\r\n-\tidentificationDocument: z.custom<File[]>().optional(),\r\n-\ttreatmentConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n-\t\t}),\r\n-\tdisclosureConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n-\t\t}),\r\n-\tprivacyConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n-\t\t}),\r\n-});\r\n-import { z } from 'zod';\r\n-\r\n-export const userFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n-\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n-\temail: z.string().email('Debe ser un correo válido.'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido.'\r\n-\t\t),\r\n-});\r\n-\r\n-export const PatientFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n-\temail: z.string().email('Ingrese un correo válido'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido'\r\n-\t\t),\r\n-\tbirthDate: z.coerce.date(),\r\n-\tgender: z.enum(['Male', 'Female', 'Other']),\r\n-\taddress: z\r\n-\t\t.string()\r\n-\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n-\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n-\toccupation: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n-\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n-\temergencyContactName: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n-\temergencyContactNumber: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n-\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n-\t\t),\r\n-\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n-\tinsuranceProvider: z\r\n-\t\t.string()\r\n-\t\t.optional()\r\n-\t\t.refine((val) => val !== undefined && (val.length >= 2 && val.length <= 50), {\r\n-\t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n-\t\t}),\r\n-\tinsurancePolicyNumber: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n-\t\t,\r\n-\tallergies: z.string().optional(),\r\n-\tcurrentMedication: z.string().optional(),\r\n-\tfamilyMedicalHistory: z.string().optional(),\r\n-\tpastMedicalHistory: z.string().optional(),\r\n-\tidentificationType: z.string().optional(),\r\n-\tidentificationNumber: z.string().optional(),\r\n-\tidentificationDocument: z.custom<File[]>().optional(),\r\n-\ttreatmentConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n-\t\t}),\r\n-\tdisclosureConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n-\t\t}),\r\n-\tprivacyConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n-\t\t}),\r\n-});\r\n"
                },
                {
                    "date": 1721343116867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \tinsuranceProvider: z\r\n \t\t.string()\r\n \t\t.optional()\r\n \t\t.refine((val) => {\r\n-\t\t\tconsole.log(val)\r\n+\t\t\tconsole.log(val,val !== undefined && (val.length <= 2 && val.length >= 50))\r\n \t\t\treturn val !== undefined && (val.length <= 2 && val.length >= 50)\r\n \t\t}, {\r\n \t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n \t\t}),\r\n"
                },
                {
                    "date": 1721343235572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,89 @@\n+import { z } from 'zod';\r\n+\r\n+export const userFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n+\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n+\temail: z.string().email('Debe ser un correo válido.'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido.'\r\n+\t\t),\r\n+});\r\n+\r\n+export const PatientFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n+\temail: z.string().email('Ingrese un correo válido'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido'\r\n+\t\t),\r\n+\tbirthDate: z.coerce.date(),\r\n+\tgender: z.enum(['Male', 'Female', 'Other']),\r\n+\taddress: z\r\n+\t\t.string()\r\n+\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n+\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n+\toccupation: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n+\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n+\temergencyContactName: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n+\temergencyContactNumber: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n+\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n+\t\t),\r\n+\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n+\tinsuranceProvider: z\r\n+\t\t.string()\r\n+\t\t.optional()\r\n+\t\t.refine((val) => {\r\n+\t\t\tconsole.log(val,val !== '' && (val.length <= 2 && val.length >= 50))\r\n+\t\t\treturn val !== undefined && (val.length <= 2 && val.length >= 50)\r\n+\t\t}, {\r\n+\t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n+\t\t}),\r\n+\tinsurancePolicyNumber: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n+\t\t,\r\n+\tallergies: z.string().optional(),\r\n+\tcurrentMedication: z.string().optional(),\r\n+\tfamilyMedicalHistory: z.string().optional(),\r\n+\tpastMedicalHistory: z.string().optional(),\r\n+\tidentificationType: z.string().optional(),\r\n+\tidentificationNumber: z.string().optional(),\r\n+\tidentificationDocument: z.custom<File[]>().optional(),\r\n+\ttreatmentConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n+\t\t}),\r\n+\tdisclosureConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n+\t\t}),\r\n+\tprivacyConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n+\t\t}),\r\n+});\r\n"
                },
                {
                    "date": 1721343250397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,10 @@\n \tinsuranceProvider: z\r\n \t\t.string()\r\n \t\t.optional()\r\n \t\t.refine((val) => {\r\n-\t\t\tconsole.log(val,val !== '' && (val.length <= 2 && val.length >= 50))\r\n+\t\t\tconsole.log(val)\r\n+\t\t\tconsole.log(,val !== '' && (val.length <= 2 && val.length >= 50))\r\n \t\t\treturn val !== undefined && (val.length <= 2 && val.length >= 50)\r\n \t\t}, {\r\n \t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n \t\t}),\r\n@@ -86,93 +87,4 @@\n \t\t.refine((value) => value === true, {\r\n \t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n \t\t}),\r\n });\r\n-import { z } from 'zod';\r\n-\r\n-export const userFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n-\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n-\temail: z.string().email('Debe ser un correo válido.'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido.'\r\n-\t\t),\r\n-});\r\n-\r\n-export const PatientFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n-\temail: z.string().email('Ingrese un correo válido'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido'\r\n-\t\t),\r\n-\tbirthDate: z.coerce.date(),\r\n-\tgender: z.enum(['Male', 'Female', 'Other']),\r\n-\taddress: z\r\n-\t\t.string()\r\n-\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n-\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n-\toccupation: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n-\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n-\temergencyContactName: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n-\temergencyContactNumber: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n-\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n-\t\t),\r\n-\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n-\tinsuranceProvider: z\r\n-\t\t.string()\r\n-\t\t.optional()\r\n-\t\t.refine((val) => {\r\n-\t\t\tconsole.log(val,val !== undefined && (val.length <= 2 && val.length >= 50))\r\n-\t\t\treturn val !== undefined && (val.length <= 2 && val.length >= 50)\r\n-\t\t}, {\r\n-\t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n-\t\t}),\r\n-\tinsurancePolicyNumber: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n-\t\t,\r\n-\tallergies: z.string().optional(),\r\n-\tcurrentMedication: z.string().optional(),\r\n-\tfamilyMedicalHistory: z.string().optional(),\r\n-\tpastMedicalHistory: z.string().optional(),\r\n-\tidentificationType: z.string().optional(),\r\n-\tidentificationNumber: z.string().optional(),\r\n-\tidentificationDocument: z.custom<File[]>().optional(),\r\n-\ttreatmentConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n-\t\t}),\r\n-\tdisclosureConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n-\t\t}),\r\n-\tprivacyConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n-\t\t}),\r\n-});\r\n"
                },
                {
                    "date": 1721343281240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,10 +51,10 @@\n \t\t.string()\r\n \t\t.optional()\r\n \t\t.refine((val) => {\r\n \t\t\tconsole.log(val)\r\n-\t\t\tconsole.log(,val !== '' && (val.length <= 2 && val.length >= 50))\r\n-\t\t\treturn val !== undefined && (val.length <= 2 && val.length >= 50)\r\n+\t\t\tconsole.log(val !== '' && (val.length <= 2 && val.length >= 50))\r\n+\t\t\treturn true\r\n \t\t}, {\r\n \t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n \t\t}),\r\n \tinsurancePolicyNumber: z\r\n"
                },
                {
                    "date": 1721343415778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+import { z } from 'zod';\r\n+\r\n+export const userFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n+\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n+\temail: z.string().email('Debe ser un correo válido.'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido.'\r\n+\t\t),\r\n+});\r\n+\r\n+export const PatientFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n+\temail: z.string().email('Ingrese un correo válido'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido'\r\n+\t\t),\r\n+\tbirthDate: z.coerce.date(),\r\n+\tgender: z.enum(['Male', 'Female', 'Other']),\r\n+\taddress: z\r\n+\t\t.string()\r\n+\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n+\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n+\toccupation: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n+\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n+\temergencyContactName: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n+\temergencyContactNumber: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n+\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n+\t\t),\r\n+\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n+\tinsuranceProvider: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n+\t\t.optional(),\r\n+\tinsurancePolicyNumber: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres'),\r\n+\tallergies: z.string().optional(),\r\n+\tcurrentMedication: z.string().optional(),\r\n+\tfamilyMedicalHistory: z.string().optional(),\r\n+\tpastMedicalHistory: z.string().optional(),\r\n+\tidentificationType: z.string().optional(),\r\n+\tidentificationNumber: z.string().optional(),\r\n+\tidentificationDocument: z.custom<File[]>().optional(),\r\n+\ttreatmentConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n+\t\t}),\r\n+\tdisclosureConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n+\t\t}),\r\n+\tprivacyConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n+\t\t}),\r\n+});\r\n"
                },
                {
                    "date": 1721343481308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,8 @@\n \tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n \tinsuranceProvider: z\r\n \t\t.string()\r\n \t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n \t\t.optional(),\r\n \tinsurancePolicyNumber: z\r\n \t\t.string()\r\n \t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n@@ -81,94 +80,4 @@\n \t\t.refine((value) => value === true, {\r\n \t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n \t\t}),\r\n });\r\n-import { z } from 'zod';\r\n-\r\n-export const userFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n-\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n-\temail: z.string().email('Debe ser un correo válido.'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido.'\r\n-\t\t),\r\n-});\r\n-\r\n-export const PatientFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n-\temail: z.string().email('Ingrese un correo válido'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido'\r\n-\t\t),\r\n-\tbirthDate: z.coerce.date(),\r\n-\tgender: z.enum(['Male', 'Female', 'Other']),\r\n-\taddress: z\r\n-\t\t.string()\r\n-\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n-\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n-\toccupation: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n-\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n-\temergencyContactName: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n-\temergencyContactNumber: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n-\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n-\t\t),\r\n-\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n-\tinsuranceProvider: z\r\n-\t\t.string()\r\n-\t\t.optional()\r\n-\t\t.refine((val) => {\r\n-\t\t\tconsole.log(val)\r\n-\t\t\tconsole.log(val !== '' && (val.length <= 2 && val.length >= 50))\r\n-\t\t\treturn true\r\n-\t\t}, {\r\n-\t\t\tmessage: \"Nombre de la aseguradora debe tener entre 2 y 50 caracteres si se proporciona\",\r\n-\t\t}),\r\n-\tinsurancePolicyNumber: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n-\t\t,\r\n-\tallergies: z.string().optional(),\r\n-\tcurrentMedication: z.string().optional(),\r\n-\tfamilyMedicalHistory: z.string().optional(),\r\n-\tpastMedicalHistory: z.string().optional(),\r\n-\tidentificationType: z.string().optional(),\r\n-\tidentificationNumber: z.string().optional(),\r\n-\tidentificationDocument: z.custom<File[]>().optional(),\r\n-\ttreatmentConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n-\t\t}),\r\n-\tdisclosureConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n-\t\t}),\r\n-\tprivacyConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n-\t\t}),\r\n-});\r\n"
                },
                {
                    "date": 1721343710194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,12 +46,9 @@\n \t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n \t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n \t\t),\r\n \tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n-\tinsuranceProvider: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n-\t\t.optional(),\r\n+\tinsuranceProvider: z.string().min(8).max(100).or(z.literal('')),\r\n \tinsurancePolicyNumber: z\r\n \t\t.string()\r\n \t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n \t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres'),\r\n"
                },
                {
                    "date": 1721343949113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+import { z } from 'zod';\r\n+\r\n+export const userFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n+\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n+\temail: z.string().email('Debe ser un correo válido.'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido.'\r\n+\t\t),\r\n+});\r\n+\r\n+export const PatientFormValidation = z.object({\r\n+\tname: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n+\temail: z.string().email('Ingrese un correo válido'),\r\n+\tphone: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n+\t\t\t'Número de teléfono inválido'\r\n+\t\t),\r\n+\tbirthDate: z.coerce.date(),\r\n+\tgender: z.enum(['Male', 'Female', 'Other']),\r\n+\taddress: z\r\n+\t\t.string()\r\n+\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n+\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n+\toccupation: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n+\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n+\temergencyContactName: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n+\temergencyContactNumber: z\r\n+\t\t.string()\r\n+\t\t.refine(\r\n+\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n+\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n+\t\t),\r\n+\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n+\tinsuranceProvider: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n+\t\t.or(z.literal('')),\r\n+\tinsurancePolicyNumber: z\r\n+\t\t.string()\r\n+\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n+\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres'),\r\n+\tallergies: z.string().optional(),\r\n+\tcurrentMedication: z.string().optional(),\r\n+\tfamilyMedicalHistory: z.string().optional(),\r\n+\tpastMedicalHistory: z.string().optional(),\r\n+\tidentificationType: z.string().optional(),\r\n+\tidentificationNumber: z.string().optional(),\r\n+\tidentificationDocument: z.custom<File[]>().optional(),\r\n+\ttreatmentConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n+\t\t}),\r\n+\tdisclosureConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n+\t\t}),\r\n+\tprivacyConsent: z\r\n+\t\t.boolean()\r\n+\t\t.default(false)\r\n+\t\t.refine((value) => value === true, {\r\n+\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n+\t\t}),\r\n+});\r\n"
                },
                {
                    "date": 1721343995501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,84 +81,4 @@\n \t\t.refine((value) => value === true, {\r\n \t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n \t\t}),\r\n });\r\n-import { z } from 'zod';\r\n-\r\n-export const userFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n-\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n-\temail: z.string().email('Debe ser un correo válido.'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido.'\r\n-\t\t),\r\n-});\r\n-\r\n-export const PatientFormValidation = z.object({\r\n-\tname: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Nombre debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Nombre debe tener menos de 50 caracteres'),\r\n-\temail: z.string().email('Ingrese un correo válido'),\r\n-\tphone: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(phone) => /^\\+\\d{10,15}$/.test(phone),\r\n-\t\t\t'Número de teléfono inválido'\r\n-\t\t),\r\n-\tbirthDate: z.coerce.date(),\r\n-\tgender: z.enum(['Male', 'Female', 'Other']),\r\n-\taddress: z\r\n-\t\t.string()\r\n-\t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n-\t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n-\toccupation: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n-\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n-\temergencyContactName: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n-\temergencyContactNumber: z\r\n-\t\t.string()\r\n-\t\t.refine(\r\n-\t\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n-\t\t\t'Número de teléfono de contacto de emergencia inválido'\r\n-\t\t),\r\n-\tprimaryPhysician: z.string().min(2, 'Seleccione un médico'),\r\n-\tinsuranceProvider: z.string().min(8).max(100).or(z.literal('')),\r\n-\tinsurancePolicyNumber: z\r\n-\t\t.string()\r\n-\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres'),\r\n-\tallergies: z.string().optional(),\r\n-\tcurrentMedication: z.string().optional(),\r\n-\tfamilyMedicalHistory: z.string().optional(),\r\n-\tpastMedicalHistory: z.string().optional(),\r\n-\tidentificationType: z.string().optional(),\r\n-\tidentificationNumber: z.string().optional(),\r\n-\tidentificationDocument: z.custom<File[]>().optional(),\r\n-\ttreatmentConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento al tratamiento para continuar',\r\n-\t\t}),\r\n-\tdisclosureConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la divulgación para continuar',\r\n-\t\t}),\r\n-\tprivacyConsent: z\r\n-\t\t.boolean()\r\n-\t\t.default(false)\r\n-\t\t.refine((value) => value === true, {\r\n-\t\t\tmessage: 'Debe dar su consentimiento a la privacidad para continuar',\r\n-\t\t}),\r\n-});\r\n"
                },
                {
                    "date": 1721345120481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,10 @@\n \t\t.or(z.literal('')),\r\n \tinsurancePolicyNumber: z\r\n \t\t.string()\r\n \t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n-\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres'),\r\n+\t\t.max(50, 'Numbero de póliza debe tener menos de 50 caracteres')\r\n+\t\t.or(z.literal('')),\r\n \tallergies: z.string().optional(),\r\n \tcurrentMedication: z.string().optional(),\r\n \tfamilyMedicalHistory: z.string().optional(),\r\n \tpastMedicalHistory: z.string().optional(),\r\n"
                },
                {
                    "date": 1721345152595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,11 @@\n \t\t.min(5, 'Dirección debe tener al menos 5 caracteres')\r\n \t\t.max(500, 'Dirección debe tener menos de 500 caracteres'),\r\n \toccupation: z\r\n \t\t.string()\r\n-\t\t.min(2, 'Ocupación debe tener al menos 2 caracteres')\r\n-\t\t.max(500, 'Ocupación debe tener menos de 500 caracteres'),\r\n+\t\t.min(2, 'Numbero de póliza debe tener al menos 2 caracteres')\r\n+\t\t.max(500, 'Numbero de póliza debe tener menos de 500 caracteres')\r\n+\t\t.or(z.literal('')),\r\n \temergencyContactName: z\r\n \t\t.string()\r\n \t\t.min(2, 'Contacto de emergencia debe tener al menos 2 caracteres')\r\n \t\t.max(50, 'Contacto de emergencia debe tener menos de 50 caracteres'),\r\n"
                }
            ],
            "date": 1721338793155,
            "name": "Commit-0",
            "content": "import { z } from 'zod';\r\n\r\nexport const userFormValidation = z.object({\r\n\tname: z\r\n\t\t.string()\r\n\t\t.min(2, 'Debe tener al menos 2 caracteres.')\r\n\t\t.max(50, 'Debe tener menos de 50 caracteres.'),\r\n\temail: z.string().email('Debe ser un correo válido.'),\r\n\tphone: z\r\n\t\t.string()\r\n\t\t.refine(\r\n\t\t\t(phone) => /^\\+[1-9]\\d{1,14}$/.test(phone),\r\n\t\t\t'Número de teléfono inválido.'\r\n\t\t),\r\n});\r\n\r\nexport const PatientFormValidation = z.object({\r\n\tname: z\r\n\t  .string()\r\n\t  .min(2, \"Nombre debe tener al menos 2 caracteres\")\r\n\t  .max(50, \"Nombre debe tener menos de 50 caracteres\"),\r\n\temail: z.string().email(\"Ingrese un correo válido\"),\r\n\tphone: z\r\n\t  .string()\r\n\t  .refine((phone) => /^\\+\\d{10,15}$/.test(phone), \"Número de teléfono inválido\"),\r\n\tbirthDate: z.coerce.date(),\r\n\tgender: z.enum([\"Male\", \"Female\", \"Other\"]),\r\n\taddress: z\r\n\t  .string()\r\n\t  .min(5, \"Dirección debe tener al menos 5 caracteres\")\r\n\t  .max(500, \"Dirección debe tener menos de 500 caracteres\"),\r\n\toccupation: z\r\n\t  .string()\r\n\t  .min(2, \"Ocupación debe tener al menos 2 caracteres\")\r\n\t  .max(500, \"Ocupación debe tener menos de 500 caracteres\"),\r\n\temergencyContactName: z\r\n\t  .string()\r\n\t  .min(2, \"Contacto de emergencia debe tener al menos 2 caracteres\")\r\n\t  .max(50, \"Contacto de emergencia debe tener menos de 50 caracteres\"),\r\n\temergencyContactNumber: z\r\n\t  .string()\r\n\t  .refine(\r\n\t\t(emergencyContactNumber) => /^\\+\\d{10,15}$/.test(emergencyContactNumber),\r\n\t\t\"Número de teléfono de contacto de emergencia inválido\"\r\n\t  ),\r\n\tprimaryPhysician: z.string().min(2, \"Seleccione un médico\"),\r\n\tinsuranceProvider: z\r\n\t  .string()\r\n\t  .min(2, \"Nombre de la aseguradora debe tener al menos 2 caracteres\")\r\n\t  .max(50, \"Nombre de la aseguradora debe tener menos de 50 caracteres\"),\r\n\tinsurancePolicyNumber: z\r\n\t  .string()\r\n\t  .min(2, \"Numbero de póliza debe tener al menos 2 caracteres\")\r\n\t  .max(50, \"Numbero de póliza debe tener menos de 50 caracteres\"),\r\n\tallergies: z.string().optional(),\r\n\tcurrentMedication: z.string().optional(),\r\n\tfamilyMedicalHistory: z.string().optional(),\r\n\tpastMedicalHistory: z.string().optional(),\r\n\tidentificationType: z.string().optional(),\r\n\tidentificationNumber: z.string().optional(),\r\n\tidentificationDocument: z.custom<File[]>().optional(),\r\n\ttreatmentConsent: z\r\n\t  .boolean()\r\n\t  .default(false)\r\n\t  .refine((value) => value === true, {\r\n\t\tmessage: \"You must consent to treatment in order to proceed\",\r\n\t  }),\r\n\tdisclosureConsent: z\r\n\t  .boolean()\r\n\t  .default(false)\r\n\t  .refine((value) => value === true, {\r\n\t\tmessage: \"You must consent to disclosure in order to proceed\",\r\n\t  }),\r\n\tprivacyConsent: z\r\n\t  .boolean()\r\n\t  .default(false)\r\n\t  .refine((value) => value === true, {\r\n\t\tmessage: \"You must consent to privacy in order to proceed\",\r\n\t  }),\r\n  });"
        }
    ]
}