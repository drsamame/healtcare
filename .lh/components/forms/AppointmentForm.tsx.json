{
    "sourceFile": "components/forms/AppointmentForm.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 49,
            "patches": [
                {
                    "date": 1721673954145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1721674067867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n \treturn (\r\n \t\t<Form {...form}>\r\n \t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n \t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Hola!</h1>\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n \t\t\t\t\t<p className=\"text-dark-700\">Programa tu primera cita</p>\r\n \t\t\t\t</section>\r\n \t\t\t\t<CustomFormField\r\n \t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n"
                },
                {
                    "date": 1721674110634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+\r\n+const AppointmentForm = () => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tphone: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tphone,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res.data);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t\tconsole.log(form.formState.errors?.root?.serverError.type);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">Solicita una nueva cita en 10 segundos</p>\r\n+\t\t\t\t</section>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Empezar</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721674590901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,106 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatient: string;\r\n+\ttype: 'create' | 'cancel';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tphone: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tphone,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res.data);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t\tconsole.log(form.formState.errors?.root?.serverError.type);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"name\"\r\n+\t\t\t\t\tlabel=\"Nombre completo\"\r\n+\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n+\t\t\t\t\ticonAlt=\"user\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"email\"\r\n+\t\t\t\t\tlabel=\"Correo\"\r\n+\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<CustomFormField\r\n+\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n+\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\tname=\"phone\"\r\n+\t\t\t\t\tlabel=\"Celular\"\r\n+\t\t\t\t\tplaceholder=\"955061182\"\r\n+\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n+\t\t\t\t\ticonAlt=\"email\"\r\n+\t\t\t\t/>\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Empezar</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721674596129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \tpatient: string;\r\n \ttype: 'create' | 'cancel';\r\n }\r\n \r\n-const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n+const AppointmentForm = ({ userId, patient, type }: Props) => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n \r\n \tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n@@ -103,200 +103,4 @@\n \t);\r\n };\r\n \r\n export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-\r\n-const AppointmentForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res.data);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t\tconsole.log(form.formState.errors?.root?.serverError.type);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">Solicita una nueva cita en 10 segundos</p>\r\n-\t\t\t\t</section>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Empezar</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-\r\n-const AppointmentForm = () => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res.data);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t\tconsole.log(form.formState.errors?.root?.serverError.type);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">Programa tu primera cita</p>\r\n-\t\t\t\t</section>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Empezar</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721674826887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,10 @@\n import { useState } from 'react';\r\n import { userFormValidation } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/patient.actions';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n \r\n interface Props {\r\n \tuserId: string;\r\n \tpatient: string;\r\n@@ -64,8 +66,36 @@\n \t\t\t\t\t<p className=\"text-dark-700\">\r\n \t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n \t\t\t\t\t</p>\r\n \t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n \t\t\t\t<CustomFormField\r\n \t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n \t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\tname=\"name\"\r\n"
                },
                {
                    "date": 1721674834776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/patient.actions';\r\n import { SelectItem } from '@/components/ui/select';\r\n import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n \r\n interface Props {\r\n \tuserId: string;\r\n \tpatient: string;\r\n"
                },
                {
                    "date": 1721675045526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,8 +92,16 @@\n \t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t</SelectItem>\r\n \t\t\t\t\t\t\t))}\r\n \t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n \t\t\t\t\t</>\r\n \t\t\t\t)}\r\n \r\n \t\t\t\t<CustomFormField\r\n"
                },
                {
                    "date": 1721676774468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,8 +100,15 @@\n \t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n \t\t\t\t\t\t\tshowTimeSelect\r\n \t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n \t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\tlabel=\"motivo de la cita\"\r\n+                            placeholder='Describa el motivo de la cita'\r\n+\t\t\t\t\t\t></CustomFormField>\r\n \t\t\t\t\t</>\r\n \t\t\t\t)}\r\n \r\n \t\t\t\t<CustomFormField\r\n"
                },
                {
                    "date": 1721677576029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,11 +104,18 @@\n \t\t\t\t\t\t<CustomFormField\r\n \t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n \t\t\t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\tlabel=\"motivo de la cita\"\r\n-                            placeholder='Describa el motivo de la cita'\r\n+\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n \t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t></CustomFormField>\r\n \t\t\t\t\t</>\r\n \t\t\t\t)}\r\n \r\n \t\t\t\t<CustomFormField\r\n"
                },
                {
                    "date": 1721677654356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,35 +117,17 @@\n \t\t\t\t\t\t></CustomFormField>\r\n \t\t\t\t\t</>\r\n \t\t\t\t)}\r\n \r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"name\"\r\n-\t\t\t\t\tlabel=\"Nombre completo\"\r\n-\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n-\t\t\t\t\ticonAlt=\"user\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"email\"\r\n-\t\t\t\t\tlabel=\"Correo\"\r\n-\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n-\t\t\t\t<CustomFormField\r\n-\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n-\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\tname=\"phone\"\r\n-\t\t\t\t\tlabel=\"Celular\"\r\n-\t\t\t\t\tplaceholder=\"955061182\"\r\n-\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n-\t\t\t\t\ticonAlt=\"email\"\r\n-\t\t\t\t/>\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n \t\t\t\t<SubmitButton isLoading={isLoading}>Empezar</SubmitButton>\r\n \t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n \t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n \t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n"
                },
                {
                    "date": 1721677661371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,142 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatient: string;\r\n+\ttype: 'create' | 'cancel';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patient, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tphone: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tphone,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res.data);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t\tconsole.log(form.formState.errors?.root?.serverError.type);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\t\t\t\t\r\n+\t\t\t\t<SubmitButton isLoading={isLoading}>Empezar</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721677766768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,151 +126,17 @@\n \t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n \t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n \t\t\t\t\t></CustomFormField>\r\n \t\t\t\t)}\r\n-\t\t\t\t\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Empezar</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n \r\n-export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatient: string;\r\n-\ttype: 'create' | 'cancel';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patient, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res.data);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t\tconsole.log(form.formState.errors?.root?.serverError.type);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"notes\"\r\n-\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\t\t\t\t<SubmitButton isLoading={isLoading}>Empezar</SubmitButton>\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\tEmpezar\r\n+\t\t\t\t</SubmitButton>\r\n \t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n \t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n \t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n \t\t\t\t\t</p>\r\n"
                },
                {
                    "date": 1721677872833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,23 @@\n \t\t} finally {\r\n \t\t\tsetIsLoading(false);\r\n \t\t}\r\n \t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch(type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak\r\n+\t}\r\n+\r\n+\r\n \treturn (\r\n \t\t<Form {...form}>\r\n \t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n \t\t\t\t<section className=\"mb-12 space-y-4\">\r\n"
                },
                {
                    "date": 1721677880878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \r\n interface Props {\r\n \tuserId: string;\r\n \tpatient: string;\r\n-\ttype: 'create' | 'cancel';\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n }\r\n \r\n const AppointmentForm = ({ userId, patient, type }: Props) => {\r\n \tconst router = useRouter();\r\n@@ -60,21 +60,20 @@\n \t\t}\r\n \t}\r\n \tlet buttonLabel;\r\n \r\n-\tswitch(type) {\r\n+\tswitch (type) {\r\n \t\tcase 'cancel':\r\n \t\t\tbuttonLabel = 'Cancelar cita';\r\n \t\t\tbreak;\r\n \t\tcase 'create':\r\n \t\t\tbuttonLabel = 'Crear cita';\r\n \t\t\tbreak;\r\n \t\tcase 'schedule':\r\n \t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak\r\n+\t\t\tbreak;\r\n \t}\r\n \r\n-\r\n \treturn (\r\n \t\t<Form {...form}>\r\n \t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n \t\t\t\t<section className=\"mb-12 space-y-4\">\r\n"
                },
                {
                    "date": 1721677904758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,9 +147,9 @@\n \t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n \t\t\t\t\t} w-full`}\r\n \t\t\t\t\tisLoading={isLoading}\r\n \t\t\t\t>\r\n-\t\t\t\t\tEmpezar\r\n+\t\t\t\t\t{buttonLabel}\r\n \t\t\t\t</SubmitButton>\r\n \t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n \t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n \t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n"
                },
                {
                    "date": 1721677969738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,167 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { userFormValidation } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatient: string;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patient, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n+\t\tresolver: zodResolver(userFormValidation),\r\n+\t\tdefaultValues: {\r\n+\t\t\tname: '',\r\n+\t\t\temail: '',\r\n+\t\t\tphone: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit({\r\n+\t\tname,\r\n+\t\temail,\r\n+\t\tphone,\r\n+\t}: z.infer<typeof userFormValidation>) {\r\n+\t\tsetIsLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res.data);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t\tconsole.log(form.formState.errors?.root?.serverError.type);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t{' '}\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721678073458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,8 @@\n \t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n \t\t\t\t\t\t></CustomFormField>\r\n \r\n \t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t{' '}\r\n \t\t\t\t\t\t\t<CustomFormField\r\n \t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n \t\t\t\t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\t\t\t\tname=\"reason\"\r\n@@ -164,167 +163,4 @@\n \t);\r\n };\r\n \r\n export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatient: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patient, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n-\t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res.data);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t\tconsole.log(form.formState.errors?.root?.serverError.type);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"notes\"\r\n-\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721678277434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { Form } from '@/components/ui/form';\r\n import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n import SubmitButton from '../SubmitButton';\r\n import { useState } from 'react';\r\n-import { userFormValidation } from '@/lib/validation';\r\n+import { CreateAppointmentSchema } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n import { createUser } from '@/lib/actions/patient.actions';\r\n import { SelectItem } from '@/components/ui/select';\r\n import { Doctors } from '@/constants';\r\n@@ -22,22 +22,24 @@\n const AppointmentForm = ({ userId, patient, type }: Props) => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n \r\n-\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n-\t\tresolver: zodResolver(userFormValidation),\r\n+\tconst form = useForm<z.infer<typeof CreateAppointmentSchema>>({\r\n+\t\tresolver: zodResolver(CreateAppointmentSchema),\r\n \t\tdefaultValues: {\r\n-\t\t\tname: '',\r\n-\t\t\temail: '',\r\n-\t\t\tphone: '',\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n \t\t},\r\n \t});\r\n \r\n \tasync function onSubmit({\r\n \t\tname,\r\n \t\temail,\r\n \t\tphone,\r\n-\t}: z.infer<typeof userFormValidation>) {\r\n+\t}: z.infer<typeof CreateAppointmentSchema>) {\r\n \t\tsetIsLoading(true);\r\n \t\ttry {\r\n \t\t\tconst userData = { name, email, phone };\r\n \t\t\tconst res = await createUser(userData);\r\n"
                },
                {
                    "date": 1721678370185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,182 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { CreateAppointmentSchema } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatient: string;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patient, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof CreateAppointmentSchema>>({\r\n+\t\tresolver: zodResolver(CreateAppointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof CreateAppointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'create':\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tconst userData = { name, email, phone };\r\n+\t\t\tconst res = await createUser(userData);\r\n+\r\n+\t\t\tif (!res?.error) {\r\n+\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n+\t\t\t} else {\r\n+\t\t\t\tconsole.log(res.data);\r\n+\t\t\t\tform.setError('root.serverError', {\r\n+\t\t\t\t\tmessage:\r\n+\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n+\t\t\t\t\ttype: '400',\r\n+\t\t\t\t});\r\n+\t\t\t\tconsole.log(form.formState.errors?.root?.serverError.type);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721678738073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,179 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { CreateAppointmentSchema } from '@/lib/validation';\r\n+import { useRouter } from 'next/navigation';\r\n+import { createUser } from '@/lib/actions/patient.actions';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof CreateAppointmentSchema>>({\r\n+\t\tresolver: zodResolver(CreateAppointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof CreateAppointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'create':\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patiendId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721678757411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n import SubmitButton from '../SubmitButton';\r\n import { useState } from 'react';\r\n import { CreateAppointmentSchema } from '@/lib/validation';\r\n import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n import { SelectItem } from '@/components/ui/select';\r\n import { Doctors } from '@/constants';\r\n import Image from 'next/image';\r\n \r\n@@ -176,354 +175,4 @@\n \t);\r\n };\r\n \r\n export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { CreateAppointmentSchema } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatient: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patient, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof CreateAppointmentSchema>>({\r\n-\t\tresolver: zodResolver(CreateAppointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof CreateAppointmentSchema>) {\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'create':\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res.data);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t\tconsole.log(form.formState.errors?.root?.serverError.type);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"notes\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { CreateAppointmentSchema } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { createUser } from '@/lib/actions/patient.actions';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatient: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patient, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof CreateAppointmentSchema>>({\r\n-\t\tresolver: zodResolver(CreateAppointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit({\r\n-\t\tname,\r\n-\t\temail,\r\n-\t\tphone,\r\n-\t}: z.infer<typeof CreateAppointmentSchema>) {\r\n-\t\tsetIsLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst userData = { name, email, phone };\r\n-\t\t\tconst res = await createUser(userData);\r\n-\r\n-\t\t\tif (!res?.error) {\r\n-\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n-\t\t\t} else {\r\n-\t\t\t\tconsole.log(res.data);\r\n-\t\t\t\tform.setError('root.serverError', {\r\n-\t\t\t\t\tmessage:\r\n-\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n-\t\t\t\t\ttype: '400',\r\n-\t\t\t\t});\r\n-\t\t\t\tconsole.log(form.formState.errors?.root?.serverError.type);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"notes\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721678775464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n \t\ttry {\r\n \t\t\tif (type === 'create' && patientId) {\r\n \t\t\t\tconst appointmentData = {\r\n \t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatient: patiendId,\r\n+\t\t\t\t\tpatientId,\r\n \t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n \t\t\t\t\tschedule: new Date(values.schedule),\r\n \t\t\t\t\treason: values.reason,\r\n \t\t\t\t\tnote: values.note,\r\n"
                },
                {
                    "date": 1721678976633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,9 @@\n \t\t\t\t\treason: values.reason,\r\n \t\t\t\t\tnote: values.note,\r\n \t\t\t\t\tstatus: status as Status,\r\n \t\t\t\t};\r\n+\t\t\t\t// const appointment = await createAppointment(appointmentData);\r\n \t\t\t}\r\n \t\t} catch (e: any) {\r\n \t\t\tconsole.log(e);\r\n \t\t} finally {\r\n"
                },
                {
                    "date": 1721679506899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,180 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { CreateAppointmentSchema } from '@/lib/validation';\r\n+import { CreateAppointment } from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof CreateAppointmentSchema>>({\r\n+\t\tresolver: zodResolver(CreateAppointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof CreateAppointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'create':\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721679553941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n import SubmitButton from '../SubmitButton';\r\n import { useState } from 'react';\r\n import { CreateAppointmentSchema } from '@/lib/validation';\r\n-import { CreateAppointment } from '@/lib/actions/appointment.actions';\r\n+import { createAppointment } from '@/lib/actions/appointment.actions';\r\n import { useRouter } from 'next/navigation';\r\n import { SelectItem } from '@/components/ui/select';\r\n import { Doctors } from '@/constants';\r\n import Image from 'next/image';\r\n"
                },
                {
                    "date": 1721679582885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,180 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { CreateAppointmentSchema } from '@/lib/validation';\r\n+import { createAppointment } from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst form = useForm<z.infer<typeof CreateAppointmentSchema>>({\r\n+\t\tresolver: zodResolver(CreateAppointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof CreateAppointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'create':\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721679674323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,182 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getAppointmentSchema } from '@/lib/validation';\r\n+import { createAppointment } from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst appointmentSchema = getAppointmentSchema(type);\r\n+\r\n+\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n+\t\tresolver: zodResolver(appointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'create':\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721679733713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,182 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getAppointmentSchema } from '@/lib/validation';\r\n+import { createAppointment } from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst appointmentSchema = getAppointmentSchema(type);\r\n+\r\n+\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n+\t\tresolver: zodResolver(appointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'create':\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason!,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721686344850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,9 @@\n \t\t},\r\n \t});\r\n \r\n \tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tconsole.log('here')\r\n \t\tsetIsLoading(true);\r\n \r\n \t\tlet status;\r\n \r\n"
                },
                {
                    "date": 1721686375220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n \t\t},\r\n \t});\r\n \r\n \tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n-\t\tconsole.log('here')\r\n+\t\tconsole.log('here', type)\r\n \t\tsetIsLoading(true);\r\n \r\n \t\tlet status;\r\n \r\n@@ -180,725 +180,4 @@\n \t);\r\n };\r\n \r\n export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getAppointmentSchema } from '@/lib/validation';\r\n-import { createAppointment } from '@/lib/actions/appointment.actions';\r\n-import { useRouter } from 'next/navigation';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatientId: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst appointmentSchema = getAppointmentSchema(type);\r\n-\r\n-\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n-\t\tresolver: zodResolver(appointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'create':\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tif (type === 'create' && patientId) {\r\n-\t\t\t\tconst appointmentData = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatient: patientId,\r\n-\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\treason: values.reason,\r\n-\t\t\t\t\tnote: values.note,\r\n-\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t};\r\n-\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"notes\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { CreateAppointmentSchema } from '@/lib/validation';\r\n-import { createAppointment } from '@/lib/actions/appointment.actions';\r\n-import { useRouter } from 'next/navigation';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatientId: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof CreateAppointmentSchema>>({\r\n-\t\tresolver: zodResolver(CreateAppointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof CreateAppointmentSchema>) {\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'create':\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tif (type === 'create' && patientId) {\r\n-\t\t\t\tconst appointmentData = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatient: patientId,\r\n-\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\treason: values.reason,\r\n-\t\t\t\t\tnote: values.note,\r\n-\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t};\r\n-\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"notes\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { CreateAppointmentSchema } from '@/lib/validation';\r\n-import { createAppointment } from '@/lib/actions/appointment.actions';\r\n-import { useRouter } from 'next/navigation';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatientId: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof CreateAppointmentSchema>>({\r\n-\t\tresolver: zodResolver(CreateAppointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof CreateAppointmentSchema>) {\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'create':\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tif (type === 'create' && patientId) {\r\n-\t\t\t\tconst appointmentData = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatientId,\r\n-\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\treason: values.reason,\r\n-\t\t\t\t\tnote: values.note,\r\n-\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t};\r\n-\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"notes\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { CreateAppointmentSchema } from '@/lib/validation';\r\n-import { useRouter } from 'next/navigation';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatientId: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst form = useForm<z.infer<typeof CreateAppointmentSchema>>({\r\n-\t\tresolver: zodResolver(CreateAppointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof CreateAppointmentSchema>) {\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'create':\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tif (type === 'create' && patientId) {\r\n-\t\t\t\tconst appointmentData = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatientId,\r\n-\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\treason: values.reason,\r\n-\t\t\t\t\tnote: values.note,\r\n-\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t};\r\n-\t\t\t\t// const appointment = await createAppointment(appointmentData);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"notes\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721686442572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,180 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getAppointmentSchema } from '@/lib/validation';\r\n+import { createAppointment } from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst appointmentSchema = getAppointmentSchema(type);\r\n+\r\n+\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n+\t\tresolver: zodResolver(appointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tconsole.log('here', type)\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason!,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721686466795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,9 @@\n \t\t\t\t\tnote: values.note,\r\n \t\t\t\t\tstatus: status as Status,\r\n \t\t\t\t};\r\n \t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t\tconsole.log(appointment)\r\n \t\t\t}\r\n \t\t} catch (e: any) {\r\n \t\t\tconsole.log(e);\r\n \t\t} finally {\r\n@@ -177,187 +178,4 @@\n \t);\r\n };\r\n \r\n export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getAppointmentSchema } from '@/lib/validation';\r\n-import { createAppointment } from '@/lib/actions/appointment.actions';\r\n-import { useRouter } from 'next/navigation';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatientId: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst appointmentSchema = getAppointmentSchema(type);\r\n-\r\n-\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n-\t\tresolver: zodResolver(appointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n-\t\tconsole.log('here', type)\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'create':\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tif (type === 'create' && patientId) {\r\n-\t\t\t\tconst appointmentData = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatient: patientId,\r\n-\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\treason: values.reason!,\r\n-\t\t\t\t\tnote: values.note,\r\n-\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t};\r\n-\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"notes\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721686520433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,181 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getAppointmentSchema } from '@/lib/validation';\r\n+import { createAppointment } from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst appointmentSchema = getAppointmentSchema(type);\r\n+\r\n+\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n+\t\tresolver: zodResolver(appointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tconsole.log('here', type)\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason!,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t\tconsole.log(appointment)\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721686588579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,182 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getAppointmentSchema } from '@/lib/validation';\r\n+import { createAppointment } from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst appointmentSchema = getAppointmentSchema(type);\r\n+\r\n+\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n+\t\tresolver: zodResolver(appointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tconsole.log('here', type)\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tconsole.log(patientId,type)\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason!,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t\tconsole.log(appointment)\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721687425395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,181 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getAppointmentSchema } from '@/lib/validation';\r\n+import { createAppointment } from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst appointmentSchema = getAppointmentSchema(type);\r\n+\r\n+\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n+\t\tresolver: zodResolver(appointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tconsole.log(patientId,type)\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason!,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t\tconsole.log(appointment)\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721687855082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,9 @@\n \t\t\t\t\t\t\t></CustomFormField>\r\n \t\t\t\t\t\t\t<CustomFormField\r\n \t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n \t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\t\tname=\"note\"\r\n \t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n \t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n \t\t\t\t\t\t\t></CustomFormField>\r\n \t\t\t\t\t\t</div>\r\n@@ -178,548 +178,4 @@\n \t);\r\n };\r\n \r\n export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getAppointmentSchema } from '@/lib/validation';\r\n-import { createAppointment } from '@/lib/actions/appointment.actions';\r\n-import { useRouter } from 'next/navigation';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatientId: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst appointmentSchema = getAppointmentSchema(type);\r\n-\r\n-\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n-\t\tresolver: zodResolver(appointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n-\t\tconsole.log('here', type)\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tconsole.log(patientId,type)\r\n-\t\t\tif (type === 'create' && patientId) {\r\n-\t\t\t\tconst appointmentData = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatient: patientId,\r\n-\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\treason: values.reason!,\r\n-\t\t\t\t\tnote: values.note,\r\n-\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t};\r\n-\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n-\t\t\t\tconsole.log(appointment)\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"notes\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getAppointmentSchema } from '@/lib/validation';\r\n-import { createAppointment } from '@/lib/actions/appointment.actions';\r\n-import { useRouter } from 'next/navigation';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatientId: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst appointmentSchema = getAppointmentSchema(type);\r\n-\r\n-\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n-\t\tresolver: zodResolver(appointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n-\t\tconsole.log('here', type)\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tif (type === 'create' && patientId) {\r\n-\t\t\t\tconst appointmentData = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatient: patientId,\r\n-\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\treason: values.reason!,\r\n-\t\t\t\t\tnote: values.note,\r\n-\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t};\r\n-\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n-\t\t\t\tconsole.log(appointment)\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"notes\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getAppointmentSchema } from '@/lib/validation';\r\n-import { createAppointment } from '@/lib/actions/appointment.actions';\r\n-import { useRouter } from 'next/navigation';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatientId: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst appointmentSchema = getAppointmentSchema(type);\r\n-\r\n-\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n-\t\tresolver: zodResolver(appointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n-\t\tconsole.log('here', type)\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tif (type === 'create' && patientId) {\r\n-\t\t\t\tconst appointmentData = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatient: patientId,\r\n-\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\treason: values.reason!,\r\n-\t\t\t\t\tnote: values.note,\r\n-\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t};\r\n-\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n-\t\t\t\tconsole.log(appointment)\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"notes\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721687870171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,181 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getAppointmentSchema } from '@/lib/validation';\r\n+import { createAppointment } from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst appointmentSchema = getAppointmentSchema(type);\r\n+\r\n+\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n+\t\tresolver: zodResolver(appointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tconsole.log(patientId,type)\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason!,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t\tconsole.log(appointment)\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"notes\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721687921522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,189 +141,8 @@\n \t\t\t\t\t\t\t></CustomFormField>\r\n \t\t\t\t\t\t\t<CustomFormField\r\n \t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n \t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"notes\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getAppointmentSchema } from '@/lib/validation';\r\n-import { createAppointment } from '@/lib/actions/appointment.actions';\r\n-import { useRouter } from 'next/navigation';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatientId: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst appointmentSchema = getAppointmentSchema(type);\r\n-\r\n-\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n-\t\tresolver: zodResolver(appointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tconsole.log(patientId,type)\r\n-\t\t\tif (type === 'create' && patientId) {\r\n-\t\t\t\tconst appointmentData = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatient: patientId,\r\n-\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\treason: values.reason!,\r\n-\t\t\t\t\tnote: values.note,\r\n-\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t};\r\n-\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n-\t\t\t\tconsole.log(appointment)\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n \t\t\t\t\t\t\t\tname=\"note\"\r\n \t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n \t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n \t\t\t\t\t\t\t></CustomFormField>\r\n"
                },
                {
                    "date": 1721689359541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,185 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getAppointmentSchema } from '@/lib/validation';\r\n+import { createAppointment } from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst appointmentSchema = getAppointmentSchema(type);\r\n+\r\n+\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n+\t\tresolver: zodResolver(appointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason!,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t\tif (appointment) {\r\n+\t\t\t\t\tform.reset();\r\n+\t\t\t\t\trouter.push(\r\n+\t\t\t\t\t\t`/patients/${userId}/new-appointment/success?appointmentId=${appointment.id}`\r\n+\t\t\t\t\t);\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"note\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721689382145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n \t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n \t\t\t\tif (appointment) {\r\n \t\t\t\t\tform.reset();\r\n \t\t\t\t\trouter.push(\r\n-\t\t\t\t\t\t`/patients/${userId}/new-appointment/success?appointmentId=${appointment.id}`\r\n+\t\t\t\t\t\t`/patients/${userId}/new-appointment/success?appointmentId=${appointment.$id}`\r\n \t\t\t\t\t);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t} catch (e: any) {\r\n@@ -182,185 +182,4 @@\n \t);\r\n };\r\n \r\n export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getAppointmentSchema } from '@/lib/validation';\r\n-import { createAppointment } from '@/lib/actions/appointment.actions';\r\n-import { useRouter } from 'next/navigation';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatientId: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst appointmentSchema = getAppointmentSchema(type);\r\n-\r\n-\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n-\t\tresolver: zodResolver(appointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tconsole.log(patientId,type)\r\n-\t\t\tif (type === 'create' && patientId) {\r\n-\t\t\t\tconst appointmentData = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatient: patientId,\r\n-\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\treason: values.reason!,\r\n-\t\t\t\t\tnote: values.note,\r\n-\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t};\r\n-\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n-\t\t\t\tconsole.log(appointment)\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"note\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n"
                },
                {
                    "date": 1721689529668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,185 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getAppointmentSchema } from '@/lib/validation';\r\n+import { createAppointment } from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst appointmentSchema = getAppointmentSchema(type);\r\n+\r\n+\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n+\t\tresolver: zodResolver(appointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason!,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t\tif (appointment) {\r\n+\t\t\t\t\tform.reset();\r\n+\t\t\t\t\trouter.push(\r\n+\t\t\t\t\t\t`/patients/${userId}/new-appointment/success?appointmentId=${appointment.$id}`\r\n+\t\t\t\t\t);\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"note\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1722413192572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,206 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getAppointmentSchema } from '@/lib/validation';\r\n+import { createAppointment } from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\tappointment?: Appointment;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type, appointment }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst appointmentSchema = getAppointmentSchema(type);\r\n+\r\n+\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n+\t\tresolver: zodResolver(appointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason!,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t\tif (appointment) {\r\n+\t\t\t\t\tform.reset();\r\n+\t\t\t\t\trouter.push(\r\n+\t\t\t\t\t\t`/patients/${userId}/new-appointment/success?appointmentId=${appointment.$id}`\r\n+\t\t\t\t\t);\r\n+\t\t\t\t}\r\n+\t\t\t} else {\r\n+\t\t\t\tconst appointmentToUpdate = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tappointmentId: appointment?.$id!,\r\n+\t\t\t\t\tappointment: {\r\n+\t\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t\t\tcancellationReason: values.cancellationReason,\r\n+\t\t\t\t\t},\r\n+\t\t\t\t\ttype,\r\n+\t\t\t\t};\r\n+\r\n+\t\t\t\tconst updatedAppointment = await updateAppointment(appointmentToUpdate);\r\n+\r\n+\t\t\t\tif (updatedAppointment) {\r\n+\t\t\t\t\tsetOpen && setOpen(false);\r\n+\t\t\t\t\tform.reset();\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"note\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1722413470192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,12 +87,12 @@\n \t\t\t\t};\r\n \r\n \t\t\t\tconst updatedAppointment = await updateAppointment(appointmentToUpdate);\r\n \r\n-\t\t\t\tif (updatedAppointment) {\r\n-\t\t\t\t\tsetOpen && setOpen(false);\r\n-\t\t\t\t\tform.reset();\r\n-\t\t\t\t}\r\n+\t\t\t\t// if (updatedAppointment) {\r\n+\t\t\t\t// \tsetOpen && setOpen(false);\r\n+\t\t\t\t// \tform.reset();\r\n+\t\t\t\t// }\r\n \t\t\t}\r\n \t\t} catch (e: any) {\r\n \t\t\tconsole.log(e);\r\n \t\t} finally {\r\n@@ -203,374 +203,4 @@\n \t);\r\n };\r\n \r\n export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getAppointmentSchema } from '@/lib/validation';\r\n-import { createAppointment } from '@/lib/actions/appointment.actions';\r\n-import { useRouter } from 'next/navigation';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatientId: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst appointmentSchema = getAppointmentSchema(type);\r\n-\r\n-\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n-\t\tresolver: zodResolver(appointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tif (type === 'create' && patientId) {\r\n-\t\t\t\tconst appointmentData = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatient: patientId,\r\n-\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\treason: values.reason!,\r\n-\t\t\t\t\tnote: values.note,\r\n-\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t};\r\n-\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n-\t\t\t\tif (appointment) {\r\n-\t\t\t\t\tform.reset();\r\n-\t\t\t\t\trouter.push(\r\n-\t\t\t\t\t\t`/patients/${userId}/new-appointment/success?appointmentId=${appointment.$id}`\r\n-\t\t\t\t\t);\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"note\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getAppointmentSchema } from '@/lib/validation';\r\n-import { createAppointment } from '@/lib/actions/appointment.actions';\r\n-import { useRouter } from 'next/navigation';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatientId: string;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patientId, type }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst appointmentSchema = getAppointmentSchema(type);\r\n-\r\n-\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n-\t\tresolver: zodResolver(appointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tif (type === 'create' && patientId) {\r\n-\t\t\t\tconst appointmentData = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatient: patientId,\r\n-\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\treason: values.reason!,\r\n-\t\t\t\t\tnote: values.note,\r\n-\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t};\r\n-\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n-\t\t\t\tif (appointment) {\r\n-\t\t\t\t\tform.reset();\r\n-\t\t\t\t\trouter.push(\r\n-\t\t\t\t\t\t`/patients/${userId}/new-appointment/success?appointmentId=${appointment.$id}`\r\n-\t\t\t\t\t);\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"note\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n"
                },
                {
                    "date": 1722453119052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,206 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getAppointmentSchema } from '@/lib/validation';\r\n+import { createAppointment, updateAppointment } from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\tappointment?: Appointment;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type, appointment }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst appointmentSchema = getAppointmentSchema(type);\r\n+\r\n+\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n+\t\tresolver: zodResolver(appointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason!,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t\tif (appointment) {\r\n+\t\t\t\t\tform.reset();\r\n+\t\t\t\t\trouter.push(\r\n+\t\t\t\t\t\t`/patients/${userId}/new-appointment/success?appointmentId=${appointment.$id}`\r\n+\t\t\t\t\t);\r\n+\t\t\t\t}\r\n+\t\t\t} else {\r\n+\t\t\t\tconst appointmentToUpdate = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tappointmentId: appointment?.$id!,\r\n+\t\t\t\t\tappointment: {\r\n+\t\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t\t\tcancellationReason: values.cancellationReason,\r\n+\t\t\t\t\t},\r\n+\t\t\t\t\ttype,\r\n+\t\t\t\t};\r\n+\r\n+\t\t\t\tconst updatedAppointment = await updateAppointment(appointmentToUpdate);\r\n+\r\n+\t\t\t\t// if (updatedAppointment) {\r\n+\t\t\t\t// \tsetOpen && setOpen(false);\r\n+\t\t\t\t// \tform.reset();\r\n+\t\t\t\t// }\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"note\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1722453161798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,206 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { useState } from 'react';\r\n+import { getAppointmentSchema } from '@/lib/validation';\r\n+import { createAppointment, updateAppointment } from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\tappointment?: Appointment;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+}\r\n+\r\n+const AppointmentForm = ({ userId, patientId, type, appointment }: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst appointmentSchema = getAppointmentSchema(type);\r\n+\r\n+\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n+\t\tresolver: zodResolver(appointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason!,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t\tif (appointment) {\r\n+\t\t\t\t\tform.reset();\r\n+\t\t\t\t\trouter.push(\r\n+\t\t\t\t\t\t`/patients/${userId}/new-appointment/success?appointmentId=${appointment.$id}`\r\n+\t\t\t\t\t);\r\n+\t\t\t\t}\r\n+\t\t\t} else {\r\n+\t\t\t\tconst appointmentToUpdate = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tappointmentId: appointment?.$id!,\r\n+\t\t\t\t\tappointment: {\r\n+\t\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t\t\tcancellationReason: values.cancellationReason,\r\n+\t\t\t\t\t},\r\n+\t\t\t\t\ttype,\r\n+\t\t\t\t};\r\n+\r\n+\t\t\t\tconst updatedAppointment = await updateAppointment(appointmentToUpdate);\r\n+\r\n+\t\t\t\tif (updatedAppointment) {\r\n+\t\t\t\t\tsetOpen && setOpen(false);\r\n+\t\t\t\t\tform.reset();\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t</section>\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"note\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1722453238316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { z } from 'zod';\r\n import { Form } from '@/components/ui/form';\r\n import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n+import { Dispatch, SetStateAction, useState } from 'react';\r\n import { getAppointmentSchema } from '@/lib/validation';\r\n import { createAppointment, updateAppointment } from '@/lib/actions/appointment.actions';\r\n import { useRouter } from 'next/navigation';\r\n import { SelectItem } from '@/components/ui/select';\r\n@@ -18,8 +18,9 @@\n \tuserId: string;\r\n \tpatientId: string;\r\n \tappointment?: Appointment;\r\n \ttype: 'create' | 'cancel' | 'schedule';\r\n+\tsetOpen?: Dispatch<SetStateAction<boolean>>;\r\n }\r\n \r\n const AppointmentForm = ({ userId, patientId, type, appointment }: Props) => {\r\n \tconst router = useRouter();\r\n@@ -203,416 +204,4 @@\n \t);\r\n };\r\n \r\n export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getAppointmentSchema } from '@/lib/validation';\r\n-import { createAppointment, updateAppointment } from '@/lib/actions/appointment.actions';\r\n-import { useRouter } from 'next/navigation';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-import { Appointment } from '@/types/appwrite.types';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatientId: string;\r\n-\tappointment?: Appointment;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patientId, type, appointment }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst appointmentSchema = getAppointmentSchema(type);\r\n-\r\n-\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n-\t\tresolver: zodResolver(appointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tif (type === 'create' && patientId) {\r\n-\t\t\t\tconst appointmentData = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatient: patientId,\r\n-\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\treason: values.reason!,\r\n-\t\t\t\t\tnote: values.note,\r\n-\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t};\r\n-\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n-\t\t\t\tif (appointment) {\r\n-\t\t\t\t\tform.reset();\r\n-\t\t\t\t\trouter.push(\r\n-\t\t\t\t\t\t`/patients/${userId}/new-appointment/success?appointmentId=${appointment.$id}`\r\n-\t\t\t\t\t);\r\n-\t\t\t\t}\r\n-\t\t\t} else {\r\n-\t\t\t\tconst appointmentToUpdate = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tappointmentId: appointment?.$id!,\r\n-\t\t\t\t\tappointment: {\r\n-\t\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t\t\tcancellationReason: values.cancellationReason,\r\n-\t\t\t\t\t},\r\n-\t\t\t\t\ttype,\r\n-\t\t\t\t};\r\n-\r\n-\t\t\t\tconst updatedAppointment = await updateAppointment(appointmentToUpdate);\r\n-\r\n-\t\t\t\t// if (updatedAppointment) {\r\n-\t\t\t\t// \tsetOpen && setOpen(false);\r\n-\t\t\t\t// \tform.reset();\r\n-\t\t\t\t// }\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"note\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n-'use client';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { z } from 'zod';\r\n-import { Form } from '@/components/ui/form';\r\n-import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n-import SubmitButton from '../SubmitButton';\r\n-import { useState } from 'react';\r\n-import { getAppointmentSchema } from '@/lib/validation';\r\n-import { createAppointment } from '@/lib/actions/appointment.actions';\r\n-import { useRouter } from 'next/navigation';\r\n-import { SelectItem } from '@/components/ui/select';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-import { Appointment } from '@/types/appwrite.types';\r\n-\r\n-interface Props {\r\n-\tuserId: string;\r\n-\tpatientId: string;\r\n-\tappointment?: Appointment;\r\n-\ttype: 'create' | 'cancel' | 'schedule';\r\n-}\r\n-\r\n-const AppointmentForm = ({ userId, patientId, type, appointment }: Props) => {\r\n-\tconst router = useRouter();\r\n-\tconst [isLoading, setIsLoading] = useState(false);\r\n-\r\n-\tconst appointmentSchema = getAppointmentSchema(type);\r\n-\r\n-\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n-\t\tresolver: zodResolver(appointmentSchema),\r\n-\t\tdefaultValues: {\r\n-\t\t\tprimaryPhysician: '',\r\n-\t\t\tcancellationReason: '',\r\n-\t\t\tschedule: new Date(),\r\n-\t\t\treason: '',\r\n-\t\t\tnote: '',\r\n-\t\t},\r\n-\t});\r\n-\r\n-\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n-\t\tsetIsLoading(true);\r\n-\r\n-\t\tlet status;\r\n-\r\n-\t\tswitch (type) {\r\n-\t\t\tcase 'cancel':\r\n-\t\t\t\tstatus = 'cancelled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase 'schedule':\r\n-\t\t\t\tstatus = 'scheduled';\r\n-\t\t\t\tbreak;\r\n-\t\t\tdefault:\r\n-\t\t\t\tstatus = 'pending';\r\n-\t\t\t\tbreak;\r\n-\t\t}\r\n-\r\n-\t\ttry {\r\n-\t\t\tif (type === 'create' && patientId) {\r\n-\t\t\t\tconst appointmentData = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tpatient: patientId,\r\n-\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\treason: values.reason!,\r\n-\t\t\t\t\tnote: values.note,\r\n-\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t};\r\n-\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n-\t\t\t\tif (appointment) {\r\n-\t\t\t\t\tform.reset();\r\n-\t\t\t\t\trouter.push(\r\n-\t\t\t\t\t\t`/patients/${userId}/new-appointment/success?appointmentId=${appointment.$id}`\r\n-\t\t\t\t\t);\r\n-\t\t\t\t}\r\n-\t\t\t} else {\r\n-\t\t\t\tconst appointmentToUpdate = {\r\n-\t\t\t\t\tuserId,\r\n-\t\t\t\t\tappointmentId: appointment?.$id!,\r\n-\t\t\t\t\tappointment: {\r\n-\t\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n-\t\t\t\t\t\tschedule: new Date(values.schedule),\r\n-\t\t\t\t\t\tstatus: status as Status,\r\n-\t\t\t\t\t\tcancellationReason: values.cancellationReason,\r\n-\t\t\t\t\t},\r\n-\t\t\t\t\ttype,\r\n-\t\t\t\t};\r\n-\r\n-\t\t\t\tconst updatedAppointment = await updateAppointment(appointmentToUpdate);\r\n-\r\n-\t\t\t\t// if (updatedAppointment) {\r\n-\t\t\t\t// \tsetOpen && setOpen(false);\r\n-\t\t\t\t// \tform.reset();\r\n-\t\t\t\t// }\r\n-\t\t\t}\r\n-\t\t} catch (e: any) {\r\n-\t\t\tconsole.log(e);\r\n-\t\t} finally {\r\n-\t\t\tsetIsLoading(false);\r\n-\t\t}\r\n-\t}\r\n-\tlet buttonLabel;\r\n-\r\n-\tswitch (type) {\r\n-\t\tcase 'cancel':\r\n-\t\t\tbuttonLabel = 'Cancelar cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'create':\r\n-\t\t\tbuttonLabel = 'Crear cita';\r\n-\t\t\tbreak;\r\n-\t\tcase 'schedule':\r\n-\t\t\tbuttonLabel = 'Agendar cita';\r\n-\t\t\tbreak;\r\n-\t}\r\n-\r\n-\treturn (\r\n-\t\t<Form {...form}>\r\n-\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n-\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n-\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n-\t\t\t\t\t<p className=\"text-dark-700\">\r\n-\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t</section>\r\n-\r\n-\t\t\t\t{type !== 'cancel' && (\r\n-\t\t\t\t\t<>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n-\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n-\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n-\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n-\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n-\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n-\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n-\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</SelectItem>\r\n-\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t</CustomFormField>\r\n-\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n-\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\tname=\"schedule\"\r\n-\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n-\t\t\t\t\t\t\tshowTimeSelect\r\n-\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n-\t\t\t\t\t\t></CustomFormField>\r\n-\r\n-\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"reason\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\t\t\tname=\"note\"\r\n-\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n-\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n-\t\t\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t{type === 'cancel' && (\r\n-\t\t\t\t\t<CustomFormField\r\n-\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n-\t\t\t\t\t\tcontrol={form.control}\r\n-\t\t\t\t\t\tname=\"cancellationReason\"\r\n-\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n-\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n-\t\t\t\t\t></CustomFormField>\r\n-\t\t\t\t)}\r\n-\r\n-\t\t\t\t<SubmitButton\r\n-\t\t\t\t\tclassName={`${\r\n-\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n-\t\t\t\t\t} w-full`}\r\n-\t\t\t\t\tisLoading={isLoading}\r\n-\t\t\t\t>\r\n-\t\t\t\t\t{buttonLabel}\r\n-\t\t\t\t</SubmitButton>\r\n-\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n-\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n-\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n-\t\t\t\t\t</p>\r\n-\t\t\t\t)}\r\n-\t\t\t</form>\r\n-\t\t</Form>\r\n-\t);\r\n-};\r\n-\r\n-export default AppointmentForm;\r\n"
                },
                {
                    "date": 1722453274126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n \ttype: 'create' | 'cancel' | 'schedule';\r\n \tsetOpen?: Dispatch<SetStateAction<boolean>>;\r\n }\r\n \r\n-const AppointmentForm = ({ userId, patientId, type, appointment }: Props) => {\r\n+const AppointmentForm = ({ userId, patientId, type, appointment, setOpen }: Props) => {\r\n \tconst router = useRouter();\r\n \tconst [isLoading, setIsLoading] = useState(false);\r\n \r\n \tconst appointmentSchema = getAppointmentSchema(type);\r\n"
                },
                {
                    "date": 1722456855539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,218 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { Dispatch, SetStateAction, useState } from 'react';\r\n+import { getAppointmentSchema } from '@/lib/validation';\r\n+import {\r\n+\tcreateAppointment,\r\n+\tupdateAppointment,\r\n+} from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\tappointment?: Appointment;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+\tsetOpen?: Dispatch<SetStateAction<boolean>>;\r\n+}\r\n+\r\n+const AppointmentForm = ({\r\n+\tuserId,\r\n+\tpatientId,\r\n+\ttype,\r\n+\tappointment,\r\n+\tsetOpen,\r\n+}: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst appointmentSchema = getAppointmentSchema(type);\r\n+\r\n+\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n+\t\tresolver: zodResolver(appointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: '',\r\n+\t\t\tcancellationReason: '',\r\n+\t\t\tschedule: new Date(),\r\n+\t\t\treason: '',\r\n+\t\t\tnote: '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason!,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t\tif (appointment) {\r\n+\t\t\t\t\tform.reset();\r\n+\t\t\t\t\trouter.push(\r\n+\t\t\t\t\t\t`/patients/${userId}/new-appointment/success?appointmentId=${appointment.$id}`\r\n+\t\t\t\t\t);\r\n+\t\t\t\t}\r\n+\t\t\t} else {\r\n+\t\t\t\tconst appointmentToUpdate = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tappointmentId: appointment?.$id!,\r\n+\t\t\t\t\tappointment: {\r\n+\t\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t\t\tcancellationReason: values.cancellationReason,\r\n+\t\t\t\t\t},\r\n+\t\t\t\t\ttype,\r\n+\t\t\t\t};\r\n+\r\n+\t\t\t\tconst updatedAppointment = await updateAppointment(appointmentToUpdate);\r\n+\r\n+\t\t\t\tif (updatedAppointment) {\r\n+\t\t\t\t\tsetOpen && setOpen(false);\r\n+\t\t\t\t\tform.reset();\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t{type === 'create' && (\r\n+\t\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t\t</p>\r\n+\t\t\t\t\t</section>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"note\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                },
                {
                    "date": 1722458418212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,218 @@\n+'use client';\r\n+import { zodResolver } from '@hookform/resolvers/zod';\r\n+import { useForm } from 'react-hook-form';\r\n+import { z } from 'zod';\r\n+import { Form } from '@/components/ui/form';\r\n+import CustomFormField, { FormFieldType } from '../CustomFormField';\r\n+import SubmitButton from '../SubmitButton';\r\n+import { Dispatch, SetStateAction, useState } from 'react';\r\n+import { getAppointmentSchema } from '@/lib/validation';\r\n+import {\r\n+\tcreateAppointment,\r\n+\tupdateAppointment,\r\n+} from '@/lib/actions/appointment.actions';\r\n+import { useRouter } from 'next/navigation';\r\n+import { SelectItem } from '@/components/ui/select';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+\r\n+interface Props {\r\n+\tuserId: string;\r\n+\tpatientId: string;\r\n+\tappointment?: Appointment;\r\n+\ttype: 'create' | 'cancel' | 'schedule';\r\n+\tsetOpen?: Dispatch<SetStateAction<boolean>>;\r\n+}\r\n+\r\n+const AppointmentForm = ({\r\n+\tuserId,\r\n+\tpatientId,\r\n+\ttype,\r\n+\tappointment,\r\n+\tsetOpen,\r\n+}: Props) => {\r\n+\tconst router = useRouter();\r\n+\tconst [isLoading, setIsLoading] = useState(false);\r\n+\r\n+\tconst appointmentSchema = getAppointmentSchema(type);\r\n+\r\n+\tconst form = useForm<z.infer<typeof appointmentSchema>>({\r\n+\t\tresolver: zodResolver(appointmentSchema),\r\n+\t\tdefaultValues: {\r\n+\t\t\tprimaryPhysician: appointment && appointment.primaryPhysician,\r\n+\t\t\tcancellationReason: appointment?.cancellationReason || '',\r\n+\t\t\tschedule: appointment ? new Date(appointment.schedule) : new Date(),\r\n+\t\t\treason: appointment ? appointment.reason : '',\r\n+\t\t\tnote: appointment ? appointment.note : '',\r\n+\t\t},\r\n+\t});\r\n+\r\n+\tasync function onSubmit(values: z.infer<typeof appointmentSchema>) {\r\n+\t\tsetIsLoading(true);\r\n+\r\n+\t\tlet status;\r\n+\r\n+\t\tswitch (type) {\r\n+\t\t\tcase 'cancel':\r\n+\t\t\t\tstatus = 'cancelled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tcase 'schedule':\r\n+\t\t\t\tstatus = 'scheduled';\r\n+\t\t\t\tbreak;\r\n+\t\t\tdefault:\r\n+\t\t\t\tstatus = 'pending';\r\n+\t\t\t\tbreak;\r\n+\t\t}\r\n+\r\n+\t\ttry {\r\n+\t\t\tif (type === 'create' && patientId) {\r\n+\t\t\t\tconst appointmentData = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tpatient: patientId,\r\n+\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\treason: values.reason!,\r\n+\t\t\t\t\tnote: values.note,\r\n+\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t};\r\n+\t\t\t\tconst appointment = await createAppointment(appointmentData);\r\n+\t\t\t\tif (appointment) {\r\n+\t\t\t\t\tform.reset();\r\n+\t\t\t\t\trouter.push(\r\n+\t\t\t\t\t\t`/patients/${userId}/new-appointment/success?appointmentId=${appointment.$id}`\r\n+\t\t\t\t\t);\r\n+\t\t\t\t}\r\n+\t\t\t} else {\r\n+\t\t\t\tconst appointmentToUpdate = {\r\n+\t\t\t\t\tuserId,\r\n+\t\t\t\t\tappointmentId: appointment?.$id!,\r\n+\t\t\t\t\tappointment: {\r\n+\t\t\t\t\t\tprimaryPhysician: values.primaryPhysician,\r\n+\t\t\t\t\t\tschedule: new Date(values.schedule),\r\n+\t\t\t\t\t\tstatus: status as Status,\r\n+\t\t\t\t\t\tcancellationReason: values.cancellationReason,\r\n+\t\t\t\t\t},\r\n+\t\t\t\t\ttype,\r\n+\t\t\t\t};\r\n+\r\n+\t\t\t\tconst updatedAppointment = await updateAppointment(appointmentToUpdate);\r\n+\r\n+\t\t\t\tif (updatedAppointment) {\r\n+\t\t\t\t\tsetOpen && setOpen(false);\r\n+\t\t\t\t\tform.reset();\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t} catch (e: any) {\r\n+\t\t\tconsole.log(e);\r\n+\t\t} finally {\r\n+\t\t\tsetIsLoading(false);\r\n+\t\t}\r\n+\t}\r\n+\tlet buttonLabel;\r\n+\r\n+\tswitch (type) {\r\n+\t\tcase 'cancel':\r\n+\t\t\tbuttonLabel = 'Cancelar cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'create':\r\n+\t\t\tbuttonLabel = 'Crear cita';\r\n+\t\t\tbreak;\r\n+\t\tcase 'schedule':\r\n+\t\t\tbuttonLabel = 'Agendar cita';\r\n+\t\t\tbreak;\r\n+\t}\r\n+\r\n+\treturn (\r\n+\t\t<Form {...form}>\r\n+\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n+\t\t\t\t{type === 'create' && (\r\n+\t\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n+\t\t\t\t\t\t<h1 className=\"header\">Nueva cita!</h1>\r\n+\t\t\t\t\t\t<p className=\"text-dark-700\">\r\n+\t\t\t\t\t\t\tSolicita una nueva cita en 10 segundos\r\n+\t\t\t\t\t\t</p>\r\n+\t\t\t\t\t</section>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type !== 'cancel' && (\r\n+\t\t\t\t\t<>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.SELECT}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"primaryPhysician\"\r\n+\t\t\t\t\t\t\tlabel=\"Médico primario\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Seleccione un médico\"\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{Doctors.map((doctor, i) => (\r\n+\t\t\t\t\t\t\t\t<SelectItem key={doctor.name + i} value={doctor.name}>\r\n+\t\t\t\t\t\t\t\t\t<div className=\"flex cursor-pointer items-center gap-2\">\r\n+\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\tsrc={doctor.image}\r\n+\t\t\t\t\t\t\t\t\t\t\twidth={32}\r\n+\t\t\t\t\t\t\t\t\t\t\theight={32}\r\n+\t\t\t\t\t\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-full border border-dark-500\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t<p>{doctor.name}</p>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</SelectItem>\r\n+\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t</CustomFormField>\r\n+\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\tfieldType={FormFieldType.DATEPICKER}\r\n+\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\tname=\"schedule\"\r\n+\t\t\t\t\t\t\tplaceholder=\"Fecha y Hora de la cita\"\r\n+\t\t\t\t\t\t\tshowTimeSelect\r\n+\t\t\t\t\t\t\tdateFormat=\"MM/dd/yyyy - h:mm aa\"\r\n+\t\t\t\t\t\t></CustomFormField>\r\n+\r\n+\t\t\t\t\t\t<div className=\"flex flex-col gap-6 xl:flex-row\">\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"reason\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Motivo de la cita\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Dolor de cabeza intenso\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\t\t\tname=\"note\"\r\n+\t\t\t\t\t\t\t\tlabel=\"Notas\"\r\n+\t\t\t\t\t\t\t\tplaceholder='Ej. \"Tomar medicamento cada 8 horas\"'\r\n+\t\t\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t{type === 'cancel' && (\r\n+\t\t\t\t\t<CustomFormField\r\n+\t\t\t\t\t\tfieldType={FormFieldType.TEXTAREA}\r\n+\t\t\t\t\t\tcontrol={form.control}\r\n+\t\t\t\t\t\tname=\"cancellationReason\"\r\n+\t\t\t\t\t\tlabel=\"Motivo para cancelar la cita\"\r\n+\t\t\t\t\t\tplaceholder='Ej. \"No puedo asistir\"'\r\n+\t\t\t\t\t></CustomFormField>\r\n+\t\t\t\t)}\r\n+\r\n+\t\t\t\t<SubmitButton\r\n+\t\t\t\t\tclassName={`${\r\n+\t\t\t\t\t\ttype === 'cancel' ? 'shad-danger-btn' : 'shad-primary-btn'\r\n+\t\t\t\t\t} w-full`}\r\n+\t\t\t\t\tisLoading={isLoading}\r\n+\t\t\t\t>\r\n+\t\t\t\t\t{buttonLabel}\r\n+\t\t\t\t</SubmitButton>\r\n+\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n+\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n+\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n+\t\t\t\t\t</p>\r\n+\t\t\t\t)}\r\n+\t\t\t</form>\r\n+\t\t</Form>\r\n+\t);\r\n+};\r\n+\r\n+export default AppointmentForm;\r\n"
                }
            ],
            "date": 1721673954144,
            "name": "Commit-0",
            "content": "'use client';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { useForm } from 'react-hook-form';\r\nimport { z } from 'zod';\r\nimport { Form } from '@/components/ui/form';\r\nimport CustomFormField, { FormFieldType } from '../CustomFormField';\r\nimport SubmitButton from '../SubmitButton';\r\nimport { useState } from 'react';\r\nimport { userFormValidation } from '@/lib/validation';\r\nimport { useRouter } from 'next/navigation';\r\nimport { createUser } from '@/lib/actions/patient.actions';\r\n\r\nconst AppointmentForm = () => {\r\n\tconst router = useRouter();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst form = useForm<z.infer<typeof userFormValidation>>({\r\n\t\tresolver: zodResolver(userFormValidation),\r\n\t\tdefaultValues: {\r\n\t\t\tname: '',\r\n\t\t\temail: '',\r\n\t\t\tphone: '',\r\n\t\t},\r\n\t});\r\n\r\n\tasync function onSubmit({\r\n\t\tname,\r\n\t\temail,\r\n\t\tphone,\r\n\t}: z.infer<typeof userFormValidation>) {\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst userData = { name, email, phone };\r\n\t\t\tconst res = await createUser(userData);\r\n\r\n\t\t\tif (!res?.error) {\r\n\t\t\t\trouter.push(`/patients/${res?.data.$id}/register`);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tform.setError('root.serverError', {\r\n\t\t\t\t\tmessage:\r\n\t\t\t\t\t\t'Ya existe un usuario con la misma identificación, correo electrónico o teléfono en este proyecto.',\r\n\t\t\t\t\ttype: '400',\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(form.formState.errors?.root?.serverError.type);\r\n\t\t\t}\r\n\t\t} catch (e: any) {\r\n\t\t\tconsole.log(e);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<Form {...form}>\r\n\t\t\t<form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 flex-1\">\r\n\t\t\t\t<section className=\"mb-12 space-y-4\">\r\n\t\t\t\t\t<h1 className=\"header\">Hola!</h1>\r\n\t\t\t\t\t<p className=\"text-dark-700\">Programa tu primera cita</p>\r\n\t\t\t\t</section>\r\n\t\t\t\t<CustomFormField\r\n\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n\t\t\t\t\tcontrol={form.control}\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\tlabel=\"Nombre completo\"\r\n\t\t\t\t\tplaceholder=\"Ej. Juan Pérez\"\r\n\t\t\t\t\ticonSrc=\"/assets/icons/user.svg\"\r\n\t\t\t\t\ticonAlt=\"user\"\r\n\t\t\t\t/>\r\n\t\t\t\t<CustomFormField\r\n\t\t\t\t\tfieldType={FormFieldType.INPUT}\r\n\t\t\t\t\tcontrol={form.control}\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tlabel=\"Correo\"\r\n\t\t\t\t\tplaceholder=\"drsamame@gmail.com\"\r\n\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n\t\t\t\t\ticonAlt=\"email\"\r\n\t\t\t\t/>\r\n\t\t\t\t<CustomFormField\r\n\t\t\t\t\tfieldType={FormFieldType.PHONE}\r\n\t\t\t\t\tcontrol={form.control}\r\n\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\tlabel=\"Celular\"\r\n\t\t\t\t\tplaceholder=\"955061182\"\r\n\t\t\t\t\ticonSrc=\"/assets/icons/email.svg\"\r\n\t\t\t\t\ticonAlt=\"email\"\r\n\t\t\t\t/>\r\n\t\t\t\t<SubmitButton isLoading={isLoading}>Empezar</SubmitButton>\r\n\t\t\t\t{form.formState.errors?.root?.serverError.type == 400 && (\r\n\t\t\t\t\t<p className=\"text-sm font-medium text-destructive shad-error\">\r\n\t\t\t\t\t\t{form.formState.errors?.root?.serverError.message}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\t\t\t</form>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default AppointmentForm;\r\n"
        }
    ]
}