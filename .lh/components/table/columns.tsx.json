{
    "sourceFile": "components/table/columns.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1722291574616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722293521441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,27 @@\n+'use client';\r\n+\r\n+import { ColumnDef } from '@tanstack/react-table';\r\n+\r\n+// This type is used to define the shape of our data.\r\n+// You can use a Zod schema here if you want.\r\n+export type Payment = {\r\n+\tid: string;\r\n+\tamount: number;\r\n+\tstatus: 'pending' | 'processing' | 'success' | 'failed';\r\n+\temail: string;\r\n+};\r\n+\r\n+export const columns: ColumnDef<Payment>[] = [\r\n+\t{\r\n+\t\taccessorKey: 'status',\r\n+\t\theader: 'Status',\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'email',\r\n+\t\theader: 'Email',\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'amount',\r\n+\t\theader: 'Amount',\r\n+\t},\r\n+];\r\n"
                },
                {
                    "date": 1722295222348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,7 @@\n \t\theader: 'Email',\r\n \t},\r\n \t{\r\n \t\taccessorKey: 'amount',\r\n-\t\theader: 'Amount',\r\n+        header: () => <div className=\"text-right\">Amount</div>,\r\n \t},\r\n ];\r\n"
                },
                {
                    "date": 1722295234189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,16 +21,16 @@\n \t\theader: 'Email',\r\n \t},\r\n \t{\r\n \t\taccessorKey: 'amount',\r\n-        header: () => <div className=\"text-right\">Amount</div>,\r\n+\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n+\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n+\t\t\t\tstyle: 'currency',\r\n+\t\t\t\tcurrency: 'USD',\r\n+\t\t\t}).format(amount);\r\n+\r\n+\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n+\t\t},\r\n \t},\r\n\\ No newline at end of file\n ];\r\n-import React from 'react'\r\n-\r\n-function columns() {\r\n-  return (\r\n-    <div>columns</div>\r\n-  )\r\n-}\r\n-\r\n-export default columns\n"
                },
                {
                    "date": 1722295816008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,19 @@\n 'use client';\r\n \r\n import { ColumnDef } from '@tanstack/react-table';\r\n+import { MoreHorizontal } from 'lucide-react';\r\n \r\n-// This type is used to define the shape of our data.\r\n-// You can use a Zod schema here if you want.\r\n+import { Button } from '@/components/ui/button';\r\n+import {\r\n+\tDropdownMenu,\r\n+\tDropdownMenuContent,\r\n+\tDropdownMenuItem,\r\n+\tDropdownMenuLabel,\r\n+\tDropdownMenuSeparator,\r\n+\tDropdownMenuTrigger,\r\n+} from '@/components/ui/dropdown-menu';\r\n+\r\n export type Payment = {\r\n \tid: string;\r\n \tamount: number;\r\n \tstatus: 'pending' | 'processing' | 'success' | 'failed';\r\n@@ -32,5 +41,33 @@\n \r\n \t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n \t\t},\r\n \t},\r\n+\t{\r\n+\t\tid: 'actions',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst payment = row.original;\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<DropdownMenu>\r\n+\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n+\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n+\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n+\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n+\t\t\t\t\t\t</Button>\r\n+\t\t\t\t\t</DropdownMenuTrigger>\r\n+\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n+\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n+\t\t\t\t\t\t<DropdownMenuItem\r\n+\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\tCopy payment ID\r\n+\t\t\t\t\t\t</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuSeparator />\r\n+\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n+\t\t\t\t\t</DropdownMenuContent>\r\n+\t\t\t\t</DropdownMenu>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n ];\r\n"
                },
                {
                    "date": 1722379008080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+'use client';\r\n+\r\n+import { ColumnDef } from '@tanstack/react-table';\r\n+import { MoreHorizontal } from 'lucide-react';\r\n+\r\n+import { Button } from '@/components/ui/button';\r\n+import {\r\n+\tDropdownMenu,\r\n+\tDropdownMenuContent,\r\n+\tDropdownMenuItem,\r\n+\tDropdownMenuLabel,\r\n+\tDropdownMenuSeparator,\r\n+\tDropdownMenuTrigger,\r\n+} from '@/components/ui/dropdown-menu';\r\n+\r\n+export type Payment = {\r\n+\tid: string;\r\n+\tamount: number;\r\n+\tstatus: 'pending' | 'processing' | 'success' | 'failed';\r\n+\temail: string;\r\n+};\r\n+\r\n+export const columns: ColumnDef<Payment>[] = [\r\n+\t{\r\n+\t\theader: 'ID',\r\n+\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'status',\r\n+\t\theader: 'Status',\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'email',\r\n+\t\theader: 'Email',\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'amount',\r\n+\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n+\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n+\t\t\t\tstyle: 'currency',\r\n+\t\t\t\tcurrency: 'USD',\r\n+\t\t\t}).format(amount);\r\n+\r\n+\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\tid: 'actions',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst payment = row.original;\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<DropdownMenu>\r\n+\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n+\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n+\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n+\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n+\t\t\t\t\t\t</Button>\r\n+\t\t\t\t\t</DropdownMenuTrigger>\r\n+\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n+\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n+\t\t\t\t\t\t<DropdownMenuItem\r\n+\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\tCopy payment ID\r\n+\t\t\t\t\t\t</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuSeparator />\r\n+\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n+\t\t\t\t\t</DropdownMenuContent>\r\n+\t\t\t\t</DropdownMenu>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+];\r\n"
                },
                {
                    "date": 1722379737784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,16 @@\n \t\theader: 'ID',\r\n \t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n \t},\r\n \t{\r\n+\t\taccessorKey: 'patient',\r\n+\t\theader: 'Paciente',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn <p className='text-14-medium'>{appointment.patient.name}</p>\r\n+\t\t}\r\n+\t},\r\n+\t{\r\n \t\taccessorKey: 'status',\r\n \t\theader: 'Status',\r\n \t},\r\n \t{\r\n"
                },
                {
                    "date": 1722379766371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+'use client';\r\n+\r\n+import { ColumnDef } from '@tanstack/react-table';\r\n+import { MoreHorizontal } from 'lucide-react';\r\n+\r\n+import { Button } from '@/components/ui/button';\r\n+import {\r\n+\tDropdownMenu,\r\n+\tDropdownMenuContent,\r\n+\tDropdownMenuItem,\r\n+\tDropdownMenuLabel,\r\n+\tDropdownMenuSeparator,\r\n+\tDropdownMenuTrigger,\r\n+} from '@/components/ui/dropdown-menu';\r\n+\r\n+export type Payment = {\r\n+\tid: string;\r\n+\tamount: number;\r\n+\tstatus: 'pending' | 'processing' | 'success' | 'failed';\r\n+\temail: string;\r\n+};\r\n+\r\n+export const columns: ColumnDef<Payment>[] = [\r\n+\t{\r\n+\t\theader: 'ID',\r\n+\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'patient',\r\n+\t\theader: 'Paciente',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn <p className='text-14-medium'>{appointment.patient?.name}</p>\r\n+\t\t}\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'status',\r\n+\t\theader: 'Status',\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'email',\r\n+\t\theader: 'Email',\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'amount',\r\n+\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n+\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n+\t\t\t\tstyle: 'currency',\r\n+\t\t\t\tcurrency: 'USD',\r\n+\t\t\t}).format(amount);\r\n+\r\n+\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\tid: 'actions',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst payment = row.original;\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<DropdownMenu>\r\n+\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n+\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n+\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n+\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n+\t\t\t\t\t\t</Button>\r\n+\t\t\t\t\t</DropdownMenuTrigger>\r\n+\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n+\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n+\t\t\t\t\t\t<DropdownMenuItem\r\n+\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\tCopy payment ID\r\n+\t\t\t\t\t\t</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuSeparator />\r\n+\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n+\t\t\t\t\t</DropdownMenuContent>\r\n+\t\t\t\t</DropdownMenu>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+];\r\n"
                },
                {
                    "date": 1722379793309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+'use client';\r\n+\r\n+import { ColumnDef } from '@tanstack/react-table';\r\n+import { MoreHorizontal } from 'lucide-react';\r\n+\r\n+import { Button } from '@/components/ui/button';\r\n+import {\r\n+\tDropdownMenu,\r\n+\tDropdownMenuContent,\r\n+\tDropdownMenuItem,\r\n+\tDropdownMenuLabel,\r\n+\tDropdownMenuSeparator,\r\n+\tDropdownMenuTrigger,\r\n+} from '@/components/ui/dropdown-menu';\r\n+\r\n+export type Payment = {\r\n+\tid: string;\r\n+\tamount: number;\r\n+\tstatus: 'pending' | 'processing' | 'success' | 'failed';\r\n+\temail: string;\r\n+};\r\n+\r\n+export const columns: ColumnDef<Payment>[] = [\r\n+\t{\r\n+\t\theader: 'ID',\r\n+\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'patient',\r\n+\t\theader: 'Paciente',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn <p className='text-14-medium'>{row.original.patient?.name}</p>\r\n+\t\t}\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'status',\r\n+\t\theader: 'Status',\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'email',\r\n+\t\theader: 'Email',\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'amount',\r\n+\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n+\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n+\t\t\t\tstyle: 'currency',\r\n+\t\t\t\tcurrency: 'USD',\r\n+\t\t\t}).format(amount);\r\n+\r\n+\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\tid: 'actions',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst payment = row.original;\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<DropdownMenu>\r\n+\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n+\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n+\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n+\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n+\t\t\t\t\t\t</Button>\r\n+\t\t\t\t\t</DropdownMenuTrigger>\r\n+\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n+\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n+\t\t\t\t\t\t<DropdownMenuItem\r\n+\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\tCopy payment ID\r\n+\t\t\t\t\t\t</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuSeparator />\r\n+\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n+\t\t\t\t\t</DropdownMenuContent>\r\n+\t\t\t\t</DropdownMenu>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+];\r\n"
                },
                {
                    "date": 1722379988800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+'use client';\r\n+\r\n+import { ColumnDef } from '@tanstack/react-table';\r\n+import { MoreHorizontal } from 'lucide-react';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+import { Button } from '@/components/ui/button';\r\n+import {\r\n+\tDropdownMenu,\r\n+\tDropdownMenuContent,\r\n+\tDropdownMenuItem,\r\n+\tDropdownMenuLabel,\r\n+\tDropdownMenuSeparator,\r\n+\tDropdownMenuTrigger,\r\n+} from '@/components/ui/dropdown-menu';\r\n+\r\n+export const columns: ColumnDef<Appointment>[] = [\r\n+\t{\r\n+\t\theader: 'ID',\r\n+\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'patient',\r\n+\t\theader: 'Paciente',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'status',\r\n+\t\theader: 'Status',\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'email',\r\n+\t\theader: 'Email',\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'amount',\r\n+\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n+\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n+\t\t\t\tstyle: 'currency',\r\n+\t\t\t\tcurrency: 'USD',\r\n+\t\t\t}).format(amount);\r\n+\r\n+\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\tid: 'actions',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst payment = row.original;\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<DropdownMenu>\r\n+\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n+\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n+\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n+\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n+\t\t\t\t\t\t</Button>\r\n+\t\t\t\t\t</DropdownMenuTrigger>\r\n+\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n+\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n+\t\t\t\t\t\t<DropdownMenuItem\r\n+\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\tCopy payment ID\r\n+\t\t\t\t\t\t</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuSeparator />\r\n+\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n+\t\t\t\t\t</DropdownMenuContent>\r\n+\t\t\t\t</DropdownMenu>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+];\r\n"
                },
                {
                    "date": 1722381654218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,87 @@\n+'use client';\r\n+\r\n+import { ColumnDef } from '@tanstack/react-table';\r\n+import { MoreHorizontal } from 'lucide-react';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+import { Button } from '@/components/ui/button';\r\n+import {\r\n+\tDropdownMenu,\r\n+\tDropdownMenuContent,\r\n+\tDropdownMenuItem,\r\n+\tDropdownMenuLabel,\r\n+\tDropdownMenuSeparator,\r\n+\tDropdownMenuTrigger,\r\n+} from '@/components/ui/dropdown-menu';\r\n+import { StatusBadge } from '../StatusBadge';\r\n+\r\n+export const columns: ColumnDef<Appointment>[] = [\r\n+\t{\r\n+\t\theader: 'ID',\r\n+\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'patient',\r\n+\t\theader: 'Paciente',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'status',\r\n+\t\theader: 'Status',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"min-w-[115px]\">\r\n+\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'email',\r\n+\t\theader: 'Email',\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'amount',\r\n+\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n+\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n+\t\t\t\tstyle: 'currency',\r\n+\t\t\t\tcurrency: 'USD',\r\n+\t\t\t}).format(amount);\r\n+\r\n+\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\tid: 'actions',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst payment = row.original;\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<DropdownMenu>\r\n+\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n+\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n+\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n+\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n+\t\t\t\t\t\t</Button>\r\n+\t\t\t\t\t</DropdownMenuTrigger>\r\n+\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n+\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n+\t\t\t\t\t\t<DropdownMenuItem\r\n+\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\tCopy payment ID\r\n+\t\t\t\t\t\t</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuSeparator />\r\n+\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n+\t\t\t\t\t</DropdownMenuContent>\r\n+\t\t\t\t</DropdownMenu>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+];\r\n"
                },
                {
                    "date": 1722384981368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+'use client';\r\n+\r\n+import { ColumnDef } from '@tanstack/react-table';\r\n+import { MoreHorizontal } from 'lucide-react';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+import { Button } from '@/components/ui/button';\r\n+import {\r\n+\tDropdownMenu,\r\n+\tDropdownMenuContent,\r\n+\tDropdownMenuItem,\r\n+\tDropdownMenuLabel,\r\n+\tDropdownMenuSeparator,\r\n+\tDropdownMenuTrigger,\r\n+} from '@/components/ui/dropdown-menu';\r\n+import { StatusBadge } from '../StatusBadge';\r\n+import { formatDateTime } from '@/lib/utils';\r\n+\r\n+export const columns: ColumnDef<Appointment>[] = [\r\n+\t{\r\n+\t\theader: 'ID',\r\n+\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'patient',\r\n+\t\theader: 'Paciente',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'status',\r\n+\t\theader: 'Status',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"min-w-[115px]\">\r\n+\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'schedule',\r\n+\t\theader: 'Appointment',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n+\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n+\t\t\t\t</p>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'email',\r\n+\t\theader: 'Email',\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'amount',\r\n+\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n+\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n+\t\t\t\tstyle: 'currency',\r\n+\t\t\t\tcurrency: 'USD',\r\n+\t\t\t}).format(amount);\r\n+\r\n+\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\tid: 'actions',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst payment = row.original;\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<DropdownMenu>\r\n+\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n+\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n+\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n+\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n+\t\t\t\t\t\t</Button>\r\n+\t\t\t\t\t</DropdownMenuTrigger>\r\n+\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n+\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n+\t\t\t\t\t\t<DropdownMenuItem\r\n+\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\tCopy payment ID\r\n+\t\t\t\t\t\t</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuSeparator />\r\n+\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n+\t\t\t\t\t</DropdownMenuContent>\r\n+\t\t\t\t</DropdownMenu>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+];\r\n"
                },
                {
                    "date": 1722385024447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,122 @@\n+'use client';\r\n+\r\n+import { ColumnDef } from '@tanstack/react-table';\r\n+import { MoreHorizontal } from 'lucide-react';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+import { Doctors } from '@/constants';\r\n+import { Button } from '@/components/ui/button';\r\n+import Image from 'next/image';\r\n+import {\r\n+\tDropdownMenu,\r\n+\tDropdownMenuContent,\r\n+\tDropdownMenuItem,\r\n+\tDropdownMenuLabel,\r\n+\tDropdownMenuSeparator,\r\n+\tDropdownMenuTrigger,\r\n+} from '@/components/ui/dropdown-menu';\r\n+import { StatusBadge } from '../StatusBadge';\r\n+import { formatDateTime } from '@/lib/utils';\r\n+\r\n+export const columns: ColumnDef<Appointment>[] = [\r\n+\t{\r\n+\t\theader: 'ID',\r\n+\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'patient',\r\n+\t\theader: 'Paciente',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'status',\r\n+\t\theader: 'Status',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"min-w-[115px]\">\r\n+\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'schedule',\r\n+\t\theader: 'Appointment',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n+\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n+\t\t\t\t</p>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'primaryPhysician',\r\n+\t\theader: 'Doctor',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\r\n+\t\t\tconst doctor = Doctors.find(\r\n+\t\t\t\t(doctor) => doctor.name === appointment.primaryPhysician\r\n+\t\t\t);\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex items-center gap-3\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc={doctor?.image!}\r\n+\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\twidth={100}\r\n+\t\t\t\t\t\theight={100}\r\n+\t\t\t\t\t\tclassName=\"size-8\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<p className=\"whitespace-nowrap\">Dr. {doctor?.name}</p>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'amount',\r\n+\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n+\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n+\t\t\t\tstyle: 'currency',\r\n+\t\t\t\tcurrency: 'USD',\r\n+\t\t\t}).format(amount);\r\n+\r\n+\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\tid: 'actions',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst payment = row.original;\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<DropdownMenu>\r\n+\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n+\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n+\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n+\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n+\t\t\t\t\t\t</Button>\r\n+\t\t\t\t\t</DropdownMenuTrigger>\r\n+\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n+\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n+\t\t\t\t\t\t<DropdownMenuItem\r\n+\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\tCopy payment ID\r\n+\t\t\t\t\t\t</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuSeparator />\r\n+\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n+\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n+\t\t\t\t\t</DropdownMenuContent>\r\n+\t\t\t\t</DropdownMenu>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+];\r\n"
                },
                {
                    "date": 1722385444856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,597 +119,4 @@\n \t\t\t);\r\n \t\t},\r\n \t},\r\n ];\r\n-'use client';\r\n-\r\n-import { ColumnDef } from '@tanstack/react-table';\r\n-import { MoreHorizontal } from 'lucide-react';\r\n-import { Appointment } from '@/types/appwrite.types';\r\n-import { Button } from '@/components/ui/button';\r\n-import {\r\n-\tDropdownMenu,\r\n-\tDropdownMenuContent,\r\n-\tDropdownMenuItem,\r\n-\tDropdownMenuLabel,\r\n-\tDropdownMenuSeparator,\r\n-\tDropdownMenuTrigger,\r\n-} from '@/components/ui/dropdown-menu';\r\n-import { StatusBadge } from '../StatusBadge';\r\n-import { formatDateTime } from '@/lib/utils';\r\n-\r\n-export const columns: ColumnDef<Appointment>[] = [\r\n-\t{\r\n-\t\theader: 'ID',\r\n-\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'patient',\r\n-\t\theader: 'Paciente',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'status',\r\n-\t\theader: 'Status',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"min-w-[115px]\">\r\n-\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'schedule',\r\n-\t\theader: 'Appointment',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n-\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n-\t\t\t\t</p>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'email',\r\n-\t\theader: 'Email',\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'amount',\r\n-\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n-\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n-\t\t\t\tstyle: 'currency',\r\n-\t\t\t\tcurrency: 'USD',\r\n-\t\t\t}).format(amount);\r\n-\r\n-\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\tid: 'actions',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst payment = row.original;\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<DropdownMenu>\r\n-\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n-\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n-\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n-\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n-\t\t\t\t\t\t</Button>\r\n-\t\t\t\t\t</DropdownMenuTrigger>\r\n-\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n-\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n-\t\t\t\t\t\t<DropdownMenuItem\r\n-\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\tCopy payment ID\r\n-\t\t\t\t\t\t</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuSeparator />\r\n-\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n-\t\t\t\t\t</DropdownMenuContent>\r\n-\t\t\t\t</DropdownMenu>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-];\r\n-'use client';\r\n-\r\n-import { ColumnDef } from '@tanstack/react-table';\r\n-import { MoreHorizontal } from 'lucide-react';\r\n-import { Appointment } from '@/types/appwrite.types';\r\n-import { Button } from '@/components/ui/button';\r\n-import {\r\n-\tDropdownMenu,\r\n-\tDropdownMenuContent,\r\n-\tDropdownMenuItem,\r\n-\tDropdownMenuLabel,\r\n-\tDropdownMenuSeparator,\r\n-\tDropdownMenuTrigger,\r\n-} from '@/components/ui/dropdown-menu';\r\n-import { StatusBadge } from '../StatusBadge';\r\n-\r\n-export const columns: ColumnDef<Appointment>[] = [\r\n-\t{\r\n-\t\theader: 'ID',\r\n-\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'patient',\r\n-\t\theader: 'Paciente',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'status',\r\n-\t\theader: 'Status',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"min-w-[115px]\">\r\n-\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'email',\r\n-\t\theader: 'Email',\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'amount',\r\n-\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n-\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n-\t\t\t\tstyle: 'currency',\r\n-\t\t\t\tcurrency: 'USD',\r\n-\t\t\t}).format(amount);\r\n-\r\n-\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\tid: 'actions',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst payment = row.original;\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<DropdownMenu>\r\n-\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n-\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n-\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n-\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n-\t\t\t\t\t\t</Button>\r\n-\t\t\t\t\t</DropdownMenuTrigger>\r\n-\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n-\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n-\t\t\t\t\t\t<DropdownMenuItem\r\n-\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\tCopy payment ID\r\n-\t\t\t\t\t\t</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuSeparator />\r\n-\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n-\t\t\t\t\t</DropdownMenuContent>\r\n-\t\t\t\t</DropdownMenu>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-];\r\n-'use client';\r\n-\r\n-import { ColumnDef } from '@tanstack/react-table';\r\n-import { MoreHorizontal } from 'lucide-react';\r\n-import { Appointment } from '@/types/appwrite.types';\r\n-import { Button } from '@/components/ui/button';\r\n-import {\r\n-\tDropdownMenu,\r\n-\tDropdownMenuContent,\r\n-\tDropdownMenuItem,\r\n-\tDropdownMenuLabel,\r\n-\tDropdownMenuSeparator,\r\n-\tDropdownMenuTrigger,\r\n-} from '@/components/ui/dropdown-menu';\r\n-\r\n-export const columns: ColumnDef<Appointment>[] = [\r\n-\t{\r\n-\t\theader: 'ID',\r\n-\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'patient',\r\n-\t\theader: 'Paciente',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'status',\r\n-\t\theader: 'Status',\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'email',\r\n-\t\theader: 'Email',\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'amount',\r\n-\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n-\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n-\t\t\t\tstyle: 'currency',\r\n-\t\t\t\tcurrency: 'USD',\r\n-\t\t\t}).format(amount);\r\n-\r\n-\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\tid: 'actions',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst payment = row.original;\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<DropdownMenu>\r\n-\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n-\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n-\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n-\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n-\t\t\t\t\t\t</Button>\r\n-\t\t\t\t\t</DropdownMenuTrigger>\r\n-\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n-\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n-\t\t\t\t\t\t<DropdownMenuItem\r\n-\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\tCopy payment ID\r\n-\t\t\t\t\t\t</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuSeparator />\r\n-\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n-\t\t\t\t\t</DropdownMenuContent>\r\n-\t\t\t\t</DropdownMenu>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-];\r\n-'use client';\r\n-\r\n-import { ColumnDef } from '@tanstack/react-table';\r\n-import { MoreHorizontal } from 'lucide-react';\r\n-\r\n-import { Button } from '@/components/ui/button';\r\n-import {\r\n-\tDropdownMenu,\r\n-\tDropdownMenuContent,\r\n-\tDropdownMenuItem,\r\n-\tDropdownMenuLabel,\r\n-\tDropdownMenuSeparator,\r\n-\tDropdownMenuTrigger,\r\n-} from '@/components/ui/dropdown-menu';\r\n-\r\n-export type Payment = {\r\n-\tid: string;\r\n-\tamount: number;\r\n-\tstatus: 'pending' | 'processing' | 'success' | 'failed';\r\n-\temail: string;\r\n-};\r\n-\r\n-export const columns: ColumnDef<Payment>[] = [\r\n-\t{\r\n-\t\theader: 'ID',\r\n-\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'patient',\r\n-\t\theader: 'Paciente',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn <p className='text-14-medium'>{row.original.patient?.name}</p>\r\n-\t\t}\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'status',\r\n-\t\theader: 'Status',\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'email',\r\n-\t\theader: 'Email',\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'amount',\r\n-\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n-\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n-\t\t\t\tstyle: 'currency',\r\n-\t\t\t\tcurrency: 'USD',\r\n-\t\t\t}).format(amount);\r\n-\r\n-\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\tid: 'actions',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst payment = row.original;\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<DropdownMenu>\r\n-\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n-\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n-\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n-\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n-\t\t\t\t\t\t</Button>\r\n-\t\t\t\t\t</DropdownMenuTrigger>\r\n-\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n-\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n-\t\t\t\t\t\t<DropdownMenuItem\r\n-\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\tCopy payment ID\r\n-\t\t\t\t\t\t</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuSeparator />\r\n-\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n-\t\t\t\t\t</DropdownMenuContent>\r\n-\t\t\t\t</DropdownMenu>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-];\r\n-'use client';\r\n-\r\n-import { ColumnDef } from '@tanstack/react-table';\r\n-import { MoreHorizontal } from 'lucide-react';\r\n-\r\n-import { Button } from '@/components/ui/button';\r\n-import {\r\n-\tDropdownMenu,\r\n-\tDropdownMenuContent,\r\n-\tDropdownMenuItem,\r\n-\tDropdownMenuLabel,\r\n-\tDropdownMenuSeparator,\r\n-\tDropdownMenuTrigger,\r\n-} from '@/components/ui/dropdown-menu';\r\n-\r\n-export type Payment = {\r\n-\tid: string;\r\n-\tamount: number;\r\n-\tstatus: 'pending' | 'processing' | 'success' | 'failed';\r\n-\temail: string;\r\n-};\r\n-\r\n-export const columns: ColumnDef<Payment>[] = [\r\n-\t{\r\n-\t\theader: 'ID',\r\n-\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'patient',\r\n-\t\theader: 'Paciente',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn <p className='text-14-medium'>{appointment.patient?.name}</p>\r\n-\t\t}\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'status',\r\n-\t\theader: 'Status',\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'email',\r\n-\t\theader: 'Email',\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'amount',\r\n-\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n-\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n-\t\t\t\tstyle: 'currency',\r\n-\t\t\t\tcurrency: 'USD',\r\n-\t\t\t}).format(amount);\r\n-\r\n-\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\tid: 'actions',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst payment = row.original;\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<DropdownMenu>\r\n-\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n-\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n-\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n-\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n-\t\t\t\t\t\t</Button>\r\n-\t\t\t\t\t</DropdownMenuTrigger>\r\n-\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n-\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n-\t\t\t\t\t\t<DropdownMenuItem\r\n-\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\tCopy payment ID\r\n-\t\t\t\t\t\t</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuSeparator />\r\n-\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n-\t\t\t\t\t</DropdownMenuContent>\r\n-\t\t\t\t</DropdownMenu>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-];\r\n-'use client';\r\n-\r\n-import { ColumnDef } from '@tanstack/react-table';\r\n-import { MoreHorizontal } from 'lucide-react';\r\n-\r\n-import { Button } from '@/components/ui/button';\r\n-import {\r\n-\tDropdownMenu,\r\n-\tDropdownMenuContent,\r\n-\tDropdownMenuItem,\r\n-\tDropdownMenuLabel,\r\n-\tDropdownMenuSeparator,\r\n-\tDropdownMenuTrigger,\r\n-} from '@/components/ui/dropdown-menu';\r\n-\r\n-export type Payment = {\r\n-\tid: string;\r\n-\tamount: number;\r\n-\tstatus: 'pending' | 'processing' | 'success' | 'failed';\r\n-\temail: string;\r\n-};\r\n-\r\n-export const columns: ColumnDef<Payment>[] = [\r\n-\t{\r\n-\t\theader: 'ID',\r\n-\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'patient',\r\n-\t\theader: 'Paciente',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn <p className='text-14-medium'>{appointment.patient.name}</p>\r\n-\t\t}\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'status',\r\n-\t\theader: 'Status',\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'email',\r\n-\t\theader: 'Email',\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'amount',\r\n-\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n-\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n-\t\t\t\tstyle: 'currency',\r\n-\t\t\t\tcurrency: 'USD',\r\n-\t\t\t}).format(amount);\r\n-\r\n-\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\tid: 'actions',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst payment = row.original;\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<DropdownMenu>\r\n-\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n-\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n-\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n-\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n-\t\t\t\t\t\t</Button>\r\n-\t\t\t\t\t</DropdownMenuTrigger>\r\n-\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n-\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n-\t\t\t\t\t\t<DropdownMenuItem\r\n-\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\tCopy payment ID\r\n-\t\t\t\t\t\t</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuSeparator />\r\n-\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n-\t\t\t\t\t</DropdownMenuContent>\r\n-\t\t\t\t</DropdownMenu>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-];\r\n-'use client';\r\n-\r\n-import { ColumnDef } from '@tanstack/react-table';\r\n-import { MoreHorizontal } from 'lucide-react';\r\n-\r\n-import { Button } from '@/components/ui/button';\r\n-import {\r\n-\tDropdownMenu,\r\n-\tDropdownMenuContent,\r\n-\tDropdownMenuItem,\r\n-\tDropdownMenuLabel,\r\n-\tDropdownMenuSeparator,\r\n-\tDropdownMenuTrigger,\r\n-} from '@/components/ui/dropdown-menu';\r\n-\r\n-export type Payment = {\r\n-\tid: string;\r\n-\tamount: number;\r\n-\tstatus: 'pending' | 'processing' | 'success' | 'failed';\r\n-\temail: string;\r\n-};\r\n-\r\n-export const columns: ColumnDef<Payment>[] = [\r\n-\t{\r\n-\t\taccessorKey: 'status',\r\n-\t\theader: 'Status',\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'email',\r\n-\t\theader: 'Email',\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'amount',\r\n-\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n-\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n-\t\t\t\tstyle: 'currency',\r\n-\t\t\t\tcurrency: 'USD',\r\n-\t\t\t}).format(amount);\r\n-\r\n-\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\tid: 'actions',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst payment = row.original;\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<DropdownMenu>\r\n-\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n-\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n-\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n-\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n-\t\t\t\t\t\t</Button>\r\n-\t\t\t\t\t</DropdownMenuTrigger>\r\n-\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n-\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n-\t\t\t\t\t\t<DropdownMenuItem\r\n-\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\tCopy payment ID\r\n-\t\t\t\t\t\t</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuSeparator />\r\n-\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n-\t\t\t\t\t</DropdownMenuContent>\r\n-\t\t\t\t</DropdownMenu>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-];\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722385474212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n \t\t},\r\n \t},\r\n \t{\r\n \t\taccessorKey: 'schedule',\r\n-\t\theader: 'Appointment',\r\n+\t\theader: 'Cita',\r\n \t\tcell: ({ row }) => {\r\n \t\t\tconst appointment = row.original;\r\n \t\t\treturn (\r\n \t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n@@ -78,9 +78,9 @@\n \t\t\t);\r\n \t\t},\r\n \t},\r\n \t{\r\n-\t\taccessorKey: 'amount',\r\n+\t\taccessorKey: 'monto',\r\n \t\theader: () => <div className=\"text-right\">Amount</div>,\r\n \t\tcell: ({ row }) => {\r\n \t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n \t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n"
                },
                {
                    "date": 1722385483331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,22 +77,10 @@\n \t\t\t\t</div>\r\n \t\t\t);\r\n \t\t},\r\n \t},\r\n+\t\r\n \t{\r\n-\t\taccessorKey: 'monto',\r\n-\t\theader: () => <div className=\"text-right\">Amount</div>,\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst amount = parseFloat(row.getValue('amount'));\r\n-\t\t\tconst formatted = new Intl.NumberFormat('en-US', {\r\n-\t\t\t\tstyle: 'currency',\r\n-\t\t\t\tcurrency: 'USD',\r\n-\t\t\t}).format(amount);\r\n-\r\n-\t\t\treturn <div className=\"text-right font-medium\">{formatted}</div>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n \t\tid: 'actions',\r\n \t\tcell: ({ row }) => {\r\n \t\t\tconst payment = row.original;\r\n \r\n"
                },
                {
                    "date": 1722385521791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,109 @@\n+'use client';\r\n+\r\n+import { ColumnDef } from '@tanstack/react-table';\r\n+import { MoreHorizontal } from 'lucide-react';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+import { Doctors } from '@/constants';\r\n+import { Button } from '@/components/ui/button';\r\n+import Image from 'next/image';\r\n+import {\r\n+\tDropdownMenu,\r\n+\tDropdownMenuContent,\r\n+\tDropdownMenuItem,\r\n+\tDropdownMenuLabel,\r\n+\tDropdownMenuSeparator,\r\n+\tDropdownMenuTrigger,\r\n+} from '@/components/ui/dropdown-menu';\r\n+import { StatusBadge } from '../StatusBadge';\r\n+import { formatDateTime } from '@/lib/utils';\r\n+\r\n+export const columns: ColumnDef<Appointment>[] = [\r\n+\t{\r\n+\t\theader: 'ID',\r\n+\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'patient',\r\n+\t\theader: 'Paciente',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'status',\r\n+\t\theader: 'Status',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"min-w-[115px]\">\r\n+\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'schedule',\r\n+\t\theader: 'Cita',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n+\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n+\t\t\t\t</p>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'primaryPhysician',\r\n+\t\theader: 'Doctor',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\r\n+\t\t\tconst doctor = Doctors.find(\r\n+\t\t\t\t(doctor) => doctor.name === appointment.primaryPhysician\r\n+\t\t\t);\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex items-center gap-3\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc={doctor?.image!}\r\n+\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\twidth={100}\r\n+\t\t\t\t\t\theight={100}\r\n+\t\t\t\t\t\tclassName=\"size-8\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<p className=\"whitespace-nowrap\">Dr. {doctor?.name}</p>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\tid: 'actions',\r\n+\t\theader: () => <div className=\"pl-4\">Actions</div>,\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex gap-1\">\r\n+\t\t\t\t\t<AppointmentModal\r\n+\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n+\t\t\t\t\t\tuserId={appointment.userId}\r\n+\t\t\t\t\t\tappointment={appointment}\r\n+\t\t\t\t\t\ttype=\"schedule\"\r\n+\t\t\t\t\t\ttitle=\"Schedule Appointment\"\r\n+\t\t\t\t\t\tdescription=\"Please confirm the following details to schedule.\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<AppointmentModal\r\n+\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n+\t\t\t\t\t\tuserId={appointment.userId}\r\n+\t\t\t\t\t\tappointment={appointment}\r\n+\t\t\t\t\t\ttype=\"cancel\"\r\n+\t\t\t\t\t\ttitle=\"Cancel Appointment\"\r\n+\t\t\t\t\t\tdescription=\"Are you sure you want to cancel your appointment?\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+];\r\n"
                },
                {
                    "date": 1722386971804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+'use client';\r\n+\r\n+import { ColumnDef } from '@tanstack/react-table';\r\n+import { MoreHorizontal } from 'lucide-react';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+import { Doctors } from '@/constants';\r\n+import { Button } from '@/components/ui/button';\r\n+import Image from 'next/image';\r\n+import {\r\n+\tDropdownMenu,\r\n+\tDropdownMenuContent,\r\n+\tDropdownMenuItem,\r\n+\tDropdownMenuLabel,\r\n+\tDropdownMenuSeparator,\r\n+\tDropdownMenuTrigger,\r\n+} from '@/components/ui/dropdown-menu';\r\n+import { StatusBadge } from '../StatusBadge';\r\n+import { formatDateTime } from '@/lib/utils';\r\n+import { AppointmentModal } from '../AppointmentModal';\r\n+\r\n+export const columns: ColumnDef<Appointment>[] = [\r\n+\t{\r\n+\t\theader: 'ID',\r\n+\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'patient',\r\n+\t\theader: 'Paciente',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'status',\r\n+\t\theader: 'Status',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"min-w-[115px]\">\r\n+\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'schedule',\r\n+\t\theader: 'Cita',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n+\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n+\t\t\t\t</p>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'primaryPhysician',\r\n+\t\theader: 'Doctor',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\r\n+\t\t\tconst doctor = Doctors.find(\r\n+\t\t\t\t(doctor) => doctor.name === appointment.primaryPhysician\r\n+\t\t\t);\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex items-center gap-3\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc={doctor?.image!}\r\n+\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\twidth={100}\r\n+\t\t\t\t\t\theight={100}\r\n+\t\t\t\t\t\tclassName=\"size-8\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<p className=\"whitespace-nowrap\">Dr. {doctor?.name}</p>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\tid: 'actions',\r\n+\t\theader: () => <div className=\"pl-4\">Actions</div>,\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex gap-1\">\r\n+\t\t\t\t\t<AppointmentModal\r\n+\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n+\t\t\t\t\t\tuserId={appointment.userId}\r\n+\t\t\t\t\t\tappointment={appointment}\r\n+\t\t\t\t\t\ttype=\"schedule\"\r\n+\t\t\t\t\t\ttitle=\"Schedule Appointment\"\r\n+\t\t\t\t\t\tdescription=\"Please confirm the following details to schedule.\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<AppointmentModal\r\n+\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n+\t\t\t\t\t\tuserId={appointment.userId}\r\n+\t\t\t\t\t\tappointment={appointment}\r\n+\t\t\t\t\t\ttype=\"cancel\"\r\n+\t\t\t\t\t\ttitle=\"Cancel Appointment\"\r\n+\t\t\t\t\t\tdescription=\"Are you sure you want to cancel your appointment?\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+];\r\n"
                },
                {
                    "date": 1722407466180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+'use client';\r\n+\r\n+import { ColumnDef } from '@tanstack/react-table';\r\n+import { MoreHorizontal } from 'lucide-react';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+import { Doctors } from '@/constants';\r\n+import { Button } from '@/components/ui/button';\r\n+import Image from 'next/image';\r\n+import {\r\n+\tDropdownMenu,\r\n+\tDropdownMenuContent,\r\n+\tDropdownMenuItem,\r\n+\tDropdownMenuLabel,\r\n+\tDropdownMenuSeparator,\r\n+\tDropdownMenuTrigger,\r\n+} from '@/components/ui/dropdown-menu';\r\n+import { StatusBadge } from '../StatusBadge';\r\n+import { formatDateTime } from '@/lib/utils';\r\n+import { AppointmentModal } from '../AppointmentModal';\r\n+\r\n+export const columns: ColumnDef<Appointment>[] = [\r\n+\t{\r\n+\t\theader: 'ID',\r\n+\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'patient',\r\n+\t\theader: 'Paciente',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'status',\r\n+\t\theader: 'Status',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"min-w-[115px]\">\r\n+\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'schedule',\r\n+\t\theader: 'Cita',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n+\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n+\t\t\t\t</p>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'primaryPhysician',\r\n+\t\theader: 'Doctor',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\r\n+\t\t\tconst doctor = Doctors.find(\r\n+\t\t\t\t(doctor) => doctor.name === appointment.primaryPhysician\r\n+\t\t\t);\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex items-center gap-3\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc={doctor?.image!}\r\n+\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\twidth={100}\r\n+\t\t\t\t\t\theight={100}\r\n+\t\t\t\t\t\tclassName=\"size-8\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<p className=\"whitespace-nowrap\">Dr. {doctor?.name}</p>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\tid: 'actions',\r\n+\t\theader: () => <div className=\"pl-4\">Acciones</div>,\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex gap-1\">\r\n+\t\t\t\t\t<AppointmentModal\r\n+\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n+\t\t\t\t\t\tuserId={appointment.userId}\r\n+\t\t\t\t\t\tappointment={appointment}\r\n+\t\t\t\t\t\ttype=\"schedule\"\r\n+\t\t\t\t\t\ttitle=\"Schedule Appointment\"\r\n+\t\t\t\t\t\tdescription=\"Please confirm the following details to schedule.\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<AppointmentModal\r\n+\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n+\t\t\t\t\t\tuserId={appointment.userId}\r\n+\t\t\t\t\t\tappointment={appointment}\r\n+\t\t\t\t\t\ttype=\"cancel\"\r\n+\t\t\t\t\t\ttitle=\"Cancel Appointment\"\r\n+\t\t\t\t\t\tdescription=\"Are you sure you want to cancel your appointment?\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+];\r\n"
                },
                {
                    "date": 1722407478598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+'use client';\r\n+\r\n+import { ColumnDef } from '@tanstack/react-table';\r\n+import { MoreHorizontal } from 'lucide-react';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+import { Doctors } from '@/constants';\r\n+import { Button } from '@/components/ui/button';\r\n+import Image from 'next/image';\r\n+import {\r\n+\tDropdownMenu,\r\n+\tDropdownMenuContent,\r\n+\tDropdownMenuItem,\r\n+\tDropdownMenuLabel,\r\n+\tDropdownMenuSeparator,\r\n+\tDropdownMenuTrigger,\r\n+} from '@/components/ui/dropdown-menu';\r\n+import { StatusBadge } from '../StatusBadge';\r\n+import { formatDateTime } from '@/lib/utils';\r\n+import { AppointmentModal } from '../AppointmentModal';\r\n+\r\n+export const columns: ColumnDef<Appointment>[] = [\r\n+\t{\r\n+\t\theader: 'ID',\r\n+\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'patient',\r\n+\t\theader: 'Paciente',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'status',\r\n+\t\theader: 'Status',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"min-w-[115px]\">\r\n+\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'schedule',\r\n+\t\theader: 'Cita',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n+\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n+\t\t\t\t</p>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'primaryPhysician',\r\n+\t\theader: 'Doctor',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\r\n+\t\t\tconst doctor = Doctors.find(\r\n+\t\t\t\t(doctor) => doctor.name === appointment.primaryPhysician\r\n+\t\t\t);\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex items-center gap-3\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc={doctor?.image!}\r\n+\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\twidth={100}\r\n+\t\t\t\t\t\theight={100}\r\n+\t\t\t\t\t\tclassName=\"size-8\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<p className=\"whitespace-nowrap\">Dr. {doctor?.name}</p>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\tid: 'actions',\r\n+\t\theader: () => <div className=\"pl-4\">Acciones</div>,\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex gap-1\">\r\n+\t\t\t\t\t<AppointmentModal\r\n+\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n+\t\t\t\t\t\tuserId={appointment.userId}\r\n+\t\t\t\t\t\tappointment={appointment}\r\n+\t\t\t\t\t\ttype=\"schedule\"\r\n+\t\t\t\t\t\ttitle=\"Schedule Appointment\"\r\n+\t\t\t\t\t\tdescription=\"Please confirm the following details to schedule.\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<AppointmentModal\r\n+\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n+\t\t\t\t\t\tuserId={appointment.userId}\r\n+\t\t\t\t\t\tappointment={appointment}\r\n+\t\t\t\t\t\ttype=\"cancel\"\r\n+\t\t\t\t\t\ttitle=\"Cancel Appointment\"\r\n+\t\t\t\t\t\tdescription=\"Are you sure you want to cancel your appointment?\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+];\r\n"
                },
                {
                    "date": 1722409912878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,101 @@\n+'use client';\r\n+\r\n+import { ColumnDef } from '@tanstack/react-table';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+import { StatusBadge } from '../StatusBadge';\r\n+import { formatDateTime } from '@/lib/utils';\r\n+import { AppointmentModal } from '../AppointmentModal';\r\n+\r\n+export const columns: ColumnDef<Appointment>[] = [\r\n+\t{\r\n+\t\theader: 'ID',\r\n+\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'patient',\r\n+\t\theader: 'Paciente',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'status',\r\n+\t\theader: 'Status',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"min-w-[115px]\">\r\n+\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'schedule',\r\n+\t\theader: 'Cita',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n+\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n+\t\t\t\t</p>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'primaryPhysician',\r\n+\t\theader: 'Doctor',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\r\n+\t\t\tconst doctor = Doctors.find(\r\n+\t\t\t\t(doctor) => doctor.name === appointment.primaryPhysician\r\n+\t\t\t);\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex items-center gap-3\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc={doctor?.image!}\r\n+\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\twidth={100}\r\n+\t\t\t\t\t\theight={100}\r\n+\t\t\t\t\t\tclassName=\"size-8\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<p className=\"whitespace-nowrap\">Dr. {doctor?.name}</p>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\tid: 'actions',\r\n+\t\theader: () => <div className=\"pl-4\">Acciones</div>,\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex gap-1\">\r\n+\t\t\t\t\t<AppointmentModal\r\n+\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n+\t\t\t\t\t\tuserId={appointment.userId}\r\n+\t\t\t\t\t\tappointment={appointment}\r\n+\t\t\t\t\t\ttype=\"schedule\"\r\n+\t\t\t\t\t\ttitle=\"Schedule Appointment\"\r\n+\t\t\t\t\t\tdescription=\"Please confirm the following details to schedule.\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<AppointmentModal\r\n+\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n+\t\t\t\t\t\tuserId={appointment.userId}\r\n+\t\t\t\t\t\tappointment={appointment}\r\n+\t\t\t\t\t\ttype=\"cancel\"\r\n+\t\t\t\t\t\ttitle=\"Cancel Appointment\"\r\n+\t\t\t\t\t\tdescription=\"Are you sure you want to cancel your appointment?\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+];\r\n"
                },
                {
                    "date": 1722412817386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+'use client';\r\n+\r\n+import { ColumnDef } from '@tanstack/react-table';\r\n+import { Appointment } from '@/types/appwrite.types';\r\n+import { Doctors } from '@/constants';\r\n+import Image from 'next/image';\r\n+\r\n+import { StatusBadge } from '../StatusBadge';\r\n+import { formatDateTime } from '@/lib/utils';\r\n+import { AppointmentModal } from '../AppointmentModal';\r\n+\r\n+export const columns: ColumnDef<Appointment>[] = [\r\n+\t{\r\n+\t\theader: 'ID',\r\n+\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'patient',\r\n+\t\theader: 'Paciente',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'status',\r\n+\t\theader: 'Status',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"min-w-[115px]\">\r\n+\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'schedule',\r\n+\t\theader: 'Cita',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\t\t\treturn (\r\n+\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n+\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n+\t\t\t\t</p>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\taccessorKey: 'primaryPhysician',\r\n+\t\theader: 'Doctor',\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\r\n+\t\t\tconst doctor = Doctors.find(\r\n+\t\t\t\t(doctor) => doctor.name === appointment.primaryPhysician\r\n+\t\t\t);\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex items-center gap-3\">\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc={doctor?.image!}\r\n+\t\t\t\t\t\talt=\"doctor\"\r\n+\t\t\t\t\t\twidth={100}\r\n+\t\t\t\t\t\theight={100}\r\n+\t\t\t\t\t\tclassName=\"size-8\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<p className=\"whitespace-nowrap\">Dr. {doctor?.name}</p>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+\t{\r\n+\t\tid: 'actions',\r\n+\t\theader: () => <div className=\"pl-4\">Acciones</div>,\r\n+\t\tcell: ({ row }) => {\r\n+\t\t\tconst appointment = row.original;\r\n+\r\n+\t\t\treturn (\r\n+\t\t\t\t<div className=\"flex gap-1\">\r\n+\t\t\t\t\t<AppointmentModal\r\n+\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n+\t\t\t\t\t\tuserId={appointment.userId}\r\n+\t\t\t\t\t\tappointment={appointment}\r\n+\t\t\t\t\t\ttype=\"schedule\"\r\n+\t\t\t\t\t\ttitle=\"Agendar cita\"\r\n+\t\t\t\t\t\tdescription=\"Please confirm the following details to schedule.\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<AppointmentModal\r\n+\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n+\t\t\t\t\t\tuserId={appointment.userId}\r\n+\t\t\t\t\t\tappointment={appointment}\r\n+\t\t\t\t\t\ttype=\"cancel\"\r\n+\t\t\t\t\t\ttitle=\"Cancelar cita\"\r\n+\t\t\t\t\t\tdescription=\"Are you sure you want to cancel your appointment?\"\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</div>\r\n+\t\t\t);\r\n+\t\t},\r\n+\t},\r\n+];\r\n"
                },
                {
                    "date": 1722412835201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,669 +82,19 @@\n \t\t\t\t\t\tuserId={appointment.userId}\r\n \t\t\t\t\t\tappointment={appointment}\r\n \t\t\t\t\t\ttype=\"schedule\"\r\n \t\t\t\t\t\ttitle=\"Agendar cita\"\r\n-\t\t\t\t\t\tdescription=\"Please confirm the following details to schedule.\"\r\n+\t\t\t\t\t\tdescription=\"Por favor completar los detalles para agendar la cita\"\r\n \t\t\t\t\t/>\r\n \t\t\t\t\t<AppointmentModal\r\n \t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n \t\t\t\t\t\tuserId={appointment.userId}\r\n \t\t\t\t\t\tappointment={appointment}\r\n \t\t\t\t\t\ttype=\"cancel\"\r\n \t\t\t\t\t\ttitle=\"Cancelar cita\"\r\n-\t\t\t\t\t\tdescription=\"Are you sure you want to cancel your appointment?\"\r\n+\t\t\t\t\t\tdescription=\"Estás seguro que deseas cancelar la cita\"\r\n \t\t\t\t\t/>\r\n \t\t\t\t</div>\r\n \t\t\t);\r\n \t\t},\r\n \t},\r\n ];\r\n-'use client';\r\n-\r\n-import { ColumnDef } from '@tanstack/react-table';\r\n-import { Appointment } from '@/types/appwrite.types';\r\n-import { Doctors } from '@/constants';\r\n-import Image from 'next/image';\r\n-\r\n-import { StatusBadge } from '../StatusBadge';\r\n-import { formatDateTime } from '@/lib/utils';\r\n-import { AppointmentModal } from '../AppointmentModal';\r\n-\r\n-export const columns: ColumnDef<Appointment>[] = [\r\n-\t{\r\n-\t\theader: 'ID',\r\n-\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'patient',\r\n-\t\theader: 'Paciente',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'status',\r\n-\t\theader: 'Status',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"min-w-[115px]\">\r\n-\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'schedule',\r\n-\t\theader: 'Cita',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n-\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n-\t\t\t\t</p>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'primaryPhysician',\r\n-\t\theader: 'Doctor',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\r\n-\t\t\tconst doctor = Doctors.find(\r\n-\t\t\t\t(doctor) => doctor.name === appointment.primaryPhysician\r\n-\t\t\t);\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex items-center gap-3\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc={doctor?.image!}\r\n-\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\twidth={100}\r\n-\t\t\t\t\t\theight={100}\r\n-\t\t\t\t\t\tclassName=\"size-8\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<p className=\"whitespace-nowrap\">Dr. {doctor?.name}</p>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\tid: 'actions',\r\n-\t\theader: () => <div className=\"pl-4\">Acciones</div>,\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex gap-1\">\r\n-\t\t\t\t\t<AppointmentModal\r\n-\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n-\t\t\t\t\t\tuserId={appointment.userId}\r\n-\t\t\t\t\t\tappointment={appointment}\r\n-\t\t\t\t\t\ttype=\"schedule\"\r\n-\t\t\t\t\t\ttitle=\"Schedule Appointment\"\r\n-\t\t\t\t\t\tdescription=\"Please confirm the following details to schedule.\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<AppointmentModal\r\n-\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n-\t\t\t\t\t\tuserId={appointment.userId}\r\n-\t\t\t\t\t\tappointment={appointment}\r\n-\t\t\t\t\t\ttype=\"cancel\"\r\n-\t\t\t\t\t\ttitle=\"Cancel Appointment\"\r\n-\t\t\t\t\t\tdescription=\"Are you sure you want to cancel your appointment?\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-];\r\n-'use client';\r\n-\r\n-import { ColumnDef } from '@tanstack/react-table';\r\n-import { MoreHorizontal } from 'lucide-react';\r\n-import { Appointment } from '@/types/appwrite.types';\r\n-import { Doctors } from '@/constants';\r\n-import { Button } from '@/components/ui/button';\r\n-import Image from 'next/image';\r\n-import {\r\n-\tDropdownMenu,\r\n-\tDropdownMenuContent,\r\n-\tDropdownMenuItem,\r\n-\tDropdownMenuLabel,\r\n-\tDropdownMenuSeparator,\r\n-\tDropdownMenuTrigger,\r\n-} from '@/components/ui/dropdown-menu';\r\n-import { StatusBadge } from '../StatusBadge';\r\n-import { formatDateTime } from '@/lib/utils';\r\n-import { AppointmentModal } from '../AppointmentModal';\r\n-\r\n-export const columns: ColumnDef<Appointment>[] = [\r\n-\t{\r\n-\t\theader: 'ID',\r\n-\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'patient',\r\n-\t\theader: 'Paciente',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'status',\r\n-\t\theader: 'Status',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"min-w-[115px]\">\r\n-\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'schedule',\r\n-\t\theader: 'Cita',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n-\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n-\t\t\t\t</p>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'primaryPhysician',\r\n-\t\theader: 'Doctor',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\r\n-\t\t\tconst doctor = Doctors.find(\r\n-\t\t\t\t(doctor) => doctor.name === appointment.primaryPhysician\r\n-\t\t\t);\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex items-center gap-3\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc={doctor?.image!}\r\n-\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\twidth={100}\r\n-\t\t\t\t\t\theight={100}\r\n-\t\t\t\t\t\tclassName=\"size-8\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<p className=\"whitespace-nowrap\">Dr. {doctor?.name}</p>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\tid: 'actions',\r\n-\t\theader: () => <div className=\"pl-4\">Acciones</div>,\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex gap-1\">\r\n-\t\t\t\t\t<AppointmentModal\r\n-\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n-\t\t\t\t\t\tuserId={appointment.userId}\r\n-\t\t\t\t\t\tappointment={appointment}\r\n-\t\t\t\t\t\ttype=\"schedule\"\r\n-\t\t\t\t\t\ttitle=\"Schedule Appointment\"\r\n-\t\t\t\t\t\tdescription=\"Please confirm the following details to schedule.\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<AppointmentModal\r\n-\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n-\t\t\t\t\t\tuserId={appointment.userId}\r\n-\t\t\t\t\t\tappointment={appointment}\r\n-\t\t\t\t\t\ttype=\"cancel\"\r\n-\t\t\t\t\t\ttitle=\"Cancel Appointment\"\r\n-\t\t\t\t\t\tdescription=\"Are you sure you want to cancel your appointment?\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-];\r\n-'use client';\r\n-\r\n-import { ColumnDef } from '@tanstack/react-table';\r\n-import { MoreHorizontal } from 'lucide-react';\r\n-import { Appointment } from '@/types/appwrite.types';\r\n-import { Doctors } from '@/constants';\r\n-import { Button } from '@/components/ui/button';\r\n-import Image from 'next/image';\r\n-import {\r\n-\tDropdownMenu,\r\n-\tDropdownMenuContent,\r\n-\tDropdownMenuItem,\r\n-\tDropdownMenuLabel,\r\n-\tDropdownMenuSeparator,\r\n-\tDropdownMenuTrigger,\r\n-} from '@/components/ui/dropdown-menu';\r\n-import { StatusBadge } from '../StatusBadge';\r\n-import { formatDateTime } from '@/lib/utils';\r\n-import { AppointmentModal } from '../AppointmentModal';\r\n-\r\n-export const columns: ColumnDef<Appointment>[] = [\r\n-\t{\r\n-\t\theader: 'ID',\r\n-\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'patient',\r\n-\t\theader: 'Paciente',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'status',\r\n-\t\theader: 'Status',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"min-w-[115px]\">\r\n-\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'schedule',\r\n-\t\theader: 'Cita',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n-\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n-\t\t\t\t</p>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'primaryPhysician',\r\n-\t\theader: 'Doctor',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\r\n-\t\t\tconst doctor = Doctors.find(\r\n-\t\t\t\t(doctor) => doctor.name === appointment.primaryPhysician\r\n-\t\t\t);\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex items-center gap-3\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc={doctor?.image!}\r\n-\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\twidth={100}\r\n-\t\t\t\t\t\theight={100}\r\n-\t\t\t\t\t\tclassName=\"size-8\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<p className=\"whitespace-nowrap\">Dr. {doctor?.name}</p>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\tid: 'actions',\r\n-\t\theader: () => <div className=\"pl-4\">Acciones</div>,\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex gap-1\">\r\n-\t\t\t\t\t<AppointmentModal\r\n-\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n-\t\t\t\t\t\tuserId={appointment.userId}\r\n-\t\t\t\t\t\tappointment={appointment}\r\n-\t\t\t\t\t\ttype=\"schedule\"\r\n-\t\t\t\t\t\ttitle=\"Schedule Appointment\"\r\n-\t\t\t\t\t\tdescription=\"Please confirm the following details to schedule.\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<AppointmentModal\r\n-\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n-\t\t\t\t\t\tuserId={appointment.userId}\r\n-\t\t\t\t\t\tappointment={appointment}\r\n-\t\t\t\t\t\ttype=\"cancel\"\r\n-\t\t\t\t\t\ttitle=\"Cancel Appointment\"\r\n-\t\t\t\t\t\tdescription=\"Are you sure you want to cancel your appointment?\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-];\r\n-'use client';\r\n-\r\n-import { ColumnDef } from '@tanstack/react-table';\r\n-import { MoreHorizontal } from 'lucide-react';\r\n-import { Appointment } from '@/types/appwrite.types';\r\n-import { Doctors } from '@/constants';\r\n-import { Button } from '@/components/ui/button';\r\n-import Image from 'next/image';\r\n-import {\r\n-\tDropdownMenu,\r\n-\tDropdownMenuContent,\r\n-\tDropdownMenuItem,\r\n-\tDropdownMenuLabel,\r\n-\tDropdownMenuSeparator,\r\n-\tDropdownMenuTrigger,\r\n-} from '@/components/ui/dropdown-menu';\r\n-import { StatusBadge } from '../StatusBadge';\r\n-import { formatDateTime } from '@/lib/utils';\r\n-import { AppointmentModal } from '../AppointmentModal';\r\n-\r\n-export const columns: ColumnDef<Appointment>[] = [\r\n-\t{\r\n-\t\theader: 'ID',\r\n-\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'patient',\r\n-\t\theader: 'Paciente',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'status',\r\n-\t\theader: 'Status',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"min-w-[115px]\">\r\n-\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'schedule',\r\n-\t\theader: 'Cita',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n-\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n-\t\t\t\t</p>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'primaryPhysician',\r\n-\t\theader: 'Doctor',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\r\n-\t\t\tconst doctor = Doctors.find(\r\n-\t\t\t\t(doctor) => doctor.name === appointment.primaryPhysician\r\n-\t\t\t);\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex items-center gap-3\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc={doctor?.image!}\r\n-\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\twidth={100}\r\n-\t\t\t\t\t\theight={100}\r\n-\t\t\t\t\t\tclassName=\"size-8\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<p className=\"whitespace-nowrap\">Dr. {doctor?.name}</p>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\tid: 'actions',\r\n-\t\theader: () => <div className=\"pl-4\">Actions</div>,\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex gap-1\">\r\n-\t\t\t\t\t<AppointmentModal\r\n-\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n-\t\t\t\t\t\tuserId={appointment.userId}\r\n-\t\t\t\t\t\tappointment={appointment}\r\n-\t\t\t\t\t\ttype=\"schedule\"\r\n-\t\t\t\t\t\ttitle=\"Schedule Appointment\"\r\n-\t\t\t\t\t\tdescription=\"Please confirm the following details to schedule.\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<AppointmentModal\r\n-\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n-\t\t\t\t\t\tuserId={appointment.userId}\r\n-\t\t\t\t\t\tappointment={appointment}\r\n-\t\t\t\t\t\ttype=\"cancel\"\r\n-\t\t\t\t\t\ttitle=\"Cancel Appointment\"\r\n-\t\t\t\t\t\tdescription=\"Are you sure you want to cancel your appointment?\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-];\r\n-'use client';\r\n-\r\n-import { ColumnDef } from '@tanstack/react-table';\r\n-import { MoreHorizontal } from 'lucide-react';\r\n-import { Appointment } from '@/types/appwrite.types';\r\n-import { Doctors } from '@/constants';\r\n-import { Button } from '@/components/ui/button';\r\n-import Image from 'next/image';\r\n-import {\r\n-\tDropdownMenu,\r\n-\tDropdownMenuContent,\r\n-\tDropdownMenuItem,\r\n-\tDropdownMenuLabel,\r\n-\tDropdownMenuSeparator,\r\n-\tDropdownMenuTrigger,\r\n-} from '@/components/ui/dropdown-menu';\r\n-import { StatusBadge } from '../StatusBadge';\r\n-import { formatDateTime } from '@/lib/utils';\r\n-\r\n-export const columns: ColumnDef<Appointment>[] = [\r\n-\t{\r\n-\t\theader: 'ID',\r\n-\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'patient',\r\n-\t\theader: 'Paciente',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'status',\r\n-\t\theader: 'Status',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"min-w-[115px]\">\r\n-\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'schedule',\r\n-\t\theader: 'Cita',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n-\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n-\t\t\t\t</p>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'primaryPhysician',\r\n-\t\theader: 'Doctor',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\r\n-\t\t\tconst doctor = Doctors.find(\r\n-\t\t\t\t(doctor) => doctor.name === appointment.primaryPhysician\r\n-\t\t\t);\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex items-center gap-3\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc={doctor?.image!}\r\n-\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\twidth={100}\r\n-\t\t\t\t\t\theight={100}\r\n-\t\t\t\t\t\tclassName=\"size-8\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<p className=\"whitespace-nowrap\">Dr. {doctor?.name}</p>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\tid: 'actions',\r\n-\t\theader: () => <div className=\"pl-4\">Actions</div>,\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex gap-1\">\r\n-\t\t\t\t\t<AppointmentModal\r\n-\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n-\t\t\t\t\t\tuserId={appointment.userId}\r\n-\t\t\t\t\t\tappointment={appointment}\r\n-\t\t\t\t\t\ttype=\"schedule\"\r\n-\t\t\t\t\t\ttitle=\"Schedule Appointment\"\r\n-\t\t\t\t\t\tdescription=\"Please confirm the following details to schedule.\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<AppointmentModal\r\n-\t\t\t\t\t\tpatientId={appointment.patient.$id}\r\n-\t\t\t\t\t\tuserId={appointment.userId}\r\n-\t\t\t\t\t\tappointment={appointment}\r\n-\t\t\t\t\t\ttype=\"cancel\"\r\n-\t\t\t\t\t\ttitle=\"Cancel Appointment\"\r\n-\t\t\t\t\t\tdescription=\"Are you sure you want to cancel your appointment?\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-];\r\n-'use client';\r\n-\r\n-import { ColumnDef } from '@tanstack/react-table';\r\n-import { MoreHorizontal } from 'lucide-react';\r\n-import { Appointment } from '@/types/appwrite.types';\r\n-import { Doctors } from '@/constants';\r\n-import { Button } from '@/components/ui/button';\r\n-import Image from 'next/image';\r\n-import {\r\n-\tDropdownMenu,\r\n-\tDropdownMenuContent,\r\n-\tDropdownMenuItem,\r\n-\tDropdownMenuLabel,\r\n-\tDropdownMenuSeparator,\r\n-\tDropdownMenuTrigger,\r\n-} from '@/components/ui/dropdown-menu';\r\n-import { StatusBadge } from '../StatusBadge';\r\n-import { formatDateTime } from '@/lib/utils';\r\n-\r\n-export const columns: ColumnDef<Appointment>[] = [\r\n-\t{\r\n-\t\theader: 'ID',\r\n-\t\tcell: ({ row }) => <p className=\"text-14-medium\">{(row.index = 1)}</p>,\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'patient',\r\n-\t\theader: 'Paciente',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn <p className=\"text-14-medium\">{row.original.patient?.name}</p>;\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'status',\r\n-\t\theader: 'Status',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"min-w-[115px]\">\r\n-\t\t\t\t\t<StatusBadge status={appointment.status} />\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'schedule',\r\n-\t\theader: 'Cita',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\t\t\treturn (\r\n-\t\t\t\t<p className=\"text-14-regular min-w-[100px]\">\r\n-\t\t\t\t\t{formatDateTime(appointment.schedule).dateTime}\r\n-\t\t\t\t</p>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t{\r\n-\t\taccessorKey: 'primaryPhysician',\r\n-\t\theader: 'Doctor',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst appointment = row.original;\r\n-\r\n-\t\t\tconst doctor = Doctors.find(\r\n-\t\t\t\t(doctor) => doctor.name === appointment.primaryPhysician\r\n-\t\t\t);\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<div className=\"flex items-center gap-3\">\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc={doctor?.image!}\r\n-\t\t\t\t\t\talt=\"doctor\"\r\n-\t\t\t\t\t\twidth={100}\r\n-\t\t\t\t\t\theight={100}\r\n-\t\t\t\t\t\tclassName=\"size-8\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<p className=\"whitespace-nowrap\">Dr. {doctor?.name}</p>\r\n-\t\t\t\t</div>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-\t\r\n-\t{\r\n-\t\tid: 'actions',\r\n-\t\tcell: ({ row }) => {\r\n-\t\t\tconst payment = row.original;\r\n-\r\n-\t\t\treturn (\r\n-\t\t\t\t<DropdownMenu>\r\n-\t\t\t\t\t<DropdownMenuTrigger asChild>\r\n-\t\t\t\t\t\t<Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n-\t\t\t\t\t\t\t<span className=\"sr-only\">Open menu</span>\r\n-\t\t\t\t\t\t\t<MoreHorizontal className=\"h-4 w-4\" />\r\n-\t\t\t\t\t\t</Button>\r\n-\t\t\t\t\t</DropdownMenuTrigger>\r\n-\t\t\t\t\t<DropdownMenuContent align=\"end\">\r\n-\t\t\t\t\t\t<DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n-\t\t\t\t\t\t<DropdownMenuItem\r\n-\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(payment.id)}\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\tCopy payment ID\r\n-\t\t\t\t\t\t</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuSeparator />\r\n-\t\t\t\t\t\t<DropdownMenuItem>View customer</DropdownMenuItem>\r\n-\t\t\t\t\t\t<DropdownMenuItem>View payment details</DropdownMenuItem>\r\n-\t\t\t\t\t</DropdownMenuContent>\r\n-\t\t\t\t</DropdownMenu>\r\n-\t\t\t);\r\n-\t\t},\r\n-\t},\r\n-];\r\n"
                }
            ],
            "date": 1722291574616,
            "name": "Commit-0",
            "content": "import React from 'react'\r\n\r\nfunction columns() {\r\n  return (\r\n    <div>columns</div>\r\n  )\r\n}\r\n\r\nexport default columns"
        }
    ]
}