{
    "sourceFile": "components/FileUploader.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1721252296191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1721252855036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,21 @@\n-import React from 'react'\r\n+'use client'\r\n+import React, { useCallback } from 'react';\r\n+import { useDropzone } from 'react-dropzone';\r\n \r\n-function FileUploader() {\r\n-  return (\r\n-    <div>FileUploader</div>\r\n-  )\r\n\\ No newline at end of file\n+function MyDropzone() {\r\n+\tconst onDrop = useCallback((acceptedFiles) => {\r\n+\t\t// Do something with the files\r\n+\t}, []);\r\n+\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n+\r\n+\treturn (\r\n+\t\t<div {...getRootProps()}>\r\n+\t\t\t<input {...getInputProps()} />\r\n+\t\t\t{isDragActive ? (\r\n+\t\t\t\t<p>Drop the files here ...</p>\r\n+\t\t\t) : (\r\n+\t\t\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n+\t\t\t)}\r\n+\t\t</div>\r\n+\t);\r\n }\r\n-\r\n-export default FileUploader\n"
                },
                {
                    "date": 1721252896284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,21 @@\n+'use client';\r\n+import React, { useCallback } from 'react';\r\n+import { useDropzone } from 'react-dropzone';\r\n+\r\n+export const FileUploader = ({files, onChange}) => {\r\n+\tconst onDrop = useCallback((acceptedFiles) => {\r\n+\t\t// Do something with the files\r\n+\t}, []);\r\n+\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n+\r\n+\treturn (\r\n+\t\t<div {...getRootProps()}>\r\n+\t\t\t<input {...getInputProps()} />\r\n+\t\t\t{isDragActive ? (\r\n+\t\t\t\t<p>Drop the files here ...</p>\r\n+\t\t\t) : (\r\n+\t\t\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n+\t\t\t)}\r\n+\t\t</div>\r\n+\t);\r\n+};\r\n"
                },
                {
                    "date": 1721252971780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,14 @@\n 'use client';\r\n import React, { useCallback } from 'react';\r\n import { useDropzone } from 'react-dropzone';\r\n \r\n-export const FileUploader = ({files, onChange}) => {\r\n+interface Props {\r\n+\tfiles: File[];\r\n+\tonChange: (files: File[]) => void;\r\n+}\r\n+\r\n+export const FileUploader = ({ files, onChange }: Props) => {\r\n \tconst onDrop = useCallback((acceptedFiles) => {\r\n \t\t// Do something with the files\r\n \t}, []);\r\n \tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n@@ -18,25 +23,4 @@\n \t\t\t)}\r\n \t\t</div>\r\n \t);\r\n };\r\n-'use client'\r\n-import React, { useCallback } from 'react';\r\n-import { useDropzone } from 'react-dropzone';\r\n-\r\n-function MyDropzone() {\r\n-\tconst onDrop = useCallback((acceptedFiles) => {\r\n-\t\t// Do something with the files\r\n-\t}, []);\r\n-\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n-\r\n-\treturn (\r\n-\t\t<div {...getRootProps()}>\r\n-\t\t\t<input {...getInputProps()} />\r\n-\t\t\t{isDragActive ? (\r\n-\t\t\t\t<p>Drop the files here ...</p>\r\n-\t\t\t) : (\r\n-\t\t\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n-\t\t\t)}\r\n-\t\t</div>\r\n-\t);\r\n-}\r\n"
                },
                {
                    "date": 1721253035845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,26 @@\n+'use client';\r\n+import React, { useCallback } from 'react';\r\n+import { useDropzone } from 'react-dropzone';\r\n+\r\n+interface Props {\r\n+\tfiles: File[] | undefined;\r\n+\tonChange: (files: File[]) => void;\r\n+}\r\n+\r\n+export const FileUploader = ({ files, onChange }: Props) => {\r\n+\tconst onDrop = useCallback((acceptedFiles) => {\r\n+\t\t// Do something with the files\r\n+\t}, []);\r\n+\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n+\r\n+\treturn (\r\n+\t\t<div {...getRootProps()}>\r\n+\t\t\t<input {...getInputProps()} />\r\n+\t\t\t{isDragActive ? (\r\n+\t\t\t\t<p>Drop the files here ...</p>\r\n+\t\t\t) : (\r\n+\t\t\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n+\t\t\t)}\r\n+\t\t</div>\r\n+\t);\r\n+};\r\n"
                },
                {
                    "date": 1721253065518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,26 @@\n+'use client';\r\n+import React, { useCallback } from 'react';\r\n+import { useDropzone } from 'react-dropzone';\r\n+\r\n+interface Props {\r\n+\tfiles: File[] | undefined;\r\n+\tonChange: (files: File[]) => void;\r\n+}\r\n+\r\n+export const FileUploader = ({ files, onChange }: Props) => {\r\n+\tconst onDrop = useCallback((acceptedFiles: File[]) => {\r\n+\t\tonChange(acceptedFiles);\r\n+\t}, []);\r\n+\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n+\r\n+\treturn (\r\n+\t\t<div {...getRootProps()}>\r\n+\t\t\t<input {...getInputProps()} />\r\n+\t\t\t{isDragActive ? (\r\n+\t\t\t\t<p>Drop the files here ...</p>\r\n+\t\t\t) : (\r\n+\t\t\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n+\t\t\t)}\r\n+\t\t</div>\r\n+\t);\r\n+};\r\n"
                },
                {
                    "date": 1721253115072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n \t}, []);\r\n \tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n \r\n \treturn (\r\n-\t\t<div {...getRootProps()}>\r\n+\t\t<div {...getRootProps()} className='file-upload'>\r\n \t\t\t<input {...getInputProps()} />\r\n \t\t\t{isDragActive ? (\r\n \t\t\t\t<p>Drop the files here ...</p>\r\n \t\t\t) : (\r\n@@ -23,56 +23,4 @@\n \t\t\t)}\r\n \t\t</div>\r\n \t);\r\n };\r\n-'use client';\r\n-import React, { useCallback } from 'react';\r\n-import { useDropzone } from 'react-dropzone';\r\n-\r\n-interface Props {\r\n-\tfiles: File[] | undefined;\r\n-\tonChange: (files: File[]) => void;\r\n-}\r\n-\r\n-export const FileUploader = ({ files, onChange }: Props) => {\r\n-\tconst onDrop = useCallback((acceptedFiles) => {\r\n-\t\t// Do something with the files\r\n-\t}, []);\r\n-\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n-\r\n-\treturn (\r\n-\t\t<div {...getRootProps()}>\r\n-\t\t\t<input {...getInputProps()} />\r\n-\t\t\t{isDragActive ? (\r\n-\t\t\t\t<p>Drop the files here ...</p>\r\n-\t\t\t) : (\r\n-\t\t\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n-\t\t\t)}\r\n-\t\t</div>\r\n-\t);\r\n-};\r\n-'use client';\r\n-import React, { useCallback } from 'react';\r\n-import { useDropzone } from 'react-dropzone';\r\n-\r\n-interface Props {\r\n-\tfiles: File[];\r\n-\tonChange: (files: File[]) => void;\r\n-}\r\n-\r\n-export const FileUploader = ({ files, onChange }: Props) => {\r\n-\tconst onDrop = useCallback((acceptedFiles) => {\r\n-\t\t// Do something with the files\r\n-\t}, []);\r\n-\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n-\r\n-\treturn (\r\n-\t\t<div {...getRootProps()}>\r\n-\t\t\t<input {...getInputProps()} />\r\n-\t\t\t{isDragActive ? (\r\n-\t\t\t\t<p>Drop the files here ...</p>\r\n-\t\t\t) : (\r\n-\t\t\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n-\t\t\t)}\r\n-\t\t</div>\r\n-\t);\r\n-};\r\n"
                },
                {
                    "date": 1721253239557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n 'use client';\r\n import React, { useCallback } from 'react';\r\n import { useDropzone } from 'react-dropzone';\r\n+import Image from 'next/image';\r\n \r\n interface Props {\r\n \tfiles: File[] | undefined;\r\n \tonChange: (files: File[]) => void;\r\n@@ -13,10 +14,19 @@\n \t}, []);\r\n \tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n \r\n \treturn (\r\n-\t\t<div {...getRootProps()} className='file-upload'>\r\n+\t\t<div {...getRootProps()} className=\"file-upload\">\r\n \t\t\t<input {...getInputProps()} />\r\n+\t\t\t{files && files?.length > 0 && (\r\n+\t\t\t\t<Image\r\n+\t\t\t\t\tsrc={convertFileToUrl(files[0])}\r\n+\t\t\t\t\twidth={1000}\r\n+\t\t\t\t\theight={1000}\r\n+\t\t\t\t\talt=\"upload image\"\r\n+\t\t\t\t\tclassName=\"max-h-[400px] overflow-hidden\"\r\n+\t\t\t\t/>\r\n+\t\t\t)}\r\n \t\t\t{isDragActive ? (\r\n \t\t\t\t<p>Drop the files here ...</p>\r\n \t\t\t) : (\r\n \t\t\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n"
                },
                {
                    "date": 1721253255213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n \t\t\t\t\tsrc={convertFileToUrl(files[0])}\r\n \t\t\t\t\twidth={1000}\r\n \t\t\t\t\theight={1000}\r\n \t\t\t\t\talt=\"upload image\"\r\n-\t\t\t\t\tclassName=\"max-h-[400px] overflow-hidden\"\r\n+\t\t\t\t\tclassName=\"max-h-[400px] overflow-hidden object-cover\"\r\n \t\t\t\t/>\r\n \t\t\t)}\r\n \t\t\t{isDragActive ? (\r\n \t\t\t\t<p>Drop the files here ...</p>\r\n"
                },
                {
                    "date": 1721253386984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,15 +18,19 @@\n \t\t<div {...getRootProps()} className=\"file-upload\">\r\n \t\t\t<input {...getInputProps()} />\r\n \t\t\t{files && files?.length > 0 && (\r\n \t\t\t\t<Image\r\n-\t\t\t\t\tsrc={convertFileToUrl(files[0])}\r\n+\t\t\t\t\t// src={convertFileToUrl(files[0])}\r\n \t\t\t\t\twidth={1000}\r\n \t\t\t\t\theight={1000}\r\n \t\t\t\t\talt=\"upload image\"\r\n \t\t\t\t\tclassName=\"max-h-[400px] overflow-hidden object-cover\"\r\n \t\t\t\t/>\r\n-\t\t\t)}\r\n+\t\t\t): (\r\n+            <>\r\n+                <Image src='/assets/icons/upload.svg' alt='upload' width={40} height={40}/>\r\n+            </>\r\n+        )\r\n \t\t\t{isDragActive ? (\r\n \t\t\t\t<p>Drop the files here ...</p>\r\n \t\t\t) : (\r\n \t\t\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n"
                },
                {
                    "date": 1721253427225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,21 +16,26 @@\n \r\n \treturn (\r\n \t\t<div {...getRootProps()} className=\"file-upload\">\r\n \t\t\t<input {...getInputProps()} />\r\n-\t\t\t{files && files?.length > 0 && (\r\n+\t\t\t{files && files?.length > 0 ? (\r\n \t\t\t\t<Image\r\n \t\t\t\t\t// src={convertFileToUrl(files[0])}\r\n \t\t\t\t\twidth={1000}\r\n \t\t\t\t\theight={1000}\r\n \t\t\t\t\talt=\"upload image\"\r\n \t\t\t\t\tclassName=\"max-h-[400px] overflow-hidden object-cover\"\r\n \t\t\t\t/>\r\n-\t\t\t): (\r\n-            <>\r\n-                <Image src='/assets/icons/upload.svg' alt='upload' width={40} height={40}/>\r\n-            </>\r\n-        )\r\n+\t\t\t) : (\r\n+\t\t\t\t<>\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/upload.svg\"\r\n+\t\t\t\t\t\talt=\"upload\"\r\n+\t\t\t\t\t\twidth={40}\r\n+\t\t\t\t\t\theight={40}\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</>\r\n+\t\t\t)}\r\n \t\t\t{isDragActive ? (\r\n \t\t\t\t<p>Drop the files here ...</p>\r\n \t\t\t) : (\r\n \t\t\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n"
                },
                {
                    "date": 1721254613089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,46 @@\n+'use client';\r\n+import React, { useCallback } from 'react';\r\n+import { useDropzone } from 'react-dropzone';\r\n+import Image from 'next/image';\r\n+import { convertFileToUrl } from \"@/lib/utils\";\r\n+\r\n+interface Props {\r\n+\tfiles: File[] | undefined;\r\n+\tonChange: (files: File[]) => void;\r\n+}\r\n+\r\n+export const FileUploader = ({ files, onChange }: Props) => {\r\n+\tconst onDrop = useCallback((acceptedFiles: File[]) => {\r\n+\t\tonChange(acceptedFiles);\r\n+\t}, []);\r\n+\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n+\r\n+\treturn (\r\n+\t\t<div {...getRootProps()} className=\"file-upload\">\r\n+\t\t\t<input {...getInputProps()} />\r\n+\t\t\t{files && files?.length > 0 ? (\r\n+\t\t\t\t<Image\r\n+\t\t\t\t\tsrc={convertFileToUrl(files[0])}\r\n+\t\t\t\t\twidth={1000}\r\n+\t\t\t\t\theight={1000}\r\n+\t\t\t\t\talt=\"upload image\"\r\n+\t\t\t\t\tclassName=\"max-h-[400px] overflow-hidden object-cover\"\r\n+\t\t\t\t/>\r\n+\t\t\t) : (\r\n+\t\t\t\t<>\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\tsrc=\"/assets/icons/upload.svg\"\r\n+\t\t\t\t\t\talt=\"upload\"\r\n+\t\t\t\t\t\twidth={40}\r\n+\t\t\t\t\t\theight={40}\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t</>\r\n+\t\t\t)}\r\n+\t\t\t{isDragActive ? (\r\n+\t\t\t\t<p>Drop the files here ...</p>\r\n+\t\t\t) : (\r\n+\t\t\t\t<p>Drag drop some files here, or click to select files</p>\r\n+\t\t\t)}\r\n+\t\t</div>\r\n+\t);\r\n+};\r\n"
                },
                {
                    "date": 1721255791191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,49 +43,4 @@\n \t\t\t)}\r\n \t\t</div>\r\n \t);\r\n };\r\n-'use client';\r\n-import React, { useCallback } from 'react';\r\n-import { useDropzone } from 'react-dropzone';\r\n-import Image from 'next/image';\r\n-\r\n-interface Props {\r\n-\tfiles: File[] | undefined;\r\n-\tonChange: (files: File[]) => void;\r\n-}\r\n-\r\n-export const FileUploader = ({ files, onChange }: Props) => {\r\n-\tconst onDrop = useCallback((acceptedFiles: File[]) => {\r\n-\t\tonChange(acceptedFiles);\r\n-\t}, []);\r\n-\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n-\r\n-\treturn (\r\n-\t\t<div {...getRootProps()} className=\"file-upload\">\r\n-\t\t\t<input {...getInputProps()} />\r\n-\t\t\t{files && files?.length > 0 ? (\r\n-\t\t\t\t<Image\r\n-\t\t\t\t\t// src={convertFileToUrl(files[0])}\r\n-\t\t\t\t\twidth={1000}\r\n-\t\t\t\t\theight={1000}\r\n-\t\t\t\t\talt=\"upload image\"\r\n-\t\t\t\t\tclassName=\"max-h-[400px] overflow-hidden object-cover\"\r\n-\t\t\t\t/>\r\n-\t\t\t) : (\r\n-\t\t\t\t<>\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\tsrc=\"/assets/icons/upload.svg\"\r\n-\t\t\t\t\t\talt=\"upload\"\r\n-\t\t\t\t\t\twidth={40}\r\n-\t\t\t\t\t\theight={40}\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</>\r\n-\t\t\t)}\r\n-\t\t\t{isDragActive ? (\r\n-\t\t\t\t<p>Drop the files here ...</p>\r\n-\t\t\t) : (\r\n-\t\t\t\t<p>Drag 'n' drop some files here, or click to select files</p>\r\n-\t\t\t)}\r\n-\t\t</div>\r\n-\t);\r\n-};\r\n"
                },
                {
                    "date": 1721255952788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n 'use client';\r\n import React, { useCallback } from 'react';\r\n import { useDropzone } from 'react-dropzone';\r\n import Image from 'next/image';\r\n-import { convertFileToUrl } from \"@/lib/utils\";\r\n+import { convertFileToUrl } from '@/lib/utils';\r\n \r\n interface Props {\r\n \tfiles: File[] | undefined;\r\n \tonChange: (files: File[]) => void;\r\n@@ -33,8 +33,15 @@\n \t\t\t\t\t\talt=\"upload\"\r\n \t\t\t\t\t\twidth={40}\r\n \t\t\t\t\t\theight={40}\r\n \t\t\t\t\t/>\r\n+\t\t\t\t\t<div className=\"file-upload_label\">\r\n+\t\t\t\t\t\t<p className=\"text-14-regular\">\r\n+\t\t\t\t\t\t\t<span className=\"text-green-500\">Click para subir</span> o\r\n+\t\t\t\t\t\t\tarrastra y suelta\r\n+\t\t\t\t\t\t</p>\r\n+\t\t\t\t\t\t<p>SVG, PNG, JPG o Gif (max 800x400)</p>\r\n+\t\t\t\t\t</div>\r\n \t\t\t\t</>\r\n \t\t\t)}\r\n \t\t\t{isDragActive ? (\r\n \t\t\t\t<p>Drop the files here ...</p>\r\n"
                },
                {
                    "date": 1721256033398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n export const FileUploader = ({ files, onChange }: Props) => {\r\n \tconst onDrop = useCallback((acceptedFiles: File[]) => {\r\n \t\tonChange(acceptedFiles);\r\n \t}, []);\r\n-\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n+\tconst { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n \r\n \treturn (\r\n \t\t<div {...getRootProps()} className=\"file-upload\">\r\n \t\t\t<input {...getInputProps()} />\r\n@@ -42,12 +42,7 @@\n \t\t\t\t\t\t<p>SVG, PNG, JPG o Gif (max 800x400)</p>\r\n \t\t\t\t\t</div>\r\n \t\t\t\t</>\r\n \t\t\t)}\r\n-\t\t\t{isDragActive ? (\r\n-\t\t\t\t<p>Drop the files here ...</p>\r\n-\t\t\t) : (\r\n-\t\t\t\t<p>Drag drop some files here, or click to select files</p>\r\n-\t\t\t)}\r\n \t\t</div>\r\n \t);\r\n };\r\n"
                },
                {
                    "date": 1721256163556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n \t\t\t\t\t\theight={40}\r\n \t\t\t\t\t/>\r\n \t\t\t\t\t<div className=\"file-upload_label\">\r\n \t\t\t\t\t\t<p className=\"text-14-regular\">\r\n-\t\t\t\t\t\t\t<span className=\"text-green-500\">Click para subir</span> o\r\n+\t\t\t\t\t\t\t<span className=\"text-green-500\">click para subir</span> o\r\n \t\t\t\t\t\t\tarrastra y suelta\r\n \t\t\t\t\t\t</p>\r\n \t\t\t\t\t\t<p>SVG, PNG, JPG o Gif (max 800x400)</p>\r\n \t\t\t\t\t</div>\r\n"
                },
                {
                    "date": 1721257395672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,11 +9,14 @@\n \tonChange: (files: File[]) => void;\r\n }\r\n \r\n export const FileUploader = ({ files, onChange }: Props) => {\r\n-\tconst onDrop = useCallback((acceptedFiles: File[]) => {\r\n-\t\tonChange(acceptedFiles);\r\n-\t}, []);\r\n+\tconst onDrop = useCallback(\r\n+\t\t(acceptedFiles: File[]) => {\r\n+\t\t\tonChange(acceptedFiles);\r\n+\t\t},\r\n+\t\t[onChange]\r\n+\t);\r\n \tconst { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n \r\n \treturn (\r\n \t\t<div {...getRootProps()} className=\"file-upload\">\r\n"
                }
            ],
            "date": 1721252296191,
            "name": "Commit-0",
            "content": "import React from 'react'\r\n\r\nfunction FileUploader() {\r\n  return (\r\n    <div>FileUploader</div>\r\n  )\r\n}\r\n\r\nexport default FileUploader"
        }
    ]
}